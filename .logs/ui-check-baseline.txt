
> @repo/ui@0.0.0 check K:\driplo-turbo-1\packages\ui
> svelte-check --tsconfig ./tsconfig.json

Loading svelte-check in workspace: k:\driplo-turbo-1\packages\ui
Getting Svelte diagnostics...

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AdminModal.svelte[39m:89:3
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m  <!-- Backdrop -->
  [35m<div
    class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 flex items-start justify-center pt-10 sm:pt-20"
    onclick={handleBackdropClick}
    role="dialog"
    aria-modal="true"
    aria-labelledby="modal-title"
  >
    <!-- Modal Container -->
    <div
      class="relative mx-auto border shadow-lg rounded-md bg-white {sizeClasses[size]} {variantClasses[variant]} {className}"
      onclick={(e) => e.stopPropagation()}
    >
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b {variantClasses[variant]}">
        <h3
          id="modal-title"
          class="text-lg font-medium {titleVariantClasses[variant]}"
        >
          {title}
        </h3>

        {#if showCloseButton}
          <button
            onclick={handleClose}
            class="w-8 h-8 flex items-center justify-center text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100 transition-colors"
            aria-label="Close modal"
            type="button"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        {/if}
      </div>

      <!-- Content -->
      <div class="p-4">
        <slot />
      </div>

      <!-- Footer (if provided) -->
      {#if $$slots.footer}
        <div class="flex items-center justify-end gap-3 px-4 py-3 border-t border-gray-200 bg-gray-50 rounded-b-md">
          <slot name="footer" />
        </div>
      {/if}
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AdminModal.svelte[39m:89:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  <!-- Backdrop -->
  [35m<div
    class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 flex items-start justify-center pt-10 sm:pt-20"
    onclick={handleBackdropClick}
    role="dialog"
    aria-modal="true"
    aria-labelledby="modal-title"
  >
    <!-- Modal Container -->
    <div
      class="relative mx-auto border shadow-lg rounded-md bg-white {sizeClasses[size]} {variantClasses[variant]} {className}"
      onclick={(e) => e.stopPropagation()}
    >
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b {variantClasses[variant]}">
        <h3
          id="modal-title"
          class="text-lg font-medium {titleVariantClasses[variant]}"
        >
          {title}
        </h3>

        {#if showCloseButton}
          <button
            onclick={handleClose}
            class="w-8 h-8 flex items-center justify-center text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100 transition-colors"
            aria-label="Close modal"
            type="button"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        {/if}
      </div>

      <!-- Content -->
      <div class="p-4">
        <slot />
      </div>

      <!-- Footer (if provided) -->
      {#if $$slots.footer}
        <div class="flex items-center justify-end gap-3 px-4 py-3 border-t border-gray-200 bg-gray-50 rounded-b-md">
          <slot name="footer" />
        </div>
      {/if}
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AdminModal.svelte[39m:97:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    <!-- Modal Container -->
    [35m<div
      class="relative mx-auto border shadow-lg rounded-md bg-white {sizeClasses[size]} {variantClasses[variant]} {className}"
      onclick={(e) => e.stopPropagation()}
    >
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b {variantClasses[variant]}">
        <h3
          id="modal-title"
          class="text-lg font-medium {titleVariantClasses[variant]}"
        >
          {title}
        </h3>

        {#if showCloseButton}
          <button
            onclick={handleClose}
            class="w-8 h-8 flex items-center justify-center text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100 transition-colors"
            aria-label="Close modal"
            type="button"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        {/if}
      </div>

      <!-- Content -->
      <div class="p-4">
        <slot />
      </div>

      <!-- Footer (if provided) -->
      {#if $$slots.footer}
        <div class="flex items-center justify-end gap-3 px-4 py-3 border-t border-gray-200 bg-gray-50 rounded-b-md">
          <slot name="footer" />
        </div>
      {/if}
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AdminModal.svelte[39m:97:5
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <!-- Modal Container -->
    [35m<div
      class="relative mx-auto border shadow-lg rounded-md bg-white {sizeClasses[size]} {variantClasses[variant]} {className}"
      onclick={(e) => e.stopPropagation()}
    >
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b {variantClasses[variant]}">
        <h3
          id="modal-title"
          class="text-lg font-medium {titleVariantClasses[variant]}"
        >
          {title}
        </h3>

        {#if showCloseButton}
          <button
            onclick={handleClose}
            class="w-8 h-8 flex items-center justify-center text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-100 transition-colors"
            aria-label="Close modal"
            type="button"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        {/if}
      </div>

      <!-- Content -->
      <div class="p-4">
        <slot />
      </div>

      <!-- Footer (if provided) -->
      {#if $$slots.footer}
        <div class="flex items-center justify-end gap-3 px-4 py-3 border-t border-gray-200 bg-gray-50 rounded-b-md">
          <slot name="footer" />
        </div>
      {/if}
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AdminModal.svelte[39m:126:9
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m      <div class="p-4">
        [35m<slot />[36m
      </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AdminModal.svelte[39m:132:11
[33mWarn[39m: Using `<slot>` to render parent content is deprecated. Use `{@render ...}` tags instead
https://svelte.dev/e/slot_element_deprecated (svelte)
[36m        <div class="flex items-center justify-end gap-3 px-4 py-3 border-t border-gray-200 bg-gray-50 rounded-b-md">
          [35m<slot name="footer" />[36m
        </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AvatarSelector.svelte[39m:111:99
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m        <div class="relative overflow-hidden rounded-xl border-2 transition-colors {selected === avatar ? 'border-black' : 'border-gray-200 hover:border-gray-300'}">
          <img src={avatar} alt="Avatar option" class="w-full h-full object-cover" loading="lazy" [35menhanced[36m />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AvatarUploader.svelte[39m:17:5
[31mError[39m: Property 'currentAvatar' does not exist on type 'Props'. (ts)
[36m  let { 
    [35mcurrentAvatar[36m = '',
    onUpload,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\AvatarUploader.svelte[39m:96:31
[31mError[39m: Property 'contains' does not exist on type 'EventTarget'. (ts)
[36m    event.preventDefault();
    if (!event.currentTarget?.[35mcontains[36m?.(event.relatedTarget as Node)) {
      isDragging = false;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\types\product.ts[39m:16:18
[31mError[39m: Interface 'UIProduct' incorrectly extends interface '{ archived_at: string | null; auto_archive_after_days: number | null; boost_history_id: string | null; boost_priority: number | null; boost_type: string | null; boosted_until: string | null; ... 43 more ...; view_count: number | null; }'.
  Types of property 'slug' are incompatible.
    Type 'string | undefined' is not assignable to type 'string | null'.
      Type 'undefined' is not assignable to type 'string | null'. 
[36m// UI-specific product interface that extends database product with UI-only computed fields
export interface [35mUIProduct[36m extends DatabaseProduct {
  // UI-specific computed properties (NEVER override database fields)[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\types\product.ts[39m:107:5
[31mError[39m: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'. 
[36m    sellerId: product.seller_id,
    [35mcreatedAt[36m: product.created_at,
    is_promoted: product.is_featured || false,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Input.svelte[39m:71:6
[31mError[39m: Type 'string | undefined' is not assignable to type 'FullAutoFill | null | undefined'.
  Type 'string' is not assignable to type 'FullAutoFill | null | undefined'. (ts)
[36m    {name}
    {[35mautocomplete[36m}
    inputmode={inputmode || (type === 'email' ? 'email' : type === 'tel' ? 'tel' : type === 'number' ? 'numeric' : undefined)}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\tooltip\Tooltip.svelte[39m:133:5
[31mError[39m: Object literal may only specify known properties, and 'closeOnEscape' does not exist in type 'CreateTooltipProps'. (ts)
[36m    closeDelay,
    [35mcloseOnEscape[36m,
    closeOnPointerDown,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryDropdown.svelte[39m:163:115
[31mError[39m: Property 'currency' does not exist on type 'UIProduct'. (ts)
[36m            <p class="text-xs font-medium text-[color:var(--text-primary)] truncate mb-1">{product.title}</p>
            <p class="text-xs font-semibold text-[color:var(--text-primary)]">{formatPrice(product.price, product.[35mcurrency[36m)}</p>
          </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SellerProfileCard.svelte[39m:81:14
[31mError[39m: This comparison appears to be unintentional because the types '"pro" | "brand" | "new" | undefined' and '"admin"' have no overlap. (ts)
[36m      {#if seller.account_type || hasVerifiedBadge}
        {#if [35mseller.account_type === 'admin'[36m}
          <!-- Keep admin text badge for authority -->[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SellerProfileCard.svelte[39m:84:19
[31mError[39m: Property 'badge_admin' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          <span class="inline-block px-1.5 py-0.5 text-[8px] font-bold rounded-full bg-red-600 text-white">
            {i18n.[35mbadge_admin[36m()}
          </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SellerProfileCard.svelte[39m:92:19
[31mError[39m: This comparison appears to be unintentional because the types '"new" | undefined' and '"personal"' have no overlap. (ts)
[36m          <ProBadge size="s" position="static" />
        {:else if [35mseller.account_type === 'personal'[36m || hasVerifiedBadge}
          <!-- Clean verified badge -->[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SellerQuickView.svelte[39m:127:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  <!-- Backdrop with click to close -->
  [35m<div 
    class="fixed inset-0 bg-black/50 backdrop-blur-sm"
    style="z-index: var(--z-max, 999999)"
    transition:fade={{ duration: 200 }}
    onclick={onClose}
    role="button"
    tabindex="-1"
    aria-label="Close modal"
  >
    <!-- Modal - Always centered -->
    <div 
      class="fixed inset-0 flex items-center justify-center p-4 pointer-events-none"
      style="z-index: calc(var(--z-max, 999999) + 1)"
      transition:fly={{ y: 20, opacity: 0, duration: 200 }}
    >
      <div 
        class="bg-white rounded-2xl w-full max-w-lg shadow-2xl overflow-hidden flex flex-col max-h-[85vh] relative pointer-events-auto"
        onclick={(e) => e.stopPropagation()}
      >
        
        <!-- Close button -->
        <button
          onclick={onClose}
          class="absolute top-3 right-3 p-1.5 rounded-full bg-white/80 hover:bg-gray-100 transition-colors z-20"
          aria-label="Close"
        >
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      
      <!-- Compact Header with Avatar and Stats -->
      <div class="p-6 pb-3">
        <div class="flex items-start gap-4">
          <!-- Avatar -->
          <img 
            src={seller.avatar_url} 
            alt={seller.username}
            class="w-16 h-16 rounded-full border-2 border-gray-100 shadow-sm"
          />
          
          <!-- Info -->
          <div class="flex-1">
            <h2 class="text-xl font-bold text-gray-900">{seller.username}</h2>
            <p class="text-sm text-gray-500">Since {memberSince}</p>
            {#if seller.location}
              <p class="text-sm text-gray-600 flex items-center gap-1 mt-1">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                {seller.location}
              </p>
            {/if}
          </div>
          
          <!-- Quick Stats -->
          <div class="text-right">
            <div class="text-lg font-semibold text-gray-900">{seller.itemCount}</div>
            <div class="text-xs text-gray-500">items</div>
          </div>
        </div>
        
        {#if seller.bio}
          <p class="text-sm text-gray-600 mt-3">{seller.bio}</p>
        {/if}
        
        <!-- Compact Stats Bar -->
        <div class="flex justify-around mt-4 pt-3 border-t border-gray-100">
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">{seller.totalSales || 0}</p>
            <p class="text-xs text-gray-500">Sales</p>
          </div>
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">⭐ {seller.rating?.toFixed(1) || '5.0'}</p>
            <p class="text-xs text-gray-500">Rating</p>
          </div>
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">{seller.itemCount === 1 ? 'New' : 'Active'}</p>
            <p class="text-xs text-gray-500">Seller</p>
          </div>
        </div>
      </div>
      
      <!-- Products Section - Always show even if empty -->
      <div class="flex-1 overflow-y-auto">
        <div class="px-6 pb-4">
          <h3 class="text-sm font-semibold text-gray-700 mb-3">Active listings</h3>
          {#if loadingProducts}
            <!-- Loading state -->
            <div class="grid grid-cols-3 gap-2">
              {#each Array(6) as _}
                <div class="aspect-square rounded-lg bg-gray-100 animate-pulse"></div>
              {/each}
            </div>
            <p class="text-center text-sm text-gray-500 mt-4">Loading products...</p>
          {:else if fetchError}
            <!-- Error state -->
            <div class="text-center py-8">
              <div class="w-16 h-16 mx-auto bg-red-100 rounded-full flex items-center justify-center mb-4">
                <svg class="w-8 h-8 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <p class="text-sm text-gray-500 mb-2">Failed to load listings</p>
              <button 
                onclick={fetchSellerProducts}
                class="text-xs text-blue-600 hover:text-blue-800 font-medium"
              >
                Try again
              </button>
            </div>
          {:else if displayProducts && displayProducts.length > 0}
            <div class="grid grid-cols-3 gap-2">
              {#each displayProducts.slice(0, 9) as product}
                <div class="group cursor-pointer">
                  <div class="aspect-square rounded-lg overflow-hidden bg-gray-100 mb-1">
                    <img 
                      src={product.image} 
                      alt={product.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform"
                      loading="lazy"
                    />
                  </div>
                  <p class="text-xs font-semibold text-gray-900">£{typeof product.price === 'number' ? product.price.toFixed(2) : product.price}</p>
                </div>
              {/each}
            </div>
          {:else}
            <!-- Empty state -->
            <div class="text-center py-8">
              <div class="w-16 h-16 mx-auto bg-gray-100 rounded-full flex items-center justify-center mb-4">
                <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                </svg>
              </div>
              <p class="text-sm text-gray-500">No active listings</p>
            </div>
          {/if}
        </div>
      </div>
      
      <!-- Actions - Only Follow button, no redirect -->
      <div class="p-4 border-t border-gray-100 flex gap-2">
        {#if onFollow}
          <button
            onclick={() => onFollow?.(seller.id)}
            class="flex-1 py-2.5 px-5 rounded-lg font-medium transition-colors border text-sm
              {isFollowing 
                ? 'border-gray-200 text-gray-600 hover:bg-gray-50' 
                : 'border-gray-300 text-black hover:bg-gray-50'}"
          >
            {isFollowing ? '✓ Following' : 'Follow'}
          </button>
        {/if}
      </div>
      </div>
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SellerQuickView.svelte[39m:142:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m    >
      [35m<div 
        class="bg-white rounded-2xl w-full max-w-lg shadow-2xl overflow-hidden flex flex-col max-h-[85vh] relative pointer-events-auto"
        onclick={(e) => e.stopPropagation()}
      >
        
        <!-- Close button -->
        <button
          onclick={onClose}
          class="absolute top-3 right-3 p-1.5 rounded-full bg-white/80 hover:bg-gray-100 transition-colors z-20"
          aria-label="Close"
        >
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      
      <!-- Compact Header with Avatar and Stats -->
      <div class="p-6 pb-3">
        <div class="flex items-start gap-4">
          <!-- Avatar -->
          <img 
            src={seller.avatar_url} 
            alt={seller.username}
            class="w-16 h-16 rounded-full border-2 border-gray-100 shadow-sm"
          />
          
          <!-- Info -->
          <div class="flex-1">
            <h2 class="text-xl font-bold text-gray-900">{seller.username}</h2>
            <p class="text-sm text-gray-500">Since {memberSince}</p>
            {#if seller.location}
              <p class="text-sm text-gray-600 flex items-center gap-1 mt-1">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                {seller.location}
              </p>
            {/if}
          </div>
          
          <!-- Quick Stats -->
          <div class="text-right">
            <div class="text-lg font-semibold text-gray-900">{seller.itemCount}</div>
            <div class="text-xs text-gray-500">items</div>
          </div>
        </div>
        
        {#if seller.bio}
          <p class="text-sm text-gray-600 mt-3">{seller.bio}</p>
        {/if}
        
        <!-- Compact Stats Bar -->
        <div class="flex justify-around mt-4 pt-3 border-t border-gray-100">
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">{seller.totalSales || 0}</p>
            <p class="text-xs text-gray-500">Sales</p>
          </div>
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">⭐ {seller.rating?.toFixed(1) || '5.0'}</p>
            <p class="text-xs text-gray-500">Rating</p>
          </div>
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">{seller.itemCount === 1 ? 'New' : 'Active'}</p>
            <p class="text-xs text-gray-500">Seller</p>
          </div>
        </div>
      </div>
      
      <!-- Products Section - Always show even if empty -->
      <div class="flex-1 overflow-y-auto">
        <div class="px-6 pb-4">
          <h3 class="text-sm font-semibold text-gray-700 mb-3">Active listings</h3>
          {#if loadingProducts}
            <!-- Loading state -->
            <div class="grid grid-cols-3 gap-2">
              {#each Array(6) as _}
                <div class="aspect-square rounded-lg bg-gray-100 animate-pulse"></div>
              {/each}
            </div>
            <p class="text-center text-sm text-gray-500 mt-4">Loading products...</p>
          {:else if fetchError}
            <!-- Error state -->
            <div class="text-center py-8">
              <div class="w-16 h-16 mx-auto bg-red-100 rounded-full flex items-center justify-center mb-4">
                <svg class="w-8 h-8 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <p class="text-sm text-gray-500 mb-2">Failed to load listings</p>
              <button 
                onclick={fetchSellerProducts}
                class="text-xs text-blue-600 hover:text-blue-800 font-medium"
              >
                Try again
              </button>
            </div>
          {:else if displayProducts && displayProducts.length > 0}
            <div class="grid grid-cols-3 gap-2">
              {#each displayProducts.slice(0, 9) as product}
                <div class="group cursor-pointer">
                  <div class="aspect-square rounded-lg overflow-hidden bg-gray-100 mb-1">
                    <img 
                      src={product.image} 
                      alt={product.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform"
                      loading="lazy"
                    />
                  </div>
                  <p class="text-xs font-semibold text-gray-900">£{typeof product.price === 'number' ? product.price.toFixed(2) : product.price}</p>
                </div>
              {/each}
            </div>
          {:else}
            <!-- Empty state -->
            <div class="text-center py-8">
              <div class="w-16 h-16 mx-auto bg-gray-100 rounded-full flex items-center justify-center mb-4">
                <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                </svg>
              </div>
              <p class="text-sm text-gray-500">No active listings</p>
            </div>
          {/if}
        </div>
      </div>
      
      <!-- Actions - Only Follow button, no redirect -->
      <div class="p-4 border-t border-gray-100 flex gap-2">
        {#if onFollow}
          <button
            onclick={() => onFollow?.(seller.id)}
            class="flex-1 py-2.5 px-5 rounded-lg font-medium transition-colors border text-sm
              {isFollowing 
                ? 'border-gray-200 text-gray-600 hover:bg-gray-50' 
                : 'border-gray-300 text-black hover:bg-gray-50'}"
          >
            {isFollowing ? '✓ Following' : 'Follow'}
          </button>
        {/if}
      </div>
      </div>[36m
    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SellerQuickView.svelte[39m:142:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    >
      [35m<div 
        class="bg-white rounded-2xl w-full max-w-lg shadow-2xl overflow-hidden flex flex-col max-h-[85vh] relative pointer-events-auto"
        onclick={(e) => e.stopPropagation()}
      >
        
        <!-- Close button -->
        <button
          onclick={onClose}
          class="absolute top-3 right-3 p-1.5 rounded-full bg-white/80 hover:bg-gray-100 transition-colors z-20"
          aria-label="Close"
        >
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      
      <!-- Compact Header with Avatar and Stats -->
      <div class="p-6 pb-3">
        <div class="flex items-start gap-4">
          <!-- Avatar -->
          <img 
            src={seller.avatar_url} 
            alt={seller.username}
            class="w-16 h-16 rounded-full border-2 border-gray-100 shadow-sm"
          />
          
          <!-- Info -->
          <div class="flex-1">
            <h2 class="text-xl font-bold text-gray-900">{seller.username}</h2>
            <p class="text-sm text-gray-500">Since {memberSince}</p>
            {#if seller.location}
              <p class="text-sm text-gray-600 flex items-center gap-1 mt-1">
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                {seller.location}
              </p>
            {/if}
          </div>
          
          <!-- Quick Stats -->
          <div class="text-right">
            <div class="text-lg font-semibold text-gray-900">{seller.itemCount}</div>
            <div class="text-xs text-gray-500">items</div>
          </div>
        </div>
        
        {#if seller.bio}
          <p class="text-sm text-gray-600 mt-3">{seller.bio}</p>
        {/if}
        
        <!-- Compact Stats Bar -->
        <div class="flex justify-around mt-4 pt-3 border-t border-gray-100">
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">{seller.totalSales || 0}</p>
            <p class="text-xs text-gray-500">Sales</p>
          </div>
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">⭐ {seller.rating?.toFixed(1) || '5.0'}</p>
            <p class="text-xs text-gray-500">Rating</p>
          </div>
          <div class="text-center">
            <p class="text-sm font-semibold text-gray-900">{seller.itemCount === 1 ? 'New' : 'Active'}</p>
            <p class="text-xs text-gray-500">Seller</p>
          </div>
        </div>
      </div>
      
      <!-- Products Section - Always show even if empty -->
      <div class="flex-1 overflow-y-auto">
        <div class="px-6 pb-4">
          <h3 class="text-sm font-semibold text-gray-700 mb-3">Active listings</h3>
          {#if loadingProducts}
            <!-- Loading state -->
            <div class="grid grid-cols-3 gap-2">
              {#each Array(6) as _}
                <div class="aspect-square rounded-lg bg-gray-100 animate-pulse"></div>
              {/each}
            </div>
            <p class="text-center text-sm text-gray-500 mt-4">Loading products...</p>
          {:else if fetchError}
            <!-- Error state -->
            <div class="text-center py-8">
              <div class="w-16 h-16 mx-auto bg-red-100 rounded-full flex items-center justify-center mb-4">
                <svg class="w-8 h-8 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <p class="text-sm text-gray-500 mb-2">Failed to load listings</p>
              <button 
                onclick={fetchSellerProducts}
                class="text-xs text-blue-600 hover:text-blue-800 font-medium"
              >
                Try again
              </button>
            </div>
          {:else if displayProducts && displayProducts.length > 0}
            <div class="grid grid-cols-3 gap-2">
              {#each displayProducts.slice(0, 9) as product}
                <div class="group cursor-pointer">
                  <div class="aspect-square rounded-lg overflow-hidden bg-gray-100 mb-1">
                    <img 
                      src={product.image} 
                      alt={product.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform"
                      loading="lazy"
                    />
                  </div>
                  <p class="text-xs font-semibold text-gray-900">£{typeof product.price === 'number' ? product.price.toFixed(2) : product.price}</p>
                </div>
              {/each}
            </div>
          {:else}
            <!-- Empty state -->
            <div class="text-center py-8">
              <div class="w-16 h-16 mx-auto bg-gray-100 rounded-full flex items-center justify-center mb-4">
                <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                </svg>
              </div>
              <p class="text-sm text-gray-500">No active listings</p>
            </div>
          {/if}
        </div>
      </div>
      
      <!-- Actions - Only Follow button, no redirect -->
      <div class="p-4 border-t border-gray-100 flex gap-2">
        {#if onFollow}
          <button
            onclick={() => onFollow?.(seller.id)}
            class="flex-1 py-2.5 px-5 rounded-lg font-medium transition-colors border text-sm
              {isFollowing 
                ? 'border-gray-200 text-gray-600 hover:bg-gray-50' 
                : 'border-gray-300 text-black hover:bg-gray-50'}"
          >
            {isFollowing ? '✓ Following' : 'Follow'}
          </button>
        {/if}
      </div>
      </div>[36m
    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\DynamicContentErrorBoundary.svelte[39m:42:29
[31mError[39m: Property 'Sentry' does not exist on type 'Window & typeof globalThis'. (ts)
[36m    // Report to error tracking if available
    if (isBrowser && window.[35mSentry[36m?.captureException) {
      window.Sentry.captureException(err, {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\DynamicContentErrorBoundary.svelte[39m:43:14
[31mError[39m: Property 'Sentry' does not exist on type 'Window & typeof globalThis'. (ts)
[36m    if (isBrowser && window.Sentry?.captureException) {
      window.[35mSentry[36m.captureException(err, {
        tags: {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ShippingEstimator.svelte[39m:175:5
[31mError[39m: Object literal may only specify known properties, and '"use"' does not exist in type 'Props'. (ts)
[36m    size="sm"
    [35muse[36m={[melt, $trigger]}
    class="text-[color:var(--brand-primary)] hover:text-[color:var(--primary-600)] font-medium {className}"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:105:10
[31mError[39m: Argument of type '() => ({ id: string; icon: string; title: string; subtitle: string; color: string; clickable: boolean; onClick: (() => void) | undefined; } | { id: string; icon: string; title: string; subtitle: string; color: string; clickable: boolean; onClick?: undefined; })[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m<div class={containerClasses}>
  {#each [35mbadges[36m as badge}
    {#if badge.clickable}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:106:10
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m  {#each badges as badge}
    {#if [35mbadge[36m.clickable}
      <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:108:18
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m      <button
        onclick={[35mbadge[36m.onClick}
        class="{badgeClasses} hover:bg-[color:var(--surface-emphasis)] cursor-pointer"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:111:23
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m      >
        <span class="{[35mbadge[36m.color} {iconClasses}">
          {@html badge.icon}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:112:18
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m        <span class="{badge.color} {iconClasses}">
          {@html [35mbadge[36m.icon}
        </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:116:14
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m          <div class="font-medium text-[color:var(--text-primary)]">
            {[35mbadge[36m.title}
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:120:16
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m            <div class="text-xs text-[color:var(--text-tertiary)]">
              {[35mbadge[36m.subtitle}
            </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:124:14
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m        </div>
        {#if [35mbadge[36m.clickable}
          <svg class="w-3 h-3 text-[color:var(--text-muted)]" fill="none" stroke="currentColor" viewBox="0 0 24 24">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:132:23
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m      <div class={badgeClasses}>
        <span class="{[35mbadge[36m.color} {iconClasses}">
          {@html badge.icon}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:133:18
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m        <span class="{badge.color} {iconClasses}">
          {@html [35mbadge[36m.icon}
        </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:137:14
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m          <div class="font-medium text-[color:var(--text-primary)]">
            {[35mbadge[36m.title}
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TrustBadges.svelte[39m:141:16
[31mError[39m: 'badge' is of type 'unknown'. (ts)
[36m            <div class="text-xs text-[color:var(--text-tertiary)]">
              {[35mbadge[36m.subtitle}
            </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductGallery.svelte[39m:271:1
[33mWarn[39m: noninteractive element cannot have nonnegative tabIndex value
https://svelte.dev/e/a11y_no_noninteractive_tabindex (svelte)
[36m<!-- Main Gallery Container -->
[35m<div 
  class="gallery-container" 
  role="region" 
  aria-label="Product images"
  onkeydown={handleKeyDown}
  tabindex="0"
>
  <!-- Main Image Display -->
  <div 
    class="main-image-container"
    bind:this={mainImageRef}
    ontouchstart={handleTouchStart}
    ontouchmove={handleTouchMove}
    ontouchend={handleTouchEnd}
    ondblclick={handleDoubleTap}
    role="button"
    tabindex="0"
    aria-label={m.pdp_a11y_productImage?.({ index: selectedImage + 1, total: images.length }) || `Product image ${selectedImage + 1} of ${images.length}`}
  >
    {#if images.length > 0}
      <img 
        src={images[selectedImage]}
        alt={title || `Product image ${selectedImage + 1}`}
        class="main-image"
        loading={selectedImage === 0 ? "eager" : "lazy"}
        decoding="async"
        fetchpriority={selectedImage === 0 ? "high" : "low"}
        sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 600px"
        style="transform: scale({scale}) translate({translateX}px, {translateY}px);"
      />
      
      <!-- Overlay Elements -->
      <div class="image-overlay">
        <!-- Condition Badge -->
        {#if condition}
          <div class="condition-badge-container">
            <Tooltip 
              content={getConditionTooltip(condition)}
              positioning={{ side: 'bottom', align: 'start' }}
              openDelay={600}
              closeDelay={200}
            >
              {#snippet trigger()}
                <ConditionBadge {condition} {translations} />
              {/snippet}
            </Tooltip>
          </div>
        {/if}
        
        <!-- Sold Badge -->
        {#if isSold}
          <div class="sold-badge">
            <span class="sold-text">{m.pdp_sold?.() || 'SOLD'}</span>
          </div>
        {/if}
        
        <!-- Image Counter -->
        {#if images.length > 1}
          <div class="image-counter">
            <span>{selectedImage + 1} / {images.length}</span>
          </div>
        {/if}
        
        <!-- Zoom Indicator -->
        {#if images.length > 0}
          <div class="zoom-indicator">
            <svg viewBox="0 0 24 24" class="zoom-icon">
              <circle cx="11" cy="11" r="8" fill="none" stroke="currentColor" stroke-width="2"/>
              <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
              <line x1="11" y1="8" x2="11" y2="14" stroke="currentColor" stroke-width="2"/>
              <line x1="8" y1="11" x2="14" y2="11" stroke="currentColor" stroke-width="2"/>
            </svg>
          </div>
        {/if}
      </div>
      
      <!-- Navigation Arrows (Desktop) -->
      {#if images.length > 1}
        <div class="nav-arrows">
          <button 
            class="nav-arrow nav-arrow-left"
            onclick={() => selectImage(selectedImage - 1)}
            disabled={selectedImage === 0}
            aria-label="Previous image"
          >
            <svg viewBox="0 0 24 24" class="arrow-icon">
              <path d="M15 18l-6-6 6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          
          <button 
            class="nav-arrow nav-arrow-right"
            onclick={() => selectImage(selectedImage + 1)}
            disabled={selectedImage === images.length - 1}
            aria-label="Next image"
          >
            <svg viewBox="0 0 24 24" class="arrow-icon">
              <path d="M9 18l6-6-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
      {/if}
      
    {:else}
      <!-- No Images State -->
      <div class="no-images">
        <svg class="no-images-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
          <circle cx="8.5" cy="8.5" r="1.5"/>
          <polyline points="21,15 16,10 5,21"/>
        </svg>
        <p class="no-images-text">{m.orders_noImage?.() || 'No image available'}</p>
      </div>
    {/if}
  </div>

  <!-- Thumbnail Strip -->
  {#if images.length > 1}
    <div class="thumbnails-container">
      <div class="thumbnails-strip" bind:this={thumbnailsRef}>
        {#each images as image, index}
          <button 
            class="thumbnail"
            class:thumbnail-active={selectedImage === index}
            onclick={() => selectImage(index)}
            aria-label={`View image ${index + 1}`}
          >
            <img 
              src={image}
              alt={`Thumbnail ${index + 1}`}
              class="thumbnail-image"
              loading="lazy"
            />
            <div class="thumbnail-overlay"></div>
          </button>
        {/each}
      </div>
    </div>
  {/if}
</div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductGallery.svelte[39m:271:1
[33mWarn[39m: Non-interactive element `<div>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m<!-- Main Gallery Container -->
[35m<div 
  class="gallery-container" 
  role="region" 
  aria-label="Product images"
  onkeydown={handleKeyDown}
  tabindex="0"
>
  <!-- Main Image Display -->
  <div 
    class="main-image-container"
    bind:this={mainImageRef}
    ontouchstart={handleTouchStart}
    ontouchmove={handleTouchMove}
    ontouchend={handleTouchEnd}
    ondblclick={handleDoubleTap}
    role="button"
    tabindex="0"
    aria-label={m.pdp_a11y_productImage?.({ index: selectedImage + 1, total: images.length }) || `Product image ${selectedImage + 1} of ${images.length}`}
  >
    {#if images.length > 0}
      <img 
        src={images[selectedImage]}
        alt={title || `Product image ${selectedImage + 1}`}
        class="main-image"
        loading={selectedImage === 0 ? "eager" : "lazy"}
        decoding="async"
        fetchpriority={selectedImage === 0 ? "high" : "low"}
        sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 600px"
        style="transform: scale({scale}) translate({translateX}px, {translateY}px);"
      />
      
      <!-- Overlay Elements -->
      <div class="image-overlay">
        <!-- Condition Badge -->
        {#if condition}
          <div class="condition-badge-container">
            <Tooltip 
              content={getConditionTooltip(condition)}
              positioning={{ side: 'bottom', align: 'start' }}
              openDelay={600}
              closeDelay={200}
            >
              {#snippet trigger()}
                <ConditionBadge {condition} {translations} />
              {/snippet}
            </Tooltip>
          </div>
        {/if}
        
        <!-- Sold Badge -->
        {#if isSold}
          <div class="sold-badge">
            <span class="sold-text">{m.pdp_sold?.() || 'SOLD'}</span>
          </div>
        {/if}
        
        <!-- Image Counter -->
        {#if images.length > 1}
          <div class="image-counter">
            <span>{selectedImage + 1} / {images.length}</span>
          </div>
        {/if}
        
        <!-- Zoom Indicator -->
        {#if images.length > 0}
          <div class="zoom-indicator">
            <svg viewBox="0 0 24 24" class="zoom-icon">
              <circle cx="11" cy="11" r="8" fill="none" stroke="currentColor" stroke-width="2"/>
              <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
              <line x1="11" y1="8" x2="11" y2="14" stroke="currentColor" stroke-width="2"/>
              <line x1="8" y1="11" x2="14" y2="11" stroke="currentColor" stroke-width="2"/>
            </svg>
          </div>
        {/if}
      </div>
      
      <!-- Navigation Arrows (Desktop) -->
      {#if images.length > 1}
        <div class="nav-arrows">
          <button 
            class="nav-arrow nav-arrow-left"
            onclick={() => selectImage(selectedImage - 1)}
            disabled={selectedImage === 0}
            aria-label="Previous image"
          >
            <svg viewBox="0 0 24 24" class="arrow-icon">
              <path d="M15 18l-6-6 6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          
          <button 
            class="nav-arrow nav-arrow-right"
            onclick={() => selectImage(selectedImage + 1)}
            disabled={selectedImage === images.length - 1}
            aria-label="Next image"
          >
            <svg viewBox="0 0 24 24" class="arrow-icon">
              <path d="M9 18l6-6-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
      {/if}
      
    {:else}
      <!-- No Images State -->
      <div class="no-images">
        <svg class="no-images-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
          <circle cx="8.5" cy="8.5" r="1.5"/>
          <polyline points="21,15 16,10 5,21"/>
        </svg>
        <p class="no-images-text">{m.orders_noImage?.() || 'No image available'}</p>
      </div>
    {/if}
  </div>

  <!-- Thumbnail Strip -->
  {#if images.length > 1}
    <div class="thumbnails-container">
      <div class="thumbnails-strip" bind:this={thumbnailsRef}>
        {#each images as image, index}
          <button 
            class="thumbnail"
            class:thumbnail-active={selectedImage === index}
            onclick={() => selectImage(index)}
            aria-label={`View image ${index + 1}`}
          >
            <img 
              src={image}
              alt={`Thumbnail ${index + 1}`}
              class="thumbnail-image"
              loading="lazy"
            />
            <div class="thumbnail-overlay"></div>
          </button>
        {/each}
      </div>
    </div>
  {/if}
</div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductGallery.svelte[39m:441:5
[33mWarn[39m: `<div>` with a dblclick handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    <!-- Fullscreen Image -->
    [35m<div 
      class="fullscreen-image-container"
      ontouchstart={handleTouchStart}
      ontouchmove={handleTouchMove}
      ontouchend={handleTouchEnd}
      ondblclick={handleDoubleTap}
    >
      <img 
        src={images[selectedImage]}
        alt={title || `Product image ${selectedImage + 1}`}
        class="fullscreen-image"
        style="transform: scale({scale}) translate({translateX}px, {translateY}px);"
      />
    </div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:322:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  <div class="modal-backdrop" onclick={() => showSizeGuide = false} role="button" tabindex="0" onkeydown={(e) => e.key === 'Escape' && (showSizeGuide = false)}>
    [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
      <div class="modal-header">
        <h2 class="modal-title">Size Guide</h2>
        <button class="modal-close" onclick={() => showSizeGuide = false} aria-label="Close">
          <svg viewBox="0 0 20 20">
            <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
          </svg>
        </button>
      </div>
      <div class="modal-body">
        <p>Size guide content would go here for {category} items.</p>
        <p>Selected size: {size}</p>
      </div>
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:322:5
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m  <div class="modal-backdrop" onclick={() => showSizeGuide = false} role="button" tabindex="0" onkeydown={(e) => e.key === 'Escape' && (showSizeGuide = false)}>
    [35m<div class="modal-content" onclick={(e) => e.stopPropagation()}>
      <div class="modal-header">
        <h2 class="modal-title">Size Guide</h2>
        <button class="modal-close" onclick={() => showSizeGuide = false} aria-label="Close">
          <svg viewBox="0 0 20 20">
            <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
          </svg>
        </button>
      </div>
      <div class="modal-body">
        <p>Size guide content would go here for {category} items.</p>
        <p>Selected size: {size}</p>
      </div>
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:352:3
[33mWarn[39m: Unused CSS selector ".header"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.header[36m {
    display: flex;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:368:3
[33mWarn[39m: Unused CSS selector ".main-title"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.main-title[36m {
    margin-bottom: var(--space-3);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:449:3
[33mWarn[39m: Unused CSS selector ".verified-icon"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.verified-icon[36m {
    width: 14px;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:463:3
[33mWarn[39m: Unused CSS selector ".product-details-section"
https://svelte.dev/e/css_unused_selector (svelte)
[36m  /* Product Details Section */
  [35m.product-details-section[36m {
    display: flex;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:474:3
[33mWarn[39m: Unused CSS selector ".product-header-row"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.product-header-row[36m {
    display: flex;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:481:3
[33mWarn[39m: Unused CSS selector ".product-title"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.product-title[36m {
    font-size: var(--font-size-xl);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:489:3
[33mWarn[39m: Unused CSS selector ".brand-badge"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.brand-badge[36m { flex-shrink: 0; margin-top: var(--space-2); }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:527:3
[33mWarn[39m: Unused CSS selector ".product-description"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.product-description[36m {
    border-left: 3px solid var(--primary-subtle);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:535:3
[33mWarn[39m: Unused CSS selector ".description-text"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.description-text[36m {
    margin: 0;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:542:3
[33mWarn[39m: Unused CSS selector ".product-attributes"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.product-attributes[36m {
    /* Inherits from attributes-section styles below */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:547:3
[33mWarn[39m: Unused CSS selector ".product-row-solo"
https://svelte.dev/e/css_unused_selector (svelte)
[36m  /* Fallback: No seller info */
  [35m.product-row-solo[36m {
    display: flex;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:554:3
[33mWarn[39m: Unused CSS selector ".product-row-solo .title-section"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.product-row-solo .title-section[36m {
    display: flex;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:563:3
[33mWarn[39m: Unused CSS selector ".favorite-section"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.favorite-section[36m {
    flex-shrink: 0;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:586:3
[33mWarn[39m: Unused CSS selector ".product-attributes"
https://svelte.dev/e/css_unused_selector (svelte)
[36m  /* Attributes Grid - Clean Layout */
  [35m.product-attributes[36m {
    /* No additional styling needed - contained within product-details-section */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:590:3
[33mWarn[39m: Unused CSS selector ".attributes-grid"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.attributes-grid[36m {
    display: grid;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:596:3
[33mWarn[39m: Unused CSS selector ".attribute-item"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.attribute-item[36m {
    display: flex;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:608:3
[33mWarn[39m: Unused CSS selector ".attribute-item:hover"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.attribute-item:hover[36m {
    border-color: var(--primary-subtle);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:613:3
[33mWarn[39m: Unused CSS selector ".attribute-label"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.attribute-label[36m {
    font-size: var(--font-size-xs);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:621:3
[33mWarn[39m: Unused CSS selector ".attribute-value"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.attribute-value[36m {
    font-size: var(--font-size-sm);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:688:3
[33mWarn[39m: Unused CSS selector ".tab-count"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.tab-count[36m {
    opacity: 0.7;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:771:3
[33mWarn[39m: Unused CSS selector ".description-content"
https://svelte.dev/e/css_unused_selector (svelte)
[36m  /* Description Content */
  [35m.description-content[36m {
    line-height: var(--line-height-relaxed);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:775:3
[33mWarn[39m: Unused CSS selector ".description-text"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.description-text[36m {
    margin: 0;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:948:5
[33mWarn[39m: Unused CSS selector ".product-header"
https://svelte.dev/e/css_unused_selector (svelte)
[36m  @media (max-width: 768px) {
    [35m.product-header[36m {
      gap: var(--space-2);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:969:5
[33mWarn[39m: Unused CSS selector ".product-title"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
    [35m.product-title[36m {
      font-size: var(--font-size-lg);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:975:5
[33mWarn[39m: Unused CSS selector ".attributes-grid"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    
    [35m.attributes-grid[36m {
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:542:3
[33mWarn[39m: Do not use empty rulesets (css)
[36m
  [35m.product-attributes[36m {
    /* Inherits from attributes-section styles below */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:586:3
[33mWarn[39m: Do not use empty rulesets (css)
[36m  /* Attributes Grid - Clean Layout */
  [35m.product-attributes[36m {
    /* No additional styling needed - contained within product-details-section */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:128:11
[31mError[39m: Type '{ favorite_count: number; id: string; }' is missing the following properties from type 'UIProduct': images, sellerName, sellerRating, sellerId, and 48 more. (ts)
[36m        <FavoriteButton 
          [35mproduct[36m={{ favorite_count: favoriteCount, id: productId }}
          favorited={isFavorited}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:142:16
[31mError[39m: Argument of type '() => ("" | { key: string; label: string; value: string; type: string; } | undefined)[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m      <DescriptionList>
        {#each [35mattributes[36m as attr}
          <DescriptionTerm>{attr.label}</DescriptionTerm>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:143:29
[31mError[39m: 'attr' is of type 'unknown'. (ts)
[36m        {#each attributes as attr}
          <DescriptionTerm>{[35mattr[36m.label}</DescriptionTerm>
          <DescriptionDetails>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:145:18
[31mError[39m: 'attr' is of type 'unknown'. (ts)
[36m          <DescriptionDetails>
            {#if [35mattr[36m.key === 'condition'}
              <ConditionBadge condition={attr.value as any} />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:146:42
[31mError[39m: 'attr' is of type 'unknown'. (ts)
[36m            {#if attr.key === 'condition'}
              <ConditionBadge condition={[35mattr[36m.value as any} />
            {:else}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:148:16
[31mError[39m: 'attr' is of type 'unknown'. (ts)
[36m            {:else}
              {[35mattr[36m.value}
            {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:179:9
[31mError[39m: Type '{ favorite_count: number; id: string; }' is missing the following properties from type 'UIProduct': images, sellerName, sellerRating, sellerId, and 48 more. (ts)
[36m      <FavoriteButton 
        [35mproduct[36m={{ favorite_count: favoriteCount, id: productId }}
        favorited={isFavorited}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:191:16
[31mError[39m: Argument of type '() => { id: string; label: string; count: number; show: boolean; }[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m      <div class="tab-nav" role="tablist">
        {#each [35mtabs[36m as tab}
          <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:195:40
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            class:tab-button--active={activeTab === tab.id}
            onclick={() => activeTab = [35mtab[36m.id}
            role="tab"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:197:42
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            role="tab"
            aria-selected={activeTab === [35mtab[36m.id}
            aria-controls="panel-{tab.id}"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:198:35
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            aria-selected={activeTab === tab.id}
            aria-controls="panel-{[35mtab[36m.id}"
            id="tab-{tab.id}"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:199:22
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            aria-controls="panel-{tab.id}"
            id="tab-{[35mtab[36m.id}"
          >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:194:53
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            class="tab-button"
            class:tab-button--active={activeTab === [35mtab[36m.id}
            onclick={() => activeTab = tab.id}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:201:38
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m          >
            <span class="tab-label">{[35mtab[36m.label}</span>
            {#if tab.count > 0}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:202:18
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            <span class="tab-label">{tab.label}</span>
            {#if [35mtab[36m.count > 0}
              <Badge variant="subtle" size="xs" class="tab-count">{tab.count}</Badge>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:203:68
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            {#if tab.count > 0}
              <Badge variant="subtle" size="xs" class="tab-count">{[35mtab[36m.count}</Badge>
            {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:220:24
[31mError[39m: Argument of type '() => ("" | { key: string; label: string; value: string; type: string; } | undefined)[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m              <div class="details-list">
                {#each [35mattributes[36m as attr}
                  <div class="detail-row">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:222:49
[31mError[39m: 'attr' is of type 'unknown'. (ts)
[36m                  <div class="detail-row">
                    <span class="detail-label">{[35mattr[36m.label}</span>
                    <span class="detail-value">{attr.value}</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductInfo.svelte[39m:223:49
[31mError[39m: 'attr' is of type 'unknown'. (ts)
[36m                    <span class="detail-label">{attr.label}</span>
                    <span class="detail-value">{[35mattr[36m.value}</span>
                  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductBuyBox.svelte[39m:103:64
[31mError[39m: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'. (ts)
[36m        <div class="price-original">
          <span class="original-amount">{currency}{formatPrice([35mproduct.originalPrice[36m)}</span>
          <Badge variant="success" size="sm" class="discount-badge">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:445:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m{#if selectedImageModal}
  [35m<div class="image-modal-backdrop" onclick={closeImageModal}>
    <div class="image-modal-content" onclick={(e) => e.stopPropagation()}>
      <button class="modal-close" onclick={closeImageModal} aria-label="Close">
        <svg viewBox="0 0 20 20">
          <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
        </svg>
      </button>
      
      <img 
        src={selectedImageModal.images[selectedImageModal.index]}
        alt="Review image {selectedImageModal.index + 1}"
        class="modal-image"
      />
      
      {#if selectedImageModal.images.length > 1}
        <div class="modal-nav">
          <button 
            class="modal-nav-btn modal-nav-btn--prev"
            onclick={() => selectedImageModal && selectedImageModal.index > 0 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index - 1 })}
            disabled={selectedImageModal.index === 0}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
            </svg>
          </button>
          
          <span class="modal-counter">
            {selectedImageModal.index + 1} of {selectedImageModal.images.length}
          </span>
          
          <button 
            class="modal-nav-btn modal-nav-btn--next"
            onclick={() => selectedImageModal && selectedImageModal.index < selectedImageModal.images.length - 1 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index + 1 })}
            disabled={selectedImageModal.index === selectedImageModal.images.length - 1}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
            </svg>
          </button>
        </div>
      {/if}
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:445:3
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m{#if selectedImageModal}
  [35m<div class="image-modal-backdrop" onclick={closeImageModal}>
    <div class="image-modal-content" onclick={(e) => e.stopPropagation()}>
      <button class="modal-close" onclick={closeImageModal} aria-label="Close">
        <svg viewBox="0 0 20 20">
          <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
        </svg>
      </button>
      
      <img 
        src={selectedImageModal.images[selectedImageModal.index]}
        alt="Review image {selectedImageModal.index + 1}"
        class="modal-image"
      />
      
      {#if selectedImageModal.images.length > 1}
        <div class="modal-nav">
          <button 
            class="modal-nav-btn modal-nav-btn--prev"
            onclick={() => selectedImageModal && selectedImageModal.index > 0 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index - 1 })}
            disabled={selectedImageModal.index === 0}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
            </svg>
          </button>
          
          <span class="modal-counter">
            {selectedImageModal.index + 1} of {selectedImageModal.images.length}
          </span>
          
          <button 
            class="modal-nav-btn modal-nav-btn--next"
            onclick={() => selectedImageModal && selectedImageModal.index < selectedImageModal.images.length - 1 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index + 1 })}
            disabled={selectedImageModal.index === selectedImageModal.images.length - 1}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
            </svg>
          </button>
        </div>
      {/if}
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:446:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  <div class="image-modal-backdrop" onclick={closeImageModal}>
    [35m<div class="image-modal-content" onclick={(e) => e.stopPropagation()}>
      <button class="modal-close" onclick={closeImageModal} aria-label="Close">
        <svg viewBox="0 0 20 20">
          <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
        </svg>
      </button>
      
      <img 
        src={selectedImageModal.images[selectedImageModal.index]}
        alt="Review image {selectedImageModal.index + 1}"
        class="modal-image"
      />
      
      {#if selectedImageModal.images.length > 1}
        <div class="modal-nav">
          <button 
            class="modal-nav-btn modal-nav-btn--prev"
            onclick={() => selectedImageModal && selectedImageModal.index > 0 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index - 1 })}
            disabled={selectedImageModal.index === 0}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
            </svg>
          </button>
          
          <span class="modal-counter">
            {selectedImageModal.index + 1} of {selectedImageModal.images.length}
          </span>
          
          <button 
            class="modal-nav-btn modal-nav-btn--next"
            onclick={() => selectedImageModal && selectedImageModal.index < selectedImageModal.images.length - 1 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index + 1 })}
            disabled={selectedImageModal.index === selectedImageModal.images.length - 1}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
            </svg>
          </button>
        </div>
      {/if}
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:446:5
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m  <div class="image-modal-backdrop" onclick={closeImageModal}>
    [35m<div class="image-modal-content" onclick={(e) => e.stopPropagation()}>
      <button class="modal-close" onclick={closeImageModal} aria-label="Close">
        <svg viewBox="0 0 20 20">
          <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
        </svg>
      </button>
      
      <img 
        src={selectedImageModal.images[selectedImageModal.index]}
        alt="Review image {selectedImageModal.index + 1}"
        class="modal-image"
      />
      
      {#if selectedImageModal.images.length > 1}
        <div class="modal-nav">
          <button 
            class="modal-nav-btn modal-nav-btn--prev"
            onclick={() => selectedImageModal && selectedImageModal.index > 0 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index - 1 })}
            disabled={selectedImageModal.index === 0}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
            </svg>
          </button>
          
          <span class="modal-counter">
            {selectedImageModal.index + 1} of {selectedImageModal.images.length}
          </span>
          
          <button 
            class="modal-nav-btn modal-nav-btn--next"
            onclick={() => selectedImageModal && selectedImageModal.index < selectedImageModal.images.length - 1 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index + 1 })}
            disabled={selectedImageModal.index === selectedImageModal.images.length - 1}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
            </svg>
          </button>
        </div>
      {/if}
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:461:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m        <div class="modal-nav">
          [35m<button 
            class="modal-nav-btn modal-nav-btn--prev"
            onclick={() => selectedImageModal && selectedImageModal.index > 0 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index - 1 })}
            disabled={selectedImageModal.index === 0}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
            </svg>
          </button>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:475:11
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m          
          [35m<button 
            class="modal-nav-btn modal-nav-btn--next"
            onclick={() => selectedImageModal && selectedImageModal.index < selectedImageModal.images.length - 1 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index + 1 })}
            disabled={selectedImageModal.index === selectedImageModal.images.length - 1}
          >
            <svg viewBox="0 0 20 20">
              <path fill="currentColor" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
            </svg>
          </button>[36m
        </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:830:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 4;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:837:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: block;
    [35m-webkit-line-clamp[36m: none;
  }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:252:53
[31mError[39m: Element implicitly has an 'any' type because expression of type 'number' can't be used to index type '{ 1: number; 2: number; 3: number; 4: number; 5: number; }'.
  No index signature with a parameter of type 'number' was found on type '{ 1: number; 2: number; 3: number; 4: number; 5: number; }'. (ts)
[36m                    class="progress-fill" 
                    style="width: {getProgressWidth([35msummary.breakdown[rating][36m, summary.totalReviews)}%"
                  ></div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:255:44
[31mError[39m: Element implicitly has an 'any' type because expression of type 'number' can't be used to index type '{ 1: number; 2: number; 3: number; 4: number; 5: number; }'.
  No index signature with a parameter of type 'number' was found on type '{ 1: number; 2: number; 3: number; 4: number; 5: number; }'. (ts)
[36m                </div>
                <span class="count-label">{[35msummary.breakdown[rating][36m}</span>
              </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ConditionReport.svelte[39m:203:27
[31mError[39m: Property 'notes' does not exist on type '{ aspect: string; rating: number; }'. (ts)
[36m              <span class="text-sm font-medium text-gray-900">{detail.aspect}</span>
              {#if detail.[35mnotes[36m}
                <p class="text-xs text-gray-500 mt-0.5">{detail.notes}</p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ConditionReport.svelte[39m:204:65
[31mError[39m: Property 'notes' does not exist on type '{ aspect: string; rating: number; }'. (ts)
[36m              {#if detail.notes}
                <p class="text-xs text-gray-500 mt-0.5">{detail.[35mnotes[36m}</p>
              {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:141:48
[31mError[39m: Property 'pdp_sold' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        </svg>
        <span class="text-sm font-semibold">{m.[35mpdp_sold[36m()}</span>
      </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:155:48
[31mError[39m: Property 'pdp_yourItem' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        </svg>
        <span class="text-sm font-semibold">{m.[35mpdp_yourItem[36m()}</span>
      </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:176:25
[31mError[39m: Property 'pdp_messageSeller' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          disabled={!canMessage || isLoading}
          aria-label={m.[35mpdp_messageSeller[36m()}
        >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:185:48
[31mError[39m: Property 'message' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          {/if}
          <span class="text-sm font-medium">{m.[35mmessage[36m()}</span>
        </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:203:25
[31mError[39m: Property 'pdp_buyNow' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          disabled={!canBuy || isLoading}
          aria-label={m.[35mpdp_buyNow[36m() + ` ${currency}${price}`}
        >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:216:18
[31mError[39m: Property 'buyNow' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            {#if typeof price === 'number'}
              {m.[35mbuyNow[36m()} • {currency}{price}
            {:else}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductActions.svelte[39m:218:18
[31mError[39m: Property 'pdp_buyNow' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            {:else}
              {m.[35mpdp_buyNow[36m()}
            {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TabGroup.svelte[39m:18:5
[31mError[39m: Type 'string' is not assignable to type 'Writable<string>'. (ts)
[36m  } = createTabs({
    [35mvalue[36m: activeTab,
    onValueChange: ({ next }) => {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TabGroup.svelte[39m:44:20
[31mError[39m: Expected 1 arguments, but got 2. (ts)
[36m      <button
        use:trigger[35m={tab.id[36m}
        class="flex items-center px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-colors scroll-snap-align-start min-h-[36px][39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\tabs\Tabs.svelte[39m:240:3
[33mWarn[39m: Do not use empty rulesets (css)
[36m  /* Base styles using semantic tokens */
  [35m.tabs-root[36m {
    /* Using semantic tokens from the design system */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\tabs\Tabs.svelte[39m:170:20
[31mError[39m: Expected 1 arguments, but got 2. (ts)
[36m      <button
        use:trigger[35m={tab.id[36m}
        class={getTabClasses(tab, isActive)}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\tabs\Tabs.svelte[39m:233:25
[31mError[39m: Argument of type '() => TabData | undefined' is not assignable to parameter of type 'TabData'. (ts)
[36m    >
      {@render children([35mactiveTab[36m)}
    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:132:6
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(options?: StripeElementsOptionsClientSecret | undefined): StripeElements', gave the following error.
    Type '"light" | "dark" | "stripe"' is not assignable to type '"flat" | "stripe" | "night" | undefined'.
      Type '"light"' is not assignable to type '"flat" | "stripe" | "night" | undefined'. Did you mean '"night"'? (ts)
[36m				appearance: {
					[35mtheme[36m: theme === 'auto' ? 'stripe' : theme,
					variables: {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:147:4
[31mError[39m: Type 'StripePaymentElement' is not assignable to type 'StripeCardElement | null'.
  Type 'StripePaymentElement' is not assignable to type 'StripeCardElement'.
    Type 'StripePaymentElement' is not assignable to type '{ on(eventType: "change", handler: (event: StripeCardElementChangeEvent) => any): StripeCardElement; on(eventType: "ready", handler: (event: { ...; }) => any): StripeCardElement; on(eventType: "focus", handler: (event: { ...; }) => any): StripeCardElement; on(eventType: "blur", handler: (event: { ...; }) => any): St...'.
      Types of property 'on' are incompatible.
        Type '{ (eventType: "change", handler: (event: StripePaymentElementChangeEvent) => any): StripePaymentElement; (eventType: "ready", handler: (event: { ...; }) => any): StripePaymentElement; (eventType: "focus", handler: (event: { ...; }) => any): StripePaymentElement; (eventType: "blur", handler: (event: { ...; }) => any)...' is not assignable to type '{ (eventType: "change", handler: (event: StripeCardElementChangeEvent) => any): StripeCardElement; (eventType: "ready", handler: (event: { ...; }) => any): StripeCardElement; (eventType: "focus", handler: (event: { ...; }) => any): StripeCardElement; (eventType: "blur", handler: (event: { ...; }) => any): StripeCard...'.
          Types of parameters 'handler' and 'handler' are incompatible.
            Types of parameters 'event' and 'event' are incompatible.
              Type 'StripePaymentElementChangeEvent' is missing the following properties from type 'StripeCardElementChangeEvent': brand, error (ts)
[36m			// Create payment element (recommended) or card element
			[35mcardElement[36m = elements.create('payment', {
				layout: {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:171:4
[31mError[39m: 'cardElement' is possibly 'null'. (ts)
[36m			// Mount the element
			[35mcardElement[36m.mount(cardContainer);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:174:4
[31mError[39m: 'cardElement' is possibly 'null'. (ts)
[36m			// Listen for changes
			[35mcardElement[36m.on('change', handleElementChange);
			cardElement.on('ready', handleElementReady);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:175:4
[31mError[39m: 'cardElement' is possibly 'null'. (ts)
[36m			cardElement.on('change', handleElementChange);
			[35mcardElement[36m.on('ready', handleElementReady);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:232:7
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'metadata' does not exist in type '{ billing_details?: BillingDetails | undefined; allow_redisplay?: "always" | "limited" | "unspecified" | undefined; }'.
      Type '"if_required"' is not assignable to type '"always"'. (ts)
[36m					payment_method_data: {
						[35mmetadata[36m: {
							productId,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:244:5
[31mError[39m: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'metadata' does not exist in type '{ billing_details?: BillingDetails | undefined; allow_redisplay?: "always" | "limited" | "unspecified" | undefined; }'.
      Type '"if_required"' is not assignable to type '"always"'. (ts)
[36m				},
				[35mredirect[36m: 'if_required'
			});[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:250:60
[31mError[39m: Property 'status' does not exist on type 'never'. (ts)
[36m				onPaymentError?.(formatStripeError(result.error));
			} else if (result.paymentIntent && result.paymentIntent.[35mstatus[36m === 'succeeded') {
				// Payment succeeded - now confirm with backend[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:5:12
[31mError[39m: Module '"@repo/i18n"' has no exported member 'filter_ui_applied'. (ts)
[36m  import { tick } from 'svelte';
  import { [35mfilter_ui_applied[36m, filter_ui_removed, filter_modal_filter, filter_ui_filterOptionsAriaLabel, filter_ui_keyboardNavHelp } from '@repo/i18n';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:5:31
[31mError[39m: Module '"@repo/i18n"' has no exported member 'filter_ui_removed'. (ts)
[36m  import { tick } from 'svelte';
  import { filter_ui_applied, [35mfilter_ui_removed[36m, filter_modal_filter, filter_ui_filterOptionsAriaLabel, filter_ui_keyboardNavHelp } from '@repo/i18n';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:5:50
[31mError[39m: Module '"@repo/i18n"' has no exported member 'filter_modal_filter'. (ts)
[36m  import { tick } from 'svelte';
  import { filter_ui_applied, filter_ui_removed, [35mfilter_modal_filter[36m, filter_ui_filterOptionsAriaLabel, filter_ui_keyboardNavHelp } from '@repo/i18n';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:5:71
[31mError[39m: Module '"@repo/i18n"' has no exported member 'filter_ui_filterOptionsAriaLabel'. (ts)
[36m  import { tick } from 'svelte';
  import { filter_ui_applied, filter_ui_removed, filter_modal_filter, [35mfilter_ui_filterOptionsAriaLabel[36m, filter_ui_keyboardNavHelp } from '@repo/i18n';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:5:105
[31mError[39m: Module '"@repo/i18n"' has no exported member 'filter_ui_keyboardNavHelp'. (ts)
[36m  import { tick } from 'svelte';
  import { filter_ui_applied, filter_ui_removed, filter_modal_filter, filter_ui_filterOptionsAriaLabel, [35mfilter_ui_keyboardNavHelp[36m } from '@repo/i18n';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:60:5
[31mError[39m: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'. (ts)
[36m    multiple,
    [35mdefaultValue[36m: value,
    onValueChange: ({ next }) => {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:65:7
[31mError[39m: Type 'string | string[] | null' is not assignable to type 'string | null'.
  Type 'string[]' is not assignable to type 'string'. (ts)
[36m      
      [35mvalue[36m = newValue;
      onValueChange?.(newValue);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:66:23
[31mError[39m: Argument of type 'string | string[] | null' is not assignable to parameter of type 'string | null'.
  Type 'string[]' is not assignable to type 'string'. (ts)
[36m      value = newValue;
      onValueChange?.([35mnewValue[36m);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:88:23
[31mError[39m: Argument of type 'string | null' is not assignable to parameter of type 'string | string[] | undefined'.
  Type 'null' is not assignable to type 'string | string[] | undefined'. (ts)
[36m    if ($toggleValue !== value) {
      toggleValue.set([35mvalue[36m);
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:219:7
[31mError[39m: Type 'string' is not assignable to type 'number'. (ts)
[36m      class="{basePillClasses} {activeClasses}"
      [35mtabindex[36m={focusedIndex === index ? '0' : '-1'}
      aria-pressed={isActive}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryPill.svelte[39m:144:25
[31mError[39m: Type '"sm" | "xs"' is not assignable to type '"sm" | "md" | "lg" | undefined'.
  Type '"xs"' is not assignable to type '"sm" | "md" | "lg" | undefined'. (ts)
[36m      {#if loading}
        <LoadingSpinner [35msize[36m={size === 'sm' ? 'xs' : 'sm'} color={spinnerColor} />
      {:else if emoji}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:73:24
[31mError[39m: Property 'category_dropdown_allCategories' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    selectedSpecific = $bindable(null),
    placeholder = i18n.[35mcategory_dropdown_allCategories[36m(),
    disabled = false,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:140:29
[31mError[39m: Property 'category_dropdown_selectedCategory' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m      if (category && categoryItem) {
        announcement = i18n.[35mcategory_dropdown_selectedCategory[36m({ name: categoryItem.name });
      } else {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:142:29
[31mError[39m: Property 'category_dropdown_allCategoriesSelected' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m      } else {
        announcement = i18n.[35mcategory_dropdown_allCategoriesSelected[36m();
      }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:177:29
[31mError[39m: Property 'category_dropdown_selectedSubcategory' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m      if (subcategory && subcategoryItem) {
        announcement = i18n.[35mcategory_dropdown_selectedSubcategory[36m({ name: subcategoryItem.name });
      } else {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:182:29
[31mError[39m: Property 'category_dropdown_allSubcategorySelected' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          : 'category';
        announcement = i18n.[35mcategory_dropdown_allSubcategorySelected[36m({ category: categoryName });
      }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:205:29
[31mError[39m: Property 'category_dropdown_selectedSpecific' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m      if (specific && specificItem) {
        announcement = i18n.[35mcategory_dropdown_selectedSpecific[36m({ name: specificItem.name });
      } else {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:210:29
[31mError[39m: Property 'category_dropdown_allSpecificSelected' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          : 'items';
        announcement = i18n.[35mcategory_dropdown_allSpecificSelected[36m({ subcategory: subcategoryName });
      }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:251:27
[31mError[39m: Property 'category_dropdown_allFiltersCleared' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    if (announceChanges) {
      announcement = i18n.[35mcategory_dropdown_allFiltersCleared[36m();
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:424:22
[31mError[39m: Property 'category_dropdown_ariaLabel' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    aria-haspopup="listbox"
    aria-label={i18n.[35mcategory_dropdown_ariaLabel[36m({ selectedText })}
  >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:427:26
[31mError[39m: Type '() => string' is not assignable to type 'string'. (ts)
[36m    {#if trigger}
      {@render trigger({ [35mselectedText[36m, isOpen })}
    {:else}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:468:24
[31mError[39m: Property 'category_dropdown_listboxAriaLabel' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m      role="listbox"
      aria-label={i18n.[35mcategory_dropdown_listboxAriaLabel[36m()}
      onkeydown={handleDropdownKeydown}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:477:19
[31mError[39m: Property 'category_dropdown_categories' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          <div class="text-xs font-semibold text-[color:var(--text-tertiary)] uppercase tracking-wide px-3 py-2 border-b border-[color:var(--border-subtle)] mb-1">
            {i18n.[35mcategory_dropdown_categories[36m()}
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:492:88
[31mError[39m: Property 'category_dropdown_allCategories' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m              <span class="text-base" aria-hidden="true">🌍</span>
              <span class="text-sm font-medium text-[color:var(--text-primary)]">{i18n.[35mcategory_dropdown_allCategories[36m()}</span>
            </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryFilterDropdown.svelte[39m:551:7
[31mError[39m: Property 'category_dropdown_backToCategories' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            </svg>
{i18n.[35mcategory_dropdown_backToCategories[36m()}
          </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:55:18
[31mError[39m: Property 'filter_modal_title' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    class: className = '',
    title = i18n.[35mfilter_modal_title[36m(),
    applyLabel = i18n.filter_modal_applyFilters(),[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:56:23
[31mError[39m: Property 'filter_modal_applyFilters' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    title = i18n.filter_modal_title(),
    applyLabel = i18n.[35mfilter_modal_applyFilters[36m(),
    clearLabel = i18n.filter_modal_clearAll(),[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:57:23
[31mError[39m: Property 'filter_modal_clearAll' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    applyLabel = i18n.filter_modal_applyFilters(),
    clearLabel = i18n.[35mfilter_modal_clearAll[36m(),
    closeLabel = i18n.filter_modal_close(),[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:58:23
[31mError[39m: Property 'filter_modal_close' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    clearLabel = i18n.filter_modal_clearAll(),
    closeLabel = i18n.[35mfilter_modal_close[36m(),
    minPriceLabel = i18n.filter_modal_minPrice(),[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:59:26
[31mError[39m: Property 'filter_modal_minPrice' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    closeLabel = i18n.filter_modal_close(),
    minPriceLabel = i18n.[35mfilter_modal_minPrice[36m(),
    maxPriceLabel = i18n.filter_modal_maxPrice(),[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:60:26
[31mError[39m: Property 'filter_modal_maxPrice' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    minPriceLabel = i18n.filter_modal_minPrice(),
    maxPriceLabel = i18n.[35mfilter_modal_maxPrice[36m(),
    onApply,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:244:51
[31mError[39m: Property 'filter_modal_filter' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    if (announceChanges) {
      const filterText = activeCount === 1 ? i18n.[35mfilter_modal_filter[36m() : i18n.filter_modal_filters();
      announcement = `${i18n.filter_modal_applied()} ${activeCount} ${filterText}`;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:244:80
[31mError[39m: Property 'filter_modal_filters' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    if (announceChanges) {
      const filterText = activeCount === 1 ? i18n.filter_modal_filter() : i18n.[35mfilter_modal_filters[36m();
      announcement = `${i18n.filter_modal_applied()} ${activeCount} ${filterText}`;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:245:30
[31mError[39m: Property 'filter_modal_applied' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m      const filterText = activeCount === 1 ? i18n.filter_modal_filter() : i18n.filter_modal_filters();
      announcement = `${i18n.[35mfilter_modal_applied[36m()} ${activeCount} ${filterText}`;
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:264:27
[31mError[39m: Property 'filter_ui_allFiltersCleared' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m    if (announceChanges) {
      announcement = i18n.[35mfilter_ui_allFiltersCleared[36m();
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:340:17
[31mError[39m: Property 'filter_modal_modalDescription' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        <p id="filter-modal-description" class="text-sm text-[color:var(--text-secondary)] mt-1">
          {i18n.[35mfilter_modal_modalDescription[36m()}
        </p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterModal.svelte[39m:442:12
[31mError[39m: This condition will always return true since this function is always defined. Did you mean to call it instead? (ts)
[36m      <!-- Clear Button -->
      {#if [35mhasActiveFilters[36m}
        <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:332:13
[31mError[39m: Operator '>' cannot be applied to types '() => number' and 'number'. (ts)
[36m           min-h-[var(--touch-standard)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[color:var(--state-focus)] focus-visible:ring-offset-2
           {[35mactiveFilterCount > 0[36m 
             ? 'bg-[color:var(--primary)] text-[color:var(--primary-fg)]'[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:336:23
[31mError[39m: Operator '>' cannot be applied to types '() => number' and 'number'. (ts)
[36m    aria-label="Open filters"
    aria-describedby={[35mactiveFilterCount > 0[36m ? 'filter-count-description' : undefined}
  >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:339:10
[31mError[39m: Operator '>' cannot be applied to types '() => number' and 'number'. (ts)
[36m    {@render trigger()}
    {#if [35mactiveFilterCount > 0[36m}
      <span[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:388:18
[31mError[39m: This condition will always return true since this function is always defined. Did you mean to call it instead? (ts)
[36m            Preview: {previewResultCount.toLocaleString()} results
            {#if [35mhasPendingChanges[36m}
              <span class="text-[color:var(--warning-600)]">(unsaved changes)</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:423:55
[31mError[39m: Property 'category_all' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m                bind:value={localFilters[section.key]}
                options={[{ value: 'all', label: i18n.[35mcategory_all[36m() }, ...section.options]}
                onValueChange={(value) => handleFilterChange(section.key, value)}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:487:17
[31mError[39m: This condition will always return true since this function is always defined. Did you mean to call it instead? (ts)
[36m               transition-all duration-[var(--duration-base)]
               {[35mhasPendingChanges[36m ? 'ring-2 ring-[color:var(--primary-200)]' : ''}
               disabled:opacity-50 disabled:cursor-not-allowed"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:495:14
[31mError[39m: This condition will always return true since this function is always defined. Did you mean to call it instead? (ts)
[36m        {applyLabel}
        {#if [35mhasPendingChanges[36m}
          <span class="w-1.5 h-1.5 bg-[color:var(--primary-200)] rounded-full" aria-hidden="true"></span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:500:14
[31mError[39m: This condition will always return true since this function is always defined. Did you mean to call it instead? (ts)
[36m      <p id="apply-button-description" class="sr-only">
        {#if [35mhasPendingChanges[36m}
          You have unsaved filter changes. Click to apply them.[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\StickyFilterModal.svelte[39m:524:12
[31mError[39m: This condition will always return true since this function is always defined. Did you mean to call it instead? (ts)
[36m      <!-- Clear Button -->
      {#if [35mhasActiveFilters[36m}
        <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterResultsAnnouncer.svelte[39m:45:5
[31mError[39m: Type 'Timeout' is not assignable to type 'number'. (ts)
[36m    // Debounce announcements to avoid spam
    [35mtimeoutId[36m = setTimeout(() => {
      if (announcementTemplate) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\dialog\Dialog.svelte[39m:169:5
[33mWarn[39m: Unused CSS selector ".flex-col-reverse button"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    
    [35m.flex-col-reverse button[36m {
      min-height: var(--touch-primary); /* Ensure 44px touch targets on mobile */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\NotificationPanel.svelte[39m:248:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 2;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MessageNotificationToast.svelte[39m:144:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 3;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FollowNotificationToast.svelte[39m:154:5
[33mWarn[39m: Unused CSS selector ".progress"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    
    [35m.progress[36m {
      animation: none;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\WelcomeModal.svelte[39m:249:5
[33mWarn[39m: Unknown property: 'ring' (css)
[36m    border: 1px solid rgba(255, 255, 255, 0.3);
    [35mring[36m: 1px solid rgba(255, 255, 255, 0.2);
  }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SocialLinksEditor.svelte[39m:96:59
[31mError[39m: 'e.currentTarget' is possibly 'null'. (ts)
[36m                placeholder={platformInfo.placeholder}
                onchange={(e) => updateLink(index, 'url', [35me.currentTarget[36m.value)}
                class="bg-white/80"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SocialLinksEditor.svelte[39m:96:75
[31mError[39m: Property 'value' does not exist on type 'EventTarget'. (ts)
[36m                placeholder={platformInfo.placeholder}
                onchange={(e) => updateLink(index, 'url', e.currentTarget.[35mvalue[36m)}
                class="bg-white/80"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PayoutMethodSelector.svelte[39m:167:13
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            </h3>
            [35m<button
              type="button"
              onclick={() => expandedMethod = null}
              class="text-gray-400 hover:text-gray-500 transition-colors"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>[36m
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\NewSellerBadge.svelte[39m:22:9
[31mError[39m: Property 'badge_new' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m<span class="inline-flex items-center bg-gradient-to-r from-emerald-500 to-green-600 text-white font-bold rounded-full shadow-sm {sizeClasses[size]} {className}">
  {i18n.[35mbadge_new[36m()}
</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:152:10
[31mError[39m: Argument of type '() => TimelineStep[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m	<div class="relative">
		{#each [35mgetTimelineSteps[36m as step, index (step.key)}
			<div class="flex items-start mb-6 last:mb-0">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:152:43
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m	<div class="relative">
		{#each getTimelineSteps as step, index ([35mstep[36m.key)}
			<div class="flex items-start mb-6 last:mb-0">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:156:51
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m				{#if index < getTimelineSteps.length - 1}
					<div class="absolute left-4 top-8 w-0.5 h-6 {[35mstep[36m.isCompleted ? 'bg-[color:var(--status-success-border)]' : 'bg-[color:var(--border-subtle)]'}"></div>
				{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:161:7
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m				<div class="relative flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center text-sm
					{[35mstep[36m.isCompleted ? 'bg-[color:var(--status-success-bg)] text-[color:var(--status-success-text)] border-2 border-[color:var(--status-success-border)]' : 
					 step.isCurrent ? 'bg-[color:var(--status-warning-bg)] text-[color:var(--status-warning-text)] border-2 border-[color:var(--status-warning-border)]' :[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:162:7
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m					{step.isCompleted ? 'bg-[color:var(--status-success-bg)] text-[color:var(--status-success-text)] border-2 border-[color:var(--status-success-border)]' : 
					 [35mstep[36m.isCurrent ? 'bg-[color:var(--status-warning-bg)] text-[color:var(--status-warning-text)] border-2 border-[color:var(--status-warning-border)]' : 
					 'bg-[color:var(--surface-muted)] text-[color:var(--text-secondary)] border-2 border-[color:var(--border-subtle)]'}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:165:7
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m				">
					{[35mstep[36m.icon}
				</div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:171:39
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m					<div class="flex items-center justify-between mb-1">
						<h4 class="text-sm font-medium {[35mstep[36m.isCompleted || step.isCurrent ? 'text-[color:var(--text-primary)]' : 'text-[color:var(--text-secondary)]'}">
							{step.label}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:171:59
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m					<div class="flex items-center justify-between mb-1">
						<h4 class="text-sm font-medium {step.isCompleted || [35mstep[36m.isCurrent ? 'text-[color:var(--text-primary)]' : 'text-[color:var(--text-secondary)]'}">
							{step.label}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:172:9
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m						<h4 class="text-sm font-medium {step.isCompleted || step.isCurrent ? 'text-[color:var(--text-primary)]' : 'text-[color:var(--text-secondary)]'}">
							{[35mstep[36m.label}
						</h4>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:174:12
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m						</h4>
						{#if [35mstep[36m.timestamp}
							<time class="text-xs text-[color:var(--text-secondary)]">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:176:21
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m							<time class="text-xs text-[color:var(--text-secondary)]">
								{formatDate([35mstep[36m.timestamp)}
							</time>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:180:11
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m					</div>
					{#if [35mstep[36m.description}
						<p class="text-sm text-[color:var(--text-secondary)]">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderTimeline.svelte[39m:182:9
[31mError[39m: 'step' is of type 'unknown'. (ts)
[36m						<p class="text-sm text-[color:var(--text-secondary)]">
							{[35mstep[36m.description}
						</p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\OrderActions.svelte[39m:136:11
[31mError[39m: Argument of type '() => string[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m		<div class="flex flex-col sm:flex-row gap-3">
			{#each [35mavailableActions[36m as action}
				{#if action === 'markShipped'}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ImageUploader.svelte[39m:355:3
[33mWarn[39m: Do not use empty rulesets (css)
[36m<style>
  [35m.image-uploader[36m {
    /* Component styles */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewModal.svelte[39m:204:8
[31mError[39m: 'title' is possibly 'undefined'. (ts)
[36m					<span class="text-xs text-[color:var(--text-muted)]">
						{[35mtitle[36m.length}/255
					</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewModal.svelte[39m:239:6
[31mError[39m: Object literal may only specify known properties, and '"id"' does not exist in type 'Props'. (ts)
[36m				<ImageUploader
					[35mid[36m="review-image-uploader"
					maxFiles={5}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewDisplay.svelte[39m:124:7
[33mWarn[39m: Screenreaders already announce `<img>` elements as an image
https://svelte.dev/e/a11y_img_redundant_alt (svelte)
[36m					<div class="aspect-square relative rounded-lg overflow-hidden bg-[color:var(--surface-subtle)]">
						[35m<img
							src={imageUrl}
							alt="Review photo"
							class="w-full h-full object-cover hover:scale-105 transition-transform duration-200 cursor-pointer"
							loading="lazy"
							enhanced
						/>[36m
					</div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewDisplay.svelte[39m:129:8
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m							loading="lazy"
							[35menhanced[36m
						/>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:377:3
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m{#if dropdownVisible}
  [35m<div
    class="absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-b-xl shadow-lg z-50 {className}"
    onclick={(e) => e.stopPropagation()}
  >
    {#if query && query.trim()}
      <!-- Search Results Section -->
      {#if loading}
        <div class="p-4 text-center text-gray-500">
          <div class="inline-flex items-center gap-2">
            <div class="w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
            Searching...
          </div>
        </div>
      {:else if error}
        <div class="p-4 text-center text-red-500">
          {error}
        </div>
      {:else if results.length > 0}
        <div class="border-b border-gray-100" role="listbox" id={listboxId} aria-label={defaultTranslations.products}>
          <div class="px-4 py-2 text-xs font-medium text-gray-500 uppercase tracking-wider">
            Products
          </div>
          {#each results as product, index}
            <button
              class="w-full px-4 py-3 flex items-center gap-3 hover:bg-gray-50 text-left transition-colors {selectedIndex === index ? 'bg-blue-50' : ''}"
              onclick={() => handleProductSelect(product)}
              role="option"
              aria-selected={selectedIndex === index}
              id={`${listboxId}-option-${index}`}
            >
              {#if product.images?.[0]?.image_url}
                <img
                  src={product.images[0].image_url}
                  alt={product.title}
                  class="w-10 h-10 object-cover rounded-lg flex-shrink-0"
                />
              {:else}
                <div class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
              {/if}
              <div class="flex-1 min-w-0">
                <div class="font-medium text-gray-900 truncate">{product.title}</div>
                <div class="text-sm text-gray-500 flex items-center gap-2">
                  <span>{formatPrice(product.price)}</span>
                  {#if product.category_name}
                    <span>•</span>
                    <span>{product.category_name}</span>
                  {/if}
                </div>
              </div>
            </button>
          {/each}

          {#if results.length >= maxResults}
            <button
              class="w-full px-4 py-3 text-blue-600 hover:bg-blue-50 text-sm font-medium transition-colors border-t border-gray-100"
              onclick={() => handleSearchSelect(query)}
            >
              View all results for "{query}"
            </button>
          {/if}
        </div>
      {/if}
    {/if}

    <!-- Context-Aware Tabbed Browse Section -->
    <div class="p-4">
      <!-- Tab Headers - Dynamic based on context -->
      <div class="flex items-center gap-1 mb-4 bg-gray-100 p-1 rounded-lg">
        {#each availableTabs as tab}
          <button
            class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-200 {activeTab === tab.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}"
            onclick={() => activeTab = tab.key}
          >
            {tab.label}
          </button>
        {/each}
      </div>

      <!-- Tab Content with Smooth Transitions -->
      <div class="relative min-h-[120px]">
        {#key activeTab}
          <div class="animate-in fade-in-0 duration-200">
            {#if activeTab === 'categories'}
              <!-- Hierarchical Navigation Header -->
              {#if navigationStack.level > 1}
                <div class="mb-4">
                  <button
                    onclick={handleBackNavigation}
                    class="flex items-center gap-2 text-sm text-blue-600 hover:text-blue-700 transition-colors"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    Back to Categories
                  </button>
                </div>
              {/if}

              <!-- Categories Grid -->
              <div class="grid grid-cols-2 gap-3">
                {#each displayCategories as category}
                  <button
                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCategorySelect(category)}
                  >
                    <span class="text-2xl">{category.emoji || '📁'}</span>
                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{category.name}</span>
                      {#if category.product_count}
                        <span class="text-xs text-gray-500">({category.product_count})</span>
                      {/if}
                    </div>
                    {#if category.children && category.children.length > 0 && context === 'main'}
                      <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    {/if}
                  </button>
                {/each}
              </div>

              <!-- Empty state for categories -->
              {#if displayCategories.length === 0}
                <div class="text-center py-8 text-gray-500">
                  <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <p class="text-sm">No categories available</p>
                </div>
              {/if}

            {:else if activeTab === 'collections'}
              <div class="grid grid-cols-2 gap-3">
                {#each displayCollections as collection}
                  <button
                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCollectionSelect(collection)}
                  >
                    <span class="text-2xl">{collection.emoji}</span>
                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{collection.label}</span>
                      {#if collection.product_count}
                        <span class="text-xs text-gray-500">({collection.product_count})</span>
                      {/if}
                    </div>
                  </button>
                {/each}
              </div>

            {:else if activeTab === 'sellers'}
              <div class="space-y-3">
                {#each displaySellers as seller}
                  <button
                    class="w-full flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleSellerSelect(seller)}
                  >
                    {#if seller.avatar_url}
                      <img
                        src={seller.avatar_url}
                        alt={seller.username}
                        class="w-10 h-10 rounded-full object-cover flex-shrink-0"
                      />
                    {:else}
                      <div class="w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center flex-shrink-0">
                        <span class="text-white font-semibold text-sm">{seller.username.charAt(0).toUpperCase()}</span>
                      </div>
                    {/if}
                    <div class="flex-1 min-w-0">
                      <div class="flex items-center gap-2">
                        <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate">{seller.username}</span>
                        {#if seller.is_verified}
                          <svg class="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                          </svg>
                        {/if}
                      </div>
                      <div class="flex items-center gap-2 text-sm text-gray-500">
                        <span>{seller.total_products} items</span>
                        {#if seller.rating}
                          <span>•</span>
                          <div class="flex items-center gap-1">
                            <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <span>{seller.rating.toFixed(1)}</span>
                          </div>
                        {/if}
                      </div>
                    </div>
                  </button>
                {/each}

                <!-- View More Sellers Button -->
                {#if sellers.length > 5}
                  <button
                    onclick={() => goto('/sellers')}
                    class="w-full px-4 py-3 text-center text-blue-600 hover:bg-blue-50 text-sm font-medium transition-colors border-t border-gray-100 rounded-lg"
                  >
                    View All Sellers ({sellers.length})
                  </button>
                {/if}
              </div>
            {/if}
          </div>
        {/key}
      </div>
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:377:3
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m{#if dropdownVisible}
  [35m<div
    class="absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-b-xl shadow-lg z-50 {className}"
    onclick={(e) => e.stopPropagation()}
  >
    {#if query && query.trim()}
      <!-- Search Results Section -->
      {#if loading}
        <div class="p-4 text-center text-gray-500">
          <div class="inline-flex items-center gap-2">
            <div class="w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
            Searching...
          </div>
        </div>
      {:else if error}
        <div class="p-4 text-center text-red-500">
          {error}
        </div>
      {:else if results.length > 0}
        <div class="border-b border-gray-100" role="listbox" id={listboxId} aria-label={defaultTranslations.products}>
          <div class="px-4 py-2 text-xs font-medium text-gray-500 uppercase tracking-wider">
            Products
          </div>
          {#each results as product, index}
            <button
              class="w-full px-4 py-3 flex items-center gap-3 hover:bg-gray-50 text-left transition-colors {selectedIndex === index ? 'bg-blue-50' : ''}"
              onclick={() => handleProductSelect(product)}
              role="option"
              aria-selected={selectedIndex === index}
              id={`${listboxId}-option-${index}`}
            >
              {#if product.images?.[0]?.image_url}
                <img
                  src={product.images[0].image_url}
                  alt={product.title}
                  class="w-10 h-10 object-cover rounded-lg flex-shrink-0"
                />
              {:else}
                <div class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
              {/if}
              <div class="flex-1 min-w-0">
                <div class="font-medium text-gray-900 truncate">{product.title}</div>
                <div class="text-sm text-gray-500 flex items-center gap-2">
                  <span>{formatPrice(product.price)}</span>
                  {#if product.category_name}
                    <span>•</span>
                    <span>{product.category_name}</span>
                  {/if}
                </div>
              </div>
            </button>
          {/each}

          {#if results.length >= maxResults}
            <button
              class="w-full px-4 py-3 text-blue-600 hover:bg-blue-50 text-sm font-medium transition-colors border-t border-gray-100"
              onclick={() => handleSearchSelect(query)}
            >
              View all results for "{query}"
            </button>
          {/if}
        </div>
      {/if}
    {/if}

    <!-- Context-Aware Tabbed Browse Section -->
    <div class="p-4">
      <!-- Tab Headers - Dynamic based on context -->
      <div class="flex items-center gap-1 mb-4 bg-gray-100 p-1 rounded-lg">
        {#each availableTabs as tab}
          <button
            class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-200 {activeTab === tab.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}"
            onclick={() => activeTab = tab.key}
          >
            {tab.label}
          </button>
        {/each}
      </div>

      <!-- Tab Content with Smooth Transitions -->
      <div class="relative min-h-[120px]">
        {#key activeTab}
          <div class="animate-in fade-in-0 duration-200">
            {#if activeTab === 'categories'}
              <!-- Hierarchical Navigation Header -->
              {#if navigationStack.level > 1}
                <div class="mb-4">
                  <button
                    onclick={handleBackNavigation}
                    class="flex items-center gap-2 text-sm text-blue-600 hover:text-blue-700 transition-colors"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    Back to Categories
                  </button>
                </div>
              {/if}

              <!-- Categories Grid -->
              <div class="grid grid-cols-2 gap-3">
                {#each displayCategories as category}
                  <button
                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCategorySelect(category)}
                  >
                    <span class="text-2xl">{category.emoji || '📁'}</span>
                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{category.name}</span>
                      {#if category.product_count}
                        <span class="text-xs text-gray-500">({category.product_count})</span>
                      {/if}
                    </div>
                    {#if category.children && category.children.length > 0 && context === 'main'}
                      <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    {/if}
                  </button>
                {/each}
              </div>

              <!-- Empty state for categories -->
              {#if displayCategories.length === 0}
                <div class="text-center py-8 text-gray-500">
                  <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <p class="text-sm">No categories available</p>
                </div>
              {/if}

            {:else if activeTab === 'collections'}
              <div class="grid grid-cols-2 gap-3">
                {#each displayCollections as collection}
                  <button
                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCollectionSelect(collection)}
                  >
                    <span class="text-2xl">{collection.emoji}</span>
                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{collection.label}</span>
                      {#if collection.product_count}
                        <span class="text-xs text-gray-500">({collection.product_count})</span>
                      {/if}
                    </div>
                  </button>
                {/each}
              </div>

            {:else if activeTab === 'sellers'}
              <div class="space-y-3">
                {#each displaySellers as seller}
                  <button
                    class="w-full flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleSellerSelect(seller)}
                  >
                    {#if seller.avatar_url}
                      <img
                        src={seller.avatar_url}
                        alt={seller.username}
                        class="w-10 h-10 rounded-full object-cover flex-shrink-0"
                      />
                    {:else}
                      <div class="w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center flex-shrink-0">
                        <span class="text-white font-semibold text-sm">{seller.username.charAt(0).toUpperCase()}</span>
                      </div>
                    {/if}
                    <div class="flex-1 min-w-0">
                      <div class="flex items-center gap-2">
                        <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate">{seller.username}</span>
                        {#if seller.is_verified}
                          <svg class="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                          </svg>
                        {/if}
                      </div>
                      <div class="flex items-center gap-2 text-sm text-gray-500">
                        <span>{seller.total_products} items</span>
                        {#if seller.rating}
                          <span>•</span>
                          <div class="flex items-center gap-1">
                            <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <span>{seller.rating.toFixed(1)}</span>
                          </div>
                        {/if}
                      </div>
                    </div>
                  </button>
                {/each}

                <!-- View More Sellers Button -->
                {#if sellers.length > 5}
                  <button
                    onclick={() => goto('/sellers')}
                    class="w-full px-4 py-3 text-center text-blue-600 hover:bg-blue-50 text-sm font-medium transition-colors border-t border-gray-100 rounded-lg"
                  >
                    View All Sellers ({sellers.length})
                  </button>
                {/if}
              </div>
            {/if}
          </div>
        {/key}
      </div>
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:3:24
[31mError[39m: Cannot find module '$app/navigation' or its corresponding type declarations. (ts)
[36m  import type { Database } from '@repo/database';
  import { goto } from [35m'$app/navigation'[36m;
  import { isBrowser } from './utils/runtime.js';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:10:3
[31mError[39m: Modifiers cannot appear here.
If this is a declare statement, move it into <script context="module">..</script> (ts)
[36m
  [35mexport[36m interface ProductWithImages extends Product {
    images: ProductImage[];[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:19:3
[31mError[39m: Modifiers cannot appear here.
If this is a declare statement, move it into <script context="module">..</script> (ts)
[36m  // Context types for different search experiences
  [35mexport[36m type SearchContext = 'main' | 'search' | 'category';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:22:3
[31mError[39m: Modifiers cannot appear here.
If this is a declare statement, move it into <script context="module">..</script> (ts)
[36m  // Category hierarchy types
  [35mexport[36m interface CategoryHierarchy {
    id: string;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:34:3
[31mError[39m: Modifiers cannot appear here.
If this is a declare statement, move it into <script context="module">..</script> (ts)
[36m  // Seller type
  [35mexport[36m interface Seller {
    id: string;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:45:3
[31mError[39m: Modifiers cannot appear here.
If this is a declare statement, move it into <script context="module">..</script> (ts)
[36m  // Collection type
  [35mexport[36m interface Collection {
    key: string;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:163:25
[31mError[39m: Property 'parentKey' does not exist on type 'CategoryHierarchy'. (ts)
[36m            return cat.level && cat.level > 1 &&
                   (cat.[35mparentKey[36m === categoryContext || cat.key.startsWith(`${categoryContext}-`));
          });[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:163:62
[31mError[39m: Property 'key' does not exist on type 'CategoryHierarchy'. (ts)
[36m            return cat.level && cat.level > 1 &&
                   (cat.parentKey === categoryContext || cat.[35mkey[36m.startsWith(`${categoryContext}-`));
          });[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:449:16
[31mError[39m: Argument of type '() => { key: "categories" | "collections" | "sellers"; label: string; }[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m      <div class="flex items-center gap-1 mb-4 bg-gray-100 p-1 rounded-lg">
        {#each [35mavailableTabs[36m as tab}
          <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:451:111
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m          <button
            class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-200 {activeTab === [35mtab[36m.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}"
            onclick={() => activeTab = tab.key}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:452:40
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m            class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-200 {activeTab === tab.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}"
            onclick={() => activeTab = [35mtab[36m.key}
          >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:454:14
[31mError[39m: 'tab' is of type 'unknown'. (ts)
[36m          >
            {[35mtab[36m.label}
          </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:481:24
[31mError[39m: Argument of type '() => CategoryHierarchy[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m              <div class="grid grid-cols-2 gap-3">
                {#each [35mdisplayCategories[36m as category}
                  <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:484:57
[31mError[39m: Argument of type 'unknown' is not assignable to parameter of type 'CategoryHierarchy'. (ts)
[36m                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCategorySelect([35mcategory[36m)}
                  >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:486:45
[31mError[39m: 'category' is of type 'unknown'. (ts)
[36m                  >
                    <span class="text-2xl">{[35mcategory[36m.emoji || '📁'}</span>
                    <div class="flex-1 min-w-0">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:488:105
[31mError[39m: 'category' is of type 'unknown'. (ts)
[36m                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{[35mcategory[36m.name}</span>
                      {#if category.product_count}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:489:28
[31mError[39m: 'category' is of type 'unknown'. (ts)
[36m                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{category.name}</span>
                      {#if [35mcategory[36m.product_count}
                        <span class="text-xs text-gray-500">({category.product_count})</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:490:63
[31mError[39m: 'category' is of type 'unknown'. (ts)
[36m                      {#if category.product_count}
                        <span class="text-xs text-gray-500">({[35mcategory[36m.product_count})</span>
                      {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:493:26
[31mError[39m: 'category' is of type 'unknown'. (ts)
[36m                    </div>
                    {#if [35mcategory[36m.children && category.children.length > 0 && context === 'main'}
                      <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:493:47
[31mError[39m: 'category' is of type 'unknown'. (ts)
[36m                    </div>
                    {#if category.children && [35mcategory[36m.children.length > 0 && context === 'main'}
                      <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:514:24
[31mError[39m: Argument of type '() => Collection[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m              <div class="grid grid-cols-2 gap-3">
                {#each [35mdisplayCollections[36m as collection}
                  <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:517:59
[31mError[39m: Argument of type 'unknown' is not assignable to parameter of type 'Collection'. (ts)
[36m                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCollectionSelect([35mcollection[36m)}
                  >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:519:45
[31mError[39m: 'collection' is of type 'unknown'. (ts)
[36m                  >
                    <span class="text-2xl">{[35mcollection[36m.emoji}</span>
                    <div class="flex-1 min-w-0">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:521:105
[31mError[39m: 'collection' is of type 'unknown'. (ts)
[36m                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{[35mcollection[36m.label}</span>
                      {#if collection.product_count}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:522:28
[31mError[39m: 'collection' is of type 'unknown'. (ts)
[36m                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{collection.label}</span>
                      {#if [35mcollection[36m.product_count}
                        <span class="text-xs text-gray-500">({collection.product_count})</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:523:63
[31mError[39m: 'collection' is of type 'unknown'. (ts)
[36m                      {#if collection.product_count}
                        <span class="text-xs text-gray-500">({[35mcollection[36m.product_count})</span>
                      {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:532:24
[31mError[39m: Argument of type '() => Seller[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m              <div class="space-y-3">
                {#each [35mdisplaySellers[36m as seller}
                  <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:535:55
[31mError[39m: Argument of type 'unknown' is not assignable to parameter of type 'Seller'. (ts)
[36m                    class="w-full flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleSellerSelect([35mseller[36m)}
                  >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:537:26
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                  >
                    {#if [35mseller[36m.avatar_url}
                      <img[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:539:30
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                      <img
                        src={[35mseller[36m.avatar_url}
                        alt={seller.username}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:540:30
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                        src={seller.avatar_url}
                        alt={[35mseller[36m.username}
                        class="w-10 h-10 rounded-full object-cover flex-shrink-0"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:545:73
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                      <div class="w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center flex-shrink-0">
                        <span class="text-white font-semibold text-sm">{[35mseller[36m.username.charAt(0).toUpperCase()}</span>
                      </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:550:101
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                      <div class="flex items-center gap-2">
                        <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate">{[35mseller[36m.username}</span>
                        {#if seller.is_verified}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:551:30
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                        <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate">{seller.username}</span>
                        {#if [35mseller[36m.is_verified}
                          <svg class="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:558:32
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                      <div class="flex items-center gap-2 text-sm text-gray-500">
                        <span>{[35mseller[36m.total_products} items</span>
                        {#if seller.rating}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:559:30
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                        <span>{seller.total_products} items</span>
                        {#if [35mseller[36m.rating}
                          <span>•</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:565:36
[31mError[39m: 'seller' is of type 'unknown'. (ts)
[36m                            </svg>
                            <span>{[35mseller[36m.rating.toFixed(1)}</span>
                          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\EnhancedSearchBar.svelte[39m:5:24
[31mError[39m: Cannot find module '$app/navigation' or its corresponding type declarations. (ts)
[36m  import SearchDropdown from './SearchDropdown.svelte';
  import { goto } from [35m'$app/navigation'[36m;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:272:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  {#if dropdownSearchQuery.trim()}
                    [35m<button
                      onclick={() => dropdownSearchQuery = ''}
                      class="absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 hover:text-gray-600"
                    >
                      <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                    </button>[36m
                  {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:108:40
[31mError[39m: Property 'display_name' does not exist on type 'TopSeller'. (ts)
[36m  return topSellers.filter(seller => {
    const name = seller.name || seller.[35mdisplay_name[36m || seller.username || '';
    return name.toLowerCase().includes(query);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:108:63
[31mError[39m: Property 'username' does not exist on type 'TopSeller'. (ts)
[36m  return topSellers.filter(seller => {
    const name = seller.name || seller.display_name || seller.[35musername[36m || '';
    return name.toLowerCase().includes(query);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:162:13
[31mError[39m: Cannot find name 'preloadCode'. (ts)
[36m    try {
      await [35mpreloadCode[36m(`/category/${categorySlug}`);
      await preloadData(`/category/${categorySlug}`);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:163:13
[31mError[39m: Cannot find name 'preloadData'. (ts)
[36m      await preloadCode(`/category/${categorySlug}`);
      await [35mpreloadData[36m(`/category/${categorySlug}`);
    } catch (e) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:299:43
[31mError[39m: 'this' implicitly has type 'any' because it does not have a type annotation. (ts)
[36m                          class="w-8 h-8 rounded-full object-cover flex-shrink-0"
                          onerror={() => ([35mthis[36m.src = '/avatars/1.png')}
                        />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:339:43
[31mError[39m: 'this' implicitly has type 'any' because it does not have a type annotation. (ts)
[36m                          class="w-8 h-8 rounded-full object-cover flex-shrink-0"
                          onerror={() => ([35mthis[36m.src = '/avatars/1.png')}
                        />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:426:31
[31mError[39m: Cannot find name 'preloadCode'. (ts)
[36m          data-prefetch="hover"
          onmouseenter={() => [35mpreloadCode[36m('/search')}
          ontouchstart={() => preloadCode('/search')}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:427:31
[31mError[39m: Cannot find name 'preloadCode'. (ts)
[36m          onmouseenter={() => preloadCode('/search')}
          ontouchstart={() => [35mpreloadCode[36m('/search')}
          onclick={onNavigateToAll}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:440:33
[31mError[39m: Property 'product_count' does not exist on type '{ created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; level: number | null; name: string; parent_id: string | null; slug: string; sort_order: number | null; updated_at: string | null; }'. (ts)
[36m            ariaLabel={`Browse ${category.name}`}
            itemCount={category.[35mproduct_count[36m || 0}
            showItemCount={category.product_count > 0}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:441:37
[31mError[39m: Property 'product_count' does not exist on type '{ created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; level: number | null; name: string; parent_id: string | null; slug: string; sort_order: number | null; updated_at: string | null; }'. (ts)
[36m            itemCount={category.product_count || 0}
            showItemCount={category.[35mproduct_count[36m > 0}
            data-prefetch="hover"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:460:40
[31mError[39m: Property 'product_count' does not exist on type '{ created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; level: number | null; name: string; parent_id: string | null; slug: string; sort_order: number | null; updated_at: string | null; }'. (ts)
[36m            ariaLabel={`Browse ${virtualCategory.name}`}
            itemCount={virtualCategory.[35mproduct_count[36m}
            showItemCount={true}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MegaMenuCategories.svelte[39m:54:63
[31mError[39m: Argument of type '() => { children: CategoryWithChildren[]; product_count: number; created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; ... 5 more ...; updated_at: string | null; }[]' is not assignable to parameter of type 'CategoryWithChildren[]'. (ts)
[36m  // Enhanced category data with fallback mock data
  const enhancedCategories = $derived<CategoryWithChildren[]>([35m() => {[36m
    if (categories && categories.length > 0) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MegaMenuCategories.svelte[39m:469:44
[31mError[39m: Argument of type 'CategoryWithChildren | null' is not assignable to parameter of type 'CategoryWithChildren'.
  Type 'null' is not assignable to type 'CategoryWithChildren'. (ts)
[36m          <button
            onclick={() => handleL2ShopAll([35mselectedL2[36m)}
            class="px-3 py-1.5 text-[length:var(--text-sm)] font-medium text-[color:var(--brand-primary)] hover:bg-[color:var(--surface-brand-subtle)] rounded-md transition-colors"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:527:19
[33mWarn[39m: Elements with the ARIA role "option" must have the following attributes defined: "aria-selected"
https://svelte.dev/e/a11y_role_has_required_aria_props (svelte)
[36m                  class="w-full flex items-center gap-2 px-3 h-9 min-h-9 hover:bg-gray-50 text-left transition-colors"
                  [35mrole="option"[36m
                  aria-label="Select category: {c.name} (Level {c.level})"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:809:184
[33mWarn[39m: Redundant role 'navigation'
https://svelte.dev/e/a11y_no_redundant_roles (svelte)
[36m    <!-- Smart Filter Pills -->
    <nav id="category-pills" class="flex items-center gap-2 sm:gap-3 overflow-x-auto scrollbar-hide pb-[var(--gutter-xxs)] pt-[var(--gutter-xxs)]" aria-label="Smart category filters" [35mrole="navigation"[36m>
      <!-- Dynamic Category Pills -->[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:372:23
[31mError[39m: Element implicitly has an 'any' type because expression of type 'number' can't be used to index type '() => { key: string; label: string; level: number; }[]'.
  No index signature with a parameter of type 'number' was found on type '() => { key: string; label: string; level: number; }[]'. (ts)
[36m  if (categoryBreadcrumbs.length > 0) {
    const lastCrumb = [35mcategoryBreadcrumbs[categoryBreadcrumbs.length - 1][36m;
    const mainCat = mainCategories.find(c => c.key === appliedFilters?.category);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:406:6
[31mError[39m: Property 'filter' does not exist on type '() => { level: number; name: string; slug: string; path: string[]; }[]'. (ts)
[36m  return flatCategories
    .[35mfilter[36m(c => c.name.toLowerCase().includes(q))
    .slice(0, 10);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:406:13
[31mError[39m: Parameter 'c' implicitly has an 'any' type. (ts)
[36m  return flatCategories
    .filter([35mc[36m => c.name.toLowerCase().includes(q))
    .slice(0, 10);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:491:9
[31mError[39m: Object literal may only specify known properties, and '"aria-label"' does not exist in type 'Props'. (ts)
[36m        {mode}
        [35maria-label[36m="Search products"
        aria-describedby="search-results-count"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:523:22
[31mError[39m: Argument of type '() => any' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m              <div class="p-2 text-[length:var(--text-xs)] font-semibold text-[color:var(--text-secondary)] uppercase tracking-wide">Categories</div>
              {#each [35mcategoryMatches[36m as c}
                <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:525:63
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                <button
                  onclick={() => handleMegaMenuCategorySelect([35mc[36m.slug, c.level, c.path)}
                  class="w-full flex items-center gap-2 px-3 h-9 min-h-9 hover:bg-gray-50 text-left transition-colors"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:525:71
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                <button
                  onclick={() => handleMegaMenuCategorySelect(c.slug, [35mc[36m.level, c.path)}
                  class="w-full flex items-center gap-2 px-3 h-9 min-h-9 hover:bg-gray-50 text-left transition-colors"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:525:80
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                <button
                  onclick={() => handleMegaMenuCategorySelect(c.slug, c.level, [35mc[36m.path)}
                  class="w-full flex items-center gap-2 px-3 h-9 min-h-9 hover:bg-gray-50 text-left transition-colors"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:528:49
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                  role="option"
                  aria-label="Select category: {[35mc[36m.name} (Level {c.level})"
                >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:528:65
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                  role="option"
                  aria-label="Select category: {c.name} (Level {[35mc[36m.level})"
                >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:530:101
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                >
                  <span class="text-[color:var(--text-tertiary)] text-[length:var(--text-xs)] w-8">{[35mc[36m.level === 1 ? 'L1' : c.level === 2 ? 'L2' : 'L3'}</span>
                  <span class="flex-1 text-[length:var(--text-sm)] text-gray-900">{c.name}</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:530:124
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                >
                  <span class="text-[color:var(--text-tertiary)] text-[length:var(--text-xs)] w-8">{c.level === 1 ? 'L1' : [35mc[36m.level === 2 ? 'L2' : 'L3'}</span>
                  <span class="flex-1 text-[length:var(--text-sm)] text-gray-900">{c.name}</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:531:84
[31mError[39m: 'c' is of type 'unknown'. (ts)
[36m                  <span class="text-[color:var(--text-tertiary)] text-[length:var(--text-xs)] w-8">{c.level === 1 ? 'L1' : c.level === 2 ? 'L2' : 'L3'}</span>
                  <span class="flex-1 text-[length:var(--text-sm)] text-gray-900">{[35mc[36m.name}</span>
                  <svg class="w-4 h-4 text-[color:var(--text-tertiary)]" fill="none" stroke="currentColor" viewBox="0 0 24 24">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:649:19
[31mError[39m: Object literal may only specify known properties, and '"aria-label"' does not exist in type 'Props'. (ts)
[36m                  onClose={handleCategoryDropdownClose}
                  [35maria-label[36m="Category hierarchy navigation"
                />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:768:16
[31mError[39m: Argument of type '() => { key: string; label: string; level: number; }[]' is not assignable to parameter of type 'ArrayLike<unknown> | Iterable<unknown>'. (ts)
[36m          </svg>
        {#each [35mcategoryBreadcrumbs[36m as crumb, index}
          <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:770:50
[31mError[39m: 'crumb' is of type 'unknown'. (ts)
[36m          <button
            onclick={() => handleBreadcrumbClick([35mcrumb[36m.level)}
            class="px-2 py-1 h-9 min-h-9 flex items-center text-[color:var(--text-secondary)] hover:text-[color:var(--brand-primary)] hover:bg-[color:var(--surface-subtle)] rounded-md transition-colors duration-200 font-medium[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:773:40
[31mError[39m: 'crumb' is of type 'unknown'. (ts)
[36m              {index === categoryBreadcrumbs.length - 1 ? 'text-blue-600' : 'hover:underline'}"
            aria-label={`Navigate to ${[35mcrumb[36m.label} level`}
          >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:775:14
[31mError[39m: 'crumb' is of type 'unknown'. (ts)
[36m          >
            {[35mcrumb[36m.label}
          </button>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:811:29
[31mError[39m: Property 'pills' does not exist on type '() => { level: number; pills: { key: string; label: string; icon: string; active: boolean; }[]; showMainCategories: boolean; }'. (ts)
[36m      <!-- Dynamic Category Pills -->
      {#each smartPillData?.[35mpills[36m || [] as pill, index}
        <CategoryPill[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:816:72
[31mError[39m: Property 'level' does not exist on type '() => { level: number; pills: { key: string; label: string; icon: string; active: boolean; }[]; showMainCategories: boolean; }'. (ts)
[36m          emoji={pill.icon}
          onclick={() => handleSmartPillClick(pill.key, smartPillData?.[35mlevel[36m || 1)}
          class="shrink-0 min-h-11"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:823:27
[31mError[39m: Property 'pills' does not exist on type '() => { level: number; pills: { key: string; label: string; icon: string; active: boolean; }[]; showMainCategories: boolean; }'. (ts)
[36m      <!-- Separator between category and condition pills -->
      {#if smartPillData?.[35mpills[36m?.length > 0 && conditionFilters?.length > 0}
        <div class="w-px h-6 bg-[color:var(--border-default)] mx-1"></div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:849:12
[31mError[39m: Object literal may only specify known properties, and 'appliedFilters' does not exist in type 'Props'. (ts)
[36m        <AppliedFilterPills
          {[35mappliedFilters[36m}
          onRemoveFilter={onFilterRemove}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:278:103
[31mError[39m: Property 'icon' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m          >
            <span class="text-lg flex-shrink-0" role="img" aria-hidden="true">{currentCategoryDisplay.[35micon[36m}</span>
            <div class="flex flex-col items-start min-w-0 hidden sm:flex">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:280:43
[31mError[39m: Property 'breadcrumb' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m            <div class="flex flex-col items-start min-w-0 hidden sm:flex">
              {#if currentCategoryDisplay.[35mbreadcrumb[36m && currentCategoryDisplay.breadcrumb.length > 1}
                <span class="text-xs text-[color:var(--text-tertiary)] truncate max-w-32">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:280:80
[31mError[39m: Property 'breadcrumb' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m            <div class="flex flex-col items-start min-w-0 hidden sm:flex">
              {#if currentCategoryDisplay.breadcrumb && currentCategoryDisplay.[35mbreadcrumb[36m.length > 1}
                <span class="text-xs text-[color:var(--text-tertiary)] truncate max-w-32">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:282:43
[31mError[39m: Property 'breadcrumb' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m                <span class="text-xs text-[color:var(--text-tertiary)] truncate max-w-32">
                  {currentCategoryDisplay.[35mbreadcrumb[36m.slice(0, -1).join(' → ')}
                </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:285:43
[31mError[39m: Property 'breadcrumb' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m                <span class="text-sm font-medium text-[color:var(--text-primary)] truncate max-w-32">
                  {currentCategoryDisplay.[35mbreadcrumb[36m[currentCategoryDisplay.breadcrumb.length - 1]}
                </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:285:77
[31mError[39m: Property 'breadcrumb' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m                <span class="text-sm font-medium text-[color:var(--text-primary)] truncate max-w-32">
                  {currentCategoryDisplay.breadcrumb[currentCategoryDisplay.[35mbreadcrumb[36m.length - 1]}
                </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:289:43
[31mError[39m: Property 'label' does not exist on type '() => { label: string; icon: string; breadcrumb: string[]; } | { label: any; icon: string; breadcrumb: never[]; }'. (ts)
[36m                <span class="text-sm font-medium text-[color:var(--text-secondary)] truncate max-w-32">
                  {currentCategoryDisplay.[35mlabel[36m}
                </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:308:15
[31mError[39m: Object literal may only specify known properties, and 'allCategories' does not exist in type '{ women?: string | undefined; men?: string | undefined; kids?: string | undefined; unisex?: string | undefined; clothing?: string | undefined; shoes?: string | undefined; accessories?: string | undefined; bags?: string | undefined; back?: string | undefined; items?: string | undefined; }'. (ts)
[36m            translations={{
              [35mallCategories[36m: i18n.filter_allCategories ? i18n.filter_allCategories() : 'All Categories',
              browseAll: i18n.search_all ? i18n.search_all() : 'Browse All',[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:337:44
[31mError[39m: Cannot find name 'handlePillKeyNav'. (ts)
[36m          disabled={isNavigating}
          onkeydown={(e: KeyboardEvent) => [35mhandlePillKeyNav[36m(e, index)}
        />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:337:64
[31mError[39m: Cannot find name 'index'. (ts)
[36m          disabled={isNavigating}
          onkeydown={(e: KeyboardEvent) => handlePillKeyNav(e, [35mindex[36m)}
        />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:353:44
[31mError[39m: Cannot find name 'handlePillKeyNav'. (ts)
[36m          aria-pressed={appliedFilters?.condition === condition.key}
          onkeydown={(e: KeyboardEvent) => [35mhandlePillKeyNav[36m(e, (mainCategories?.length || 0) + cIdx)}
        >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategorySearchBar.svelte[39m:361:10
[31mError[39m: Operator '>' cannot be applied to types '() => number' and 'number'. (ts)
[36m    <!-- Applied Filters with Enhanced Category Display -->
    {#if [35mactiveFilterCount > 0[36m}
      <div class="pb-2">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\VirtualProductGrid.svelte[39m:131:11
[31mError[39m: Property 'startTiming' does not exist on type 'never'. (ts)
[36m  const handleScroll = throttle((event: Event) => {
    perf?.[35mstartTiming[36m('virtual-scroll');
    if (scrollParent === 'self') {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\VirtualProductGrid.svelte[39m:138:11
[31mError[39m: Property 'endTiming' does not exist on type 'never'. (ts)
[36m    }
    perf?.[35mendTiming[36m('virtual-scroll');
  }, 16); // ~60fps[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\LazySearchResults.svelte[39m:278:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 2;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\LazySearchResults.svelte[39m:71:9
[31mError[39m: Object literal may only specify known properties, and 'limit' does not exist in type '{ query?: string | undefined; page?: number | undefined; filters?: Record<string, unknown> | undefined; }'. (ts)
[36m        page,
        [35mlimit[36m: 20,
        ...filters[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:133:48
[31mError[39m: Property 'timestamp' does not exist on type 'ConsentState'. (ts)
[36m      // Check if consent needs renewal (365 days)
      const age = Date.now() - existingConsent.[35mtimestamp[36m;
      if (age > 365 * 24 * 60 * 60 * 1000) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:164:12
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | KeyboardEvent | UIEvent | ErrorEvent | FocusEvent | ProgressEvent<...> | ... 22 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.
    Argument of type '"requestCookieConsent"' is not assignable to parameter of type 'keyof WindowEventMap'.
  Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void', gave the following error.
    Argument of type '(event: CustomEvent) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
      Type '(event: CustomEvent) => void' is not assignable to type 'EventListener'.
        Types of parameters 'event' and 'evt' are incompatible.
          Type 'Event' is missing the following properties from type 'CustomEvent<any>': detail, initCustomEvent (ts)
[36m    
    window.[35maddEventListener[36m('requestCookieConsent', handleCookieConsentRequest);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:167:14
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | KeyboardEvent | UIEvent | ErrorEvent | FocusEvent | ProgressEvent<...> | ... 22 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.
    Argument of type '"requestCookieConsent"' is not assignable to parameter of type 'keyof WindowEventMap'.
  Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void', gave the following error.
    Argument of type '(event: CustomEvent) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
      Type '(event: CustomEvent) => void' is not assignable to type 'EventListener'.
        Types of parameters 'event' and 'evt' are incompatible.
          Type 'Event' is missing the following properties from type 'CustomEvent<any>': detail, initCustomEvent (ts)
[36m    return () => {
      window.[35mremoveEventListener[36m('requestCookieConsent', handleCookieConsentRequest);
    };[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:180:42
[31mError[39m: Type 'null' cannot be used as an index type. (ts)
[36m      // Set the detected country name
      detectedCountryName = countryNames[[35mdetectedCountry[36m] || data.country_name || detectedCountry;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:191:25
[31mError[39m: Type 'null' cannot be used as an index type. (ts)
[36m      
      if (countryToLang[[35mdetectedCountry[36m]) {
        selectedLocale = countryToLang[detectedCountry];[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:192:40
[31mError[39m: Type 'null' cannot be used as an index type. (ts)
[36m      if (countryToLang[detectedCountry]) {
        selectedLocale = countryToLang[[35mdetectedCountry[36m];
      }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:2:31
[31mError[39m: Cannot find module '@repo/ui/types/product' or its corresponding type declarations. (ts)
[36m<script lang="ts">
	import type { Product } from [35m'@repo/ui/types/product'[36m;
	import type { Profile } from '@repo/ui/types';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:126:27
[31mError[39m: Parameter 'img' implicitly has an 'any' type. (ts)
[36m		if (product?.images) {
			product.images.forEach([35mimg[36m => {
				const imageUrl = typeof img === 'string' ? img : img?.image_url;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:165:31
[31mError[39m: Parameter 'img' implicitly has an 'any' type. (ts)
[36m			description: product.description || description,
			image: product.images?.map([35mimg[36m => 
				typeof img === 'string' && img.startsWith('http') ? img : `https://driplo.xyz${img}`[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:248:10
[31mError[39m: Type '() => string' is not assignable to type 'string'. (ts)
[36m			name: product.title,
			item: [35mfullUrl[36m
		});[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TopProgress.svelte[39m:2:30
[31mError[39m: Cannot find module '$app/stores' or its corresponding type declarations. (ts)
[36m<script lang="ts">
  import { navigating } from [35m'$app/stores'[36m;
  import { isBrowser } from './utils/runtime.js';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BottomNav.svelte[39m:85:1
[33mWarn[39m: Non-interactive element `<nav>` cannot have interactive role 'tablist'
https://svelte.dev/e/a11y_no_noninteractive_element_to_interactive_role (svelte)
[36m<!-- Native mobile bottom navigation -->
[35m<nav 
  role="tablist"
  data-bottom-nav
  class="fixed bottom-0 left-0 right-0 z-50 sm:hidden
         bg-[color:var(--surface-base)]/95 backdrop-blur-xl 
         border-t border-[color:var(--border-subtle)]
         pb-[env(safe-area-inset-bottom)]"
>
  <div class="grid grid-cols-5">
    {#each navItems as item (item.id)}
      {@const active = isActive(item)}
      
      <a
        href={item.href}
        class="flex items-center justify-center
               min-h-[var(--touch-primary)] py-[var(--space-3)]
               no-underline hover:no-underline touch-manipulation"
        data-sveltekit-preload-data="hover"
        aria-current={active ? 'page' : undefined}
        aria-label={item.label}
        title={item.label}
      >
        <!-- Icon -->
        <div class="relative">
          <svg
            class="w-7 h-7 transition-colors duration-200 {active ? 'text-[color:var(--brand-primary)]' : 'text-[color:var(--text-tertiary)] hover:text-[color:var(--text-secondary)]'}"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            stroke-width="1.5"
          >
            <path d={item.icon} />
          </svg>

          <!-- Badge for messages only -->
          {#if item.showBadge && item.id === 'messages' && unreadMessageCount > 0}
            <div
              class="absolute -top-1 -right-1 min-w-4 h-4 px-1
                     bg-[color:var(--status-error-solid)] text-[color:var(--text-inverse)]
                     text-[10px] font-bold rounded-full flex items-center justify-center"
            >
              {unreadMessageCount > 99 ? '99' : unreadMessageCount}
            </div>
          {/if}
        </div>
      </a>
    {/each}
  </div>
</nav>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\select\Select.svelte[39m:154:19
[31mError[39m: Expected 1 arguments, but got 2. (ts)
[36m      <button
        use:option[35m={{ value: opt.value, label: opt.label, disabled: opt.disabled }[36m}
        class="{optionClasses} {$isSelected(opt.value) ? 'bg-[var(--state-active)] font-medium' : ''}"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ImageUploaderSupabase.svelte[39m:151:31
[31mError[39m: Property 'contains' does not exist on type 'EventTarget'. (ts)
[36m    // Only stop dragging if we're leaving the main container
    if (!event.currentTarget?.[35mcontains[36m(event.relatedTarget as Node)) {
      isDragging = false;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\toast\Toast.svelte[39m:92:39
[31mError[39m: Argument of type 'ToastAction | undefined' is not assignable to parameter of type 'ToastAction'.
  Type 'undefined' is not assignable to type 'ToastAction'. (ts)
[36m        <button
          onclick={() => handleAction([35mtoast.action[36m)}
          class="btn btn-{toast.action.variant || 'ghost'} btn-sm"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TutorialToast.svelte[39m:146:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      <!-- Close button -->
      [35m<button
        onclick={handleDismiss}
        class="flex-shrink-0 text-gray-400 hover:text-gray-500"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>[36m
    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TutorialToast.svelte[39m:29:7
[31mError[39m: Type 'HTMLDivElement | undefined' is not assignable to type 'HTMLDivElement'.
  Type 'undefined' is not assignable to type 'HTMLDivElement'. (ts)
[36m  let targetRect = $state<DOMRect | null>(null);
  let [35mtoastElement[36m: HTMLDivElement = $state();[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\menu\Menu.svelte[39m:42:13
[31mError[39m: Type 'null' is not assignable to type 'string | HTMLElement'. (ts)
[36m    menuClass = '',
    portal: [35mportalTarget[36m = null,
    gutter = 8,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\menu\Menu.svelte[39m:71:5
[31mError[39m: Object literal may only specify known properties, and 'openFocus' does not exist in type '_CreateMenuProps'. (ts)
[36m    forceVisible: false,
    [35mopenFocus[36m: undefined,
    closeFocus: undefined,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:114:13
[31mError[39m: Type '{ id: any; title: any; price: any; currency: string; images: any; condition: any; seller_id: string; category_id: string; size: any; brand: any; created_at: any; updated_at: any; sold: any; favorites_count: number; views_count: number; }[]' is not assignable to type 'UIProduct[]'.
  Type '{ id: any; title: any; price: any; currency: string; images: any; condition: any; seller_id: string; category_id: string; size: any; brand: any; created_at: any; updated_at: any; sold: any; favorites_count: number; views_count: number; }' is missing the following properties from type 'UIProduct': sellerName, sellerRating, sellerId, createdAt, and 39 more. (ts)
[36m      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      const [35mproducts[36m: Product[] = rawProducts.map((p: any) => ({
        id: p.id,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:236:47
[31mError[39m: Property 'first_image' does not exist on type 'UIProduct'. (ts)
[36m              <img
                src={item.images?.[0] || item.[35mfirst_image[36m || '/placeholder-product.svg'}
                alt={item.title}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:240:17
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m                loading="lazy"
                [35menhanced[36m
              />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:298:55
[31mError[39m: Property 'first_image' does not exist on type 'UIProduct'. (ts)
[36m                <img
                  src={product.images?.[0] || product.[35mfirst_image[36m || '/placeholder-product.svg'}
                  alt={product.title}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:302:19
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m                  loading="lazy"
                  [35menhanced[36m
                />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:344:9
[31mError[39m: Object literal may only specify known properties, and '"fullWidth"' does not exist in type 'Props'. (ts)
[36m        variant="primary"
        [35mfullWidth[36m
        size="lg"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HeaderLogo.svelte[39m:84:3
[33mWarn[39m: Unused CSS selector ".emoji-track span"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.emoji-track span[36m {
    height: 1.2em;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HeaderLogo.svelte[39m:101:5
[33mWarn[39m: Unused CSS selector ".emoji-track span:not(:first-child)"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    }
    [35m.emoji-track span:not(:first-child)[36m {
      display: none;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileMenuSearch.svelte[39m:249:7
[33mWarn[39m: Also define the standard property 'appearance' for compatibility (css)
[36m    .mobile-menu-search input[type="search"] {
      [35m-webkit-appearance[36m: none;
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileMenuSearch.svelte[39m:3:24
[31mError[39m: Cannot find module '$app/navigation' or its corresponding type declarations. (ts)
[36m  import type { Database } from '@repo/database';
  import { goto } from [35m'$app/navigation'[36m;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileMenuSearch.svelte[39m:46:7
[31mError[39m: Type 'Timeout' is not assignable to type 'number'. (ts)
[36m
      [35msearchTimeout[36m = setTimeout(async () => {
        isSearching = true;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:112:7
[31mError[39m: Object literal may only specify known properties, and 'quickActionsLabel' does not exist in type '{ sellItems?: string | undefined; myProfile?: string | undefined; startSelling?: string | undefined; settings?: string | undefined; signOut?: string | undefined; signingOut?: string | undefined; ... 18 more ...; searchPlaceholder?: string | undefined; }'. (ts)
[36m      searchPlaceholder: 'Search for items...',
      [35mquickActionsLabel[36m: 'Quick Actions',
      settingsLabel: 'Settings',[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:160:7
[31mError[39m: Type 'CategoryWithChildren' is not assignable to type 'null'. (ts)
[36m      // Has subcategories - show them in the same menu
      [35mselectedMainCategory[36m = category;
      categoryBreadcrumb = [{ name: category.name, slug: category.slug }];[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:161:29
[31mError[39m: Type '{ name: string; slug: string; }' is not assignable to type 'never'. (ts)
[36m      selectedMainCategory = category;
      categoryBreadcrumb = [[35m{ name: category.name, slug: category.slug }[36m];
      currentView = 'subcategory';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:171:35
[31mError[39m: Parameter 'subcategory' implicitly has an 'any' type. (ts)
[36m  // Handle subcategory click - check for level 3 first
  function handleSubcategoryClick([35msubcategory[36m) {
    if (subcategory.children && subcategory.children.length > 0) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:175:29
[31mError[39m: Type '{ name: any; slug: any; }' is not assignable to type 'never'. (ts)
[36m      selectedMainCategory = subcategory;
      categoryBreadcrumb = [[35m...categoryBreadcrumb[36m, { name: subcategory.name, slug: subcategory.slug }];
      currentView = 'subcategory'; // Keep same view type for level 3[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:175:52
[31mError[39m: Type '{ name: any; slug: any; }' is not assignable to type 'never'. (ts)
[36m      selectedMainCategory = subcategory;
      categoryBreadcrumb = [...categoryBreadcrumb, [35m{ name: subcategory.name, slug: subcategory.slug }[36m];
      currentView = 'subcategory'; // Keep same view type for level 3[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:189:88
[31mError[39m: Property 'slug' does not exist on type 'never'. (ts)
[36m      categoryBreadcrumb = categoryBreadcrumb.slice(0, -1);
      const parentCategory = categories.find(cat => cat.slug === categoryBreadcrumb[0].[35mslug[36m);
      selectedMainCategory = parentCategory;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:190:7
[31mError[39m: Type 'CategoryWithChildren | undefined' is not assignable to type 'null'.
  Type 'undefined' is not assignable to type 'null'. (ts)
[36m      const parentCategory = categories.find(cat => cat.slug === categoryBreadcrumb[0].slug);
      [35mselectedMainCategory[36m = parentCategory;
    } else {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:259:28
[31mError[39m: Property 'home_itemCount' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m  function formatItemCount(count: number): string {
    const itemsText = i18n.[35mhome_itemCount[36m();
    if (count === undefined || count === null || isNaN(count)) return `0 ${itemsText}`;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:302:29
[31mError[39m: Cannot find name 'unreadNotifications'. (ts)
[36m                </svg>
                {#if typeof [35munreadNotifications[36m === 'number' && unreadNotifications > 0}
                  <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:302:65
[31mError[39m: Cannot find name 'unreadNotifications'. (ts)
[36m                </svg>
                {#if typeof unreadNotifications === 'number' && [35munreadNotifications[36m > 0}
                  <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:304:22
[31mError[39m: Cannot find name 'unreadNotifications'. (ts)
[36m                  <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">
                    {[35munreadNotifications[36m > 99 ? '99' : unreadNotifications}
                  </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:304:56
[31mError[39m: Cannot find name 'unreadNotifications'. (ts)
[36m                  <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">
                    {unreadNotifications > 99 ? '99' : [35munreadNotifications[36m}
                  </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:315:19
[31mError[39m: Object literal may only specify known properties, and '"style"' does not exist in type 'Props'. (ts)
[36m                  fallback={initials}
                  [35mstyle[36m="width: 44px; height: 44px;"
                />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:326:56
[31mError[39m: Property 'rating' does not exist on type '() => { rating: any; itemsSold: any; listings: any; }'. (ts)
[36m                      </svg>
                      <span>{formatRating(profileStats.[35mrating[36m)}</span>
                    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:355:27
[31mError[39m: Property 'nav_messages' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m                    </svg>
                    {i18n.[35mnav_messages[36m()}
                    {#if typeof unreadMessages === 'number' && unreadMessages > 0}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:356:33
[31mError[39m: Cannot find name 'unreadMessages'. (ts)
[36m                    {i18n.nav_messages()}
                    {#if typeof [35munreadMessages[36m === 'number' && unreadMessages > 0}
                      <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:356:64
[31mError[39m: Cannot find name 'unreadMessages'. (ts)
[36m                    {i18n.nav_messages()}
                    {#if typeof unreadMessages === 'number' && [35munreadMessages[36m > 0}
                      <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:358:26
[31mError[39m: Cannot find name 'unreadMessages'. (ts)
[36m                      <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">
                        {[35munreadMessages[36m > 99 ? '99' : unreadMessages}
                      </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:358:55
[31mError[39m: Cannot find name 'unreadMessages'. (ts)
[36m                      <span class="absolute -top-1 -right-1 min-w-4 h-4 px-1 bg-red-600 text-white text-[10px] font-bold rounded-full flex items-center justify-center">
                        {unreadMessages > 99 ? '99' : [35munreadMessages[36m}
                      </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:403:55
[31mError[39m: Property 'women' does not exist on type '() => { women: number; men: number; kids: number; unisex: number; }'. (ts)
[36m                    <div class="text-sm text-gray-500">
                      {formatItemCount(categoryCounts.[35mwomen[36m)}
                    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:432:55
[31mError[39m: Property 'men' does not exist on type '() => { women: number; men: number; kids: number; unisex: number; }'. (ts)
[36m                    <div class="text-sm text-gray-500">
                      {formatItemCount(categoryCounts.[35mmen[36m)}
                    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:461:55
[31mError[39m: Property 'kids' does not exist on type '() => { women: number; men: number; kids: number; unisex: number; }'. (ts)
[36m                    <div class="text-sm text-gray-500">
                      {formatItemCount(categoryCounts.[35mkids[36m)}
                    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:490:55
[31mError[39m: Property 'unisex' does not exist on type '() => { women: number; men: number; kids: number; unisex: number; }'. (ts)
[36m                    <div class="text-sm text-gray-500">
                      {formatItemCount(categoryCounts.[35munisex[36m)}
                    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:507:109
[31mError[39m: Property 'quickActionsLabel' does not exist on type '{ sellItems?: string | undefined; myProfile?: string | undefined; startSelling?: string | undefined; settings?: string | undefined; signOut?: string | undefined; signingOut?: string | undefined; ... 18 more ...; searchPlaceholder?: string | undefined; }'. (ts)
[36m            <div>
              <h2 class="text-xs font-medium text-gray-700 uppercase tracking-wide mb-2 px-2">{translations.[35mquickActionsLabel[36m}</h2>
              <div class="grid grid-cols-3 gap-2.5">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:572:109
[31mError[39m: Property 'settingsLabel' does not exist on type '{ sellItems?: string | undefined; myProfile?: string | undefined; startSelling?: string | undefined; settings?: string | undefined; signOut?: string | undefined; signingOut?: string | undefined; ... 18 more ...; searchPlaceholder?: string | undefined; }'. (ts)
[36m            <div>
              <h2 class="text-xs font-medium text-gray-700 uppercase tracking-wide mb-2 px-2">{translations.[35msettingsLabel[36m}</h2>
              <div class="bg-white rounded-xl border border-gray-200 p-4 space-y-4">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:576:73
[31mError[39m: Property 'nav_languageTheme' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m                <div class="flex items-center justify-between">
                  <span class="text-sm font-medium text-gray-900">{i18n.[35mnav_languageTheme[36m()}</span>
                  <div class="flex items-center gap-2">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:593:101
[31mError[39m: Property 'nav_supportCenter' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            <div>
              <h2 class="text-xs font-medium text-gray-700 uppercase tracking-wide mb-2 px-2">{i18n.[35mnav_supportCenter[36m()}</h2>
              <div class="bg-gray-50 rounded-lg border border-gray-200 overflow-hidden">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:674:76
[31mError[39m: Property 'children' does not exist on type 'never'. (ts)
[36m            {/if}
          {:else if currentView === 'subcategory' && selectedMainCategory?.[35mchildren[36m}
            <!-- Subcategories View -->[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:689:41
[31mError[39m: Property 'name' does not exist on type 'never'. (ts)
[36m                <h1 class="text-lg font-semibold text-gray-900">
                  {selectedMainCategory.[35mname[36m}
                  {#if categoryBreadcrumb.length > 1}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:691:103
[31mError[39m: Property 'name' does not exist on type 'never'. (ts)
[36m                  {#if categoryBreadcrumb.length > 1}
                    <span class="text-gray-500"> / {categoryBreadcrumb[categoryBreadcrumb.length - 1].[35mname[36m}</span>
                  {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:698:45
[31mError[39m: Property 'children' does not exist on type 'never'. (ts)
[36m              <div class="space-y-3">
                {#each selectedMainCategory.[35mchildren[36m as subcategory}
                  <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryNavigationSheet.svelte[39m:100:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m      <!-- Backdrop -->
      [35m<div
        class="fixed inset-0 bg-black/50"
        onclick={() => onOpenChange(false)}
      ></div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryNavigationSheet.svelte[39m:100:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m      <!-- Backdrop -->
      [35m<div
        class="fixed inset-0 bg-black/50"
        onclick={() => onOpenChange(false)}
      ></div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:45:17
[31mError[39m: Property 'footer_company' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        <h3 class="text-sm font-semibold text-gray-900 uppercase tracking-wider">
          {i18n.[35mfooter_company[36m()}
        </h3>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:53:21
[31mError[39m: Property 'footer_about' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_about[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:61:21
[31mError[39m: Property 'footer_careers' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_careers[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:69:21
[31mError[39m: Property 'footer_press' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_press[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:77:21
[31mError[39m: Property 'footer_blog' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_blog[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:86:17
[31mError[39m: Property 'footer_support' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        <h3 class="text-sm font-semibold text-gray-900 uppercase tracking-wider">
          {i18n.[35mfooter_support[36m()}
        </h3>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:94:21
[31mError[39m: Property 'footer_help' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_help[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:102:21
[31mError[39m: Property 'footer_trustSafety' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_trustSafety[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:110:21
[31mError[39m: Property 'footer_returns' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_returns[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:119:17
[31mError[39m: Property 'footer_legal' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        <h3 class="text-sm font-semibold text-gray-900 uppercase tracking-wider">
          {i18n.[35mfooter_legal[36m()}
        </h3>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:127:21
[31mError[39m: Property 'footer_privacy' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_privacy[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:135:21
[31mError[39m: Property 'footer_terms' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_terms[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:143:21
[31mError[39m: Property 'footer_cookies' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            >
              {i18n.[35mfooter_cookies[36m()}
            </a>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:152:17
[31mError[39m: Property 'footer_newsletter' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        <h3 class="text-sm font-semibold text-gray-900 uppercase tracking-wider">
          {i18n.[35mfooter_newsletter[36m()}
        </h3>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:161:33
[31mError[39m: Property 'footer_newsletterPlaceholder' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m              type="email"
              placeholder={i18n.[35mfooter_newsletterPlaceholder[36m()}
              class="flex-1 min-h-[36px] px-3 py-2 text-sm border border-gray-200 rounded-lg[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:179:23
[31mError[39m: Property 'footer_subscribe' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m              {:else}
                {i18n.[35mfooter_subscribe[36m()}
              {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:187:63
[31mError[39m: Property 'footer_followUs' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m        <div class="space-y-3">
          <h4 class="text-sm font-medium text-gray-900">{i18n.[35mfooter_followUs[36m()}</h4>
          <div class="flex space-x-3">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:244:25
[31mError[39m: Property 'footer_allRightsReserved' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            <span>© {new Date().getFullYear()} Driplo.</span>
            <span>{i18n.[35mfooter_allRightsReserved[36m()}</span>
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:247:25
[31mError[39m: Property 'footer_madeWith' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m          <div class="flex items-center space-x-1 text-sm text-gray-500">
            <span>{i18n.[35mfooter_madeWith[36m()}</span>
            <span class="text-red-500">❤️</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:249:25
[31mError[39m: Property 'footer_in' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            <span class="text-red-500">❤️</span>
            <span>{i18n.[35mfooter_in[36m()}</span>
            <span class="font-medium">{i18n.footer_bulgaria()} 🇧🇬</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\Footer.svelte[39m:250:45
[31mError[39m: Property 'footer_bulgaria' does not exist on type 'typeof import("K:/driplo-turbo-1/packages/i18n/lib/index")'. (ts)
[36m            <span>{i18n.footer_in()}</span>
            <span class="font-medium">{i18n.[35mfooter_bulgaria[36m()} 🇧🇬</span>
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PartnerShowcase.svelte[39m:69:7
[33mWarn[39m: `<div>` with a mouseenter or mouseleave handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    {#if variant === 'horizontal' || variant === 'marquee'}
      [35m<div 
        bind:this={scrollContainer}
        class="flex overflow-x-auto scrollbar-hide gap-4 px-4 sm:px-0 pb-2
               {variant === 'marquee' ? 'scroll-smooth' : ''}"
        onmouseenter={() => { if (variant === 'marquee') isScrolling = true; }}
        onmouseleave={() => { if (variant === 'marquee') isScrolling = false; }}
      >
        {#each partners as partner}
          <button
            onclick={() => handlePartnerClick(partner)}
            class="flex-shrink-0 group relative bg-white border border-gray-200 rounded-lg p-4 
                   hover:border-gray-300 hover:shadow-sm transition-all duration-200
                   focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2
                   min-w-[120px] max-w-[160px]"
            title="{partner.name}{partner.description ? ` - ${partner.description}` : ''}"
          >
            <!-- Logo -->
            <div class="aspect-square w-12 h-12 mx-auto mb-2 overflow-hidden rounded-md bg-gray-50 flex items-center justify-center">
              {#if partner.logo}
                <img 
                  src={partner.logo} 
                  alt="{partner.name} logo" 
                  class="w-full h-full object-contain group-hover:scale-105 transition-transform duration-200"
                  loading="lazy"
                />
              {:else}
                <div class="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                  <span class="text-gray-500 text-xs font-bold">
                    {partner.name.charAt(0).toUpperCase()}
                  </span>
                </div>
              {/if}
            </div>
            
            <!-- Partner Name -->
            <p class="text-sm font-medium text-gray-900 text-center truncate group-hover:text-black transition-colors">
              {partner.name}
            </p>
            
            <!-- Link Icon -->
            {#if partner.instagram || partner.website}
              <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                <svg class="w-3 h-3 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </div>
            {/if}
          </button>
        {/each}
      </div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PartnerShowcase.svelte[39m:176:5
[33mWarn[39m: Unused CSS selector ".group button"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    .group img,
    [35m.group button[36m,
    .group div {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PartnerBanner.svelte[39m:207:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 2;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:162:30
[31mError[39m: Object literal may only specify known properties, and '"aria-label"' does not exist in type 'Props'. (ts)
[36m      {#each Array(10) as _, i}
        <ProductCardSkeleton [35maria-label[36m="Loading product {i + 1}" />
      {/each}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:191:15
[31mError[39m: Object literal may only specify known properties, and 'newSeller' does not exist in type '{ size?: string | undefined; currency?: string | undefined; addToFavorites?: string | undefined; removeFromFavorites?: string | undefined; brandNewWithTags?: string | undefined; ... 7 more ...; categoryTranslation?: ((category: string) => string) | undefined; }'. (ts)
[36m              size: translations.product_size,
              [35mnewSeller[36m: translations.trending_newSeller,
              unknownSeller: translations.seller_unknown,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:239:9
[31mError[39m: Object literal may only specify known properties, and '"aria-label"' does not exist in type 'Props'. (ts)
[36m        onclick={onBrowseAll}
        [35maria-label[36m="Browse all products"
      >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:255:10
[31mError[39m: 'errors' is possibly 'undefined'. (ts)
[36m        <span class="sr-only">Error: </span>
        {[35merrors[36m.products}
      </p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:101:1
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m<!-- Modal backdrop -->
[35m<div
  class="fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4"
  onclick={handleBackdropClick}
  role="dialog"
  aria-modal="true"
  aria-labelledby="modal-title-{product.id}"
  aria-describedby="modal-desc-{product.id}"
>
  <!-- Modal content -->
  <div 
    bind:this={modalRef}
    class="bg-white rounded-xl w-full max-w-72 p-3 shadow-xl"
    role="document"
  >
    <!-- Product image with close button -->
    <div class="aspect-square rounded-lg mb-3 relative overflow-hidden bg-gray-100">
      <img 
        src={imageUrl} 
        alt="{product.title} product image"
        class="w-full h-full object-cover"
        loading="eager"
      />
      
      <!-- Close button -->
      <button
        onclick={onClose}
        class="absolute top-2 right-2 p-1.5 bg-white/90 hover:bg-white rounded-full shadow-sm transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
        aria-label="Close product details"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      
      <!-- Seller info button -->
      {#if product.seller_name}
        <button 
          onclick={toggleSellerInfo}
          class="absolute bottom-2 left-2 flex items-center gap-1.5 bg-white/95 md:backdrop-blur-sm rounded-full shadow-sm hover:bg-white transition-colors duration-200 {showSellerInfo ? 'px-2.5 py-1.5' : 'pr-2'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
          aria-label="View seller information for {product.seller_name}"
          aria-expanded={showSellerInfo}
        >
          <div class="w-7 h-7 rounded-full border-2 border-white bg-gray-200 overflow-hidden flex-shrink-0">
            {#if product.seller_avatar}
              <img 
                src={product.seller_avatar} 
                alt="{product.seller_name} avatar" 
                class="w-full h-full object-cover"
              />
            {:else}
              <div class="w-full h-full bg-gray-300 flex items-center justify-center text-xs text-gray-500 font-semibold">
                {sellerInitial}
              </div>
            {/if}
          </div>
          <div 
            class="overflow-hidden transition-colors duration-200 {showSellerInfo ? 'max-w-40' : 'max-w-20'}"
            aria-hidden={!showSellerInfo}
          >
            {#if showSellerInfo}
              <div class="text-left">
                <p class="text-xs font-medium text-gray-900">{product.seller_name}</p>
                {#if product.seller_rating}
                  <div class="flex items-center gap-0.5">
                    <svg class="w-3 h-3 text-yellow-500 fill-current" viewBox="0 0 20 20" aria-hidden="true">
                      <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z"/>
                    </svg>
                    <span class="text-xs text-gray-500" aria-label="Rating: {product.seller_rating} stars">
                      {product.seller_rating}
                    </span>
                  </div>
                {/if}
              </div>
            {:else}
              <span class="text-xs text-gray-900 font-medium whitespace-nowrap">{product.seller_name}</span>
            {/if}
          </div>
        </button>
      {/if}
    </div>

    <!-- Product info -->
    <h2 id="modal-title-{product.id}" class="font-semibold text-sm mb-1">
      {product.title}
    </h2>
    
    <div class="flex items-center justify-between mb-3">
      <p class="text-lg font-bold" aria-label="Price: {formattedPrice}">
        {formattedPrice}
      </p>
      {#if product.favorite_count && product.favorite_count > 0}
        <div class="flex items-center gap-1 text-xs text-gray-500">
          <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"/>
          </svg>
          <span aria-label="{product.favorite_count} people favorited this">
            {product.favorite_count}
          </span>
        </div>
      {/if}
    </div>

    <!-- Size selector -->
    {#if requiresSizeSelection}
      <fieldset class="mb-3">
        <legend class="text-xs text-gray-500 mb-1.5">
          Size {hasMultipleSizes ? '(required)' : ''}
        </legend>
        <div class="flex gap-1 flex-wrap" role="radiogroup" aria-required="true">
          {#each product.sizes as size}
            <button
              onclick={() => selectedSize = size}
              class="px-2 py-1 text-xs border rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black {selectedSize === size ? 'bg-black text-white border-black' : 'border-gray-300 hover:border-gray-400'}"
              role="radio"
              aria-checked={selectedSize === size}
              aria-label="Size {size}"
            >
              {size}
            </button>
          {/each}
        </div>
      </fieldset>
    {/if}

    <!-- Description for screen readers -->
    <div id="modal-desc-{product.id}" class="sr-only">
      <p>Quick view for {product.title}</p>
      <p>Price: {formattedPrice}</p>
      {#if product.seller_name}
        <p>Sold by {product.seller_name}</p>
      {/if}
      {#if requiresSizeSelection}
        <p>Available sizes: {product.sizes.join(', ')}</p>
      {/if}
    </div>

    <!-- Actions -->
    <div class="flex gap-2">
      <button 
        onclick={handleAddToCart}
        disabled={!canPurchase}
        class="flex-1 bg-black text-white text-sm py-2.5 px-4 rounded-lg font-medium transition-colors hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50 disabled:cursor-not-allowed"
        aria-label="Buy {product.title} now{selectedSize ? ` in size ${selectedSize}` : ''}"
      >
        Buy Now
      </button>
      <button 
        onclick={handleToggleFavorite}
        disabled={isLoadingFavorite}
        class="p-2.5 border rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black {isLoadingFavorite ? 'opacity-50 cursor-wait' : ''} {isFavorited ? 'border-red-300 bg-red-50 text-red-600' : 'border-gray-300 hover:bg-gray-50'}"
        aria-label="{isFavorited ? 'Remove from' : 'Add to'} favorites"
        aria-pressed={isFavorited}
      >
        {#if isLoadingFavorite}
          <svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24" aria-hidden="true">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span class="sr-only">Loading...</span>
        {:else}
          <svg class="w-4 h-4 transition-colors" fill={isFavorited ? 'currentColor' : 'none'} stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
          </svg>
        {/if}
      </button>
    </div>
  </div>
</div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:101:1
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m<!-- Modal backdrop -->
[35m<div
  class="fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4"
  onclick={handleBackdropClick}
  role="dialog"
  aria-modal="true"
  aria-labelledby="modal-title-{product.id}"
  aria-describedby="modal-desc-{product.id}"
>
  <!-- Modal content -->
  <div 
    bind:this={modalRef}
    class="bg-white rounded-xl w-full max-w-72 p-3 shadow-xl"
    role="document"
  >
    <!-- Product image with close button -->
    <div class="aspect-square rounded-lg mb-3 relative overflow-hidden bg-gray-100">
      <img 
        src={imageUrl} 
        alt="{product.title} product image"
        class="w-full h-full object-cover"
        loading="eager"
      />
      
      <!-- Close button -->
      <button
        onclick={onClose}
        class="absolute top-2 right-2 p-1.5 bg-white/90 hover:bg-white rounded-full shadow-sm transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
        aria-label="Close product details"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      
      <!-- Seller info button -->
      {#if product.seller_name}
        <button 
          onclick={toggleSellerInfo}
          class="absolute bottom-2 left-2 flex items-center gap-1.5 bg-white/95 md:backdrop-blur-sm rounded-full shadow-sm hover:bg-white transition-colors duration-200 {showSellerInfo ? 'px-2.5 py-1.5' : 'pr-2'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
          aria-label="View seller information for {product.seller_name}"
          aria-expanded={showSellerInfo}
        >
          <div class="w-7 h-7 rounded-full border-2 border-white bg-gray-200 overflow-hidden flex-shrink-0">
            {#if product.seller_avatar}
              <img 
                src={product.seller_avatar} 
                alt="{product.seller_name} avatar" 
                class="w-full h-full object-cover"
              />
            {:else}
              <div class="w-full h-full bg-gray-300 flex items-center justify-center text-xs text-gray-500 font-semibold">
                {sellerInitial}
              </div>
            {/if}
          </div>
          <div 
            class="overflow-hidden transition-colors duration-200 {showSellerInfo ? 'max-w-40' : 'max-w-20'}"
            aria-hidden={!showSellerInfo}
          >
            {#if showSellerInfo}
              <div class="text-left">
                <p class="text-xs font-medium text-gray-900">{product.seller_name}</p>
                {#if product.seller_rating}
                  <div class="flex items-center gap-0.5">
                    <svg class="w-3 h-3 text-yellow-500 fill-current" viewBox="0 0 20 20" aria-hidden="true">
                      <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z"/>
                    </svg>
                    <span class="text-xs text-gray-500" aria-label="Rating: {product.seller_rating} stars">
                      {product.seller_rating}
                    </span>
                  </div>
                {/if}
              </div>
            {:else}
              <span class="text-xs text-gray-900 font-medium whitespace-nowrap">{product.seller_name}</span>
            {/if}
          </div>
        </button>
      {/if}
    </div>

    <!-- Product info -->
    <h2 id="modal-title-{product.id}" class="font-semibold text-sm mb-1">
      {product.title}
    </h2>
    
    <div class="flex items-center justify-between mb-3">
      <p class="text-lg font-bold" aria-label="Price: {formattedPrice}">
        {formattedPrice}
      </p>
      {#if product.favorite_count && product.favorite_count > 0}
        <div class="flex items-center gap-1 text-xs text-gray-500">
          <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"/>
          </svg>
          <span aria-label="{product.favorite_count} people favorited this">
            {product.favorite_count}
          </span>
        </div>
      {/if}
    </div>

    <!-- Size selector -->
    {#if requiresSizeSelection}
      <fieldset class="mb-3">
        <legend class="text-xs text-gray-500 mb-1.5">
          Size {hasMultipleSizes ? '(required)' : ''}
        </legend>
        <div class="flex gap-1 flex-wrap" role="radiogroup" aria-required="true">
          {#each product.sizes as size}
            <button
              onclick={() => selectedSize = size}
              class="px-2 py-1 text-xs border rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black {selectedSize === size ? 'bg-black text-white border-black' : 'border-gray-300 hover:border-gray-400'}"
              role="radio"
              aria-checked={selectedSize === size}
              aria-label="Size {size}"
            >
              {size}
            </button>
          {/each}
        </div>
      </fieldset>
    {/if}

    <!-- Description for screen readers -->
    <div id="modal-desc-{product.id}" class="sr-only">
      <p>Quick view for {product.title}</p>
      <p>Price: {formattedPrice}</p>
      {#if product.seller_name}
        <p>Sold by {product.seller_name}</p>
      {/if}
      {#if requiresSizeSelection}
        <p>Available sizes: {product.sizes.join(', ')}</p>
      {/if}
    </div>

    <!-- Actions -->
    <div class="flex gap-2">
      <button 
        onclick={handleAddToCart}
        disabled={!canPurchase}
        class="flex-1 bg-black text-white text-sm py-2.5 px-4 rounded-lg font-medium transition-colors hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50 disabled:cursor-not-allowed"
        aria-label="Buy {product.title} now{selectedSize ? ` in size ${selectedSize}` : ''}"
      >
        Buy Now
      </button>
      <button 
        onclick={handleToggleFavorite}
        disabled={isLoadingFavorite}
        class="p-2.5 border rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black {isLoadingFavorite ? 'opacity-50 cursor-wait' : ''} {isFavorited ? 'border-red-300 bg-red-50 text-red-600' : 'border-gray-300 hover:bg-gray-50'}"
        aria-label="{isFavorited ? 'Remove from' : 'Add to'} favorites"
        aria-pressed={isFavorited}
      >
        {#if isLoadingFavorite}
          <svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24" aria-hidden="true">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span class="sr-only">Loading...</span>
        {:else}
          <svg class="w-4 h-4 transition-colors" fill={isFavorited ? 'currentColor' : 'none'} stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
          </svg>
        {/if}
      </button>
    </div>
  </div>
</div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:31:45
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m  // Derived states
  const hasMultipleSizes = $derived(product.[35msizes[36m && product.sizes.length > 1);
  const requiresSizeSelection = $derived(product.sizes && product.sizes.length > 0);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:31:62
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m  // Derived states
  const hasMultipleSizes = $derived(product.sizes && product.[35msizes[36m.length > 1);
  const requiresSizeSelection = $derived(product.sizes && product.sizes.length > 0);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:32:50
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m  const hasMultipleSizes = $derived(product.sizes && product.sizes.length > 1);
  const requiresSizeSelection = $derived(product.[35msizes[36m && product.sizes.length > 0);
  const canPurchase = $derived(!requiresSizeSelection || selectedSize);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:32:67
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m  const hasMultipleSizes = $derived(product.sizes && product.sizes.length > 1);
  const requiresSizeSelection = $derived(product.sizes && product.[35msizes[36m.length > 0);
  const canPurchase = $derived(!requiresSizeSelection || selectedSize);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:34:42
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m  const canPurchase = $derived(!requiresSizeSelection || selectedSize);
  const sellerInitial = $derived(product.[35mseller_name[36m?.charAt(0).toUpperCase() || 'S');
  const formattedPrice = $derived(`£${product.price.toFixed(2)}`);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:44:17
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m  $effect(() => {
    if (product.[35msizes[36m?.length === 1 && !selectedSize) {
      selectedSize = product.sizes[0];[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:45:30
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m    if (product.sizes?.length === 1 && !selectedSize) {
      selectedSize = product.[35msizes[36m[0];
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:136:20
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m      <!-- Seller info button -->
      {#if product.[35mseller_name[36m}
        <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:140:60
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m          class="absolute bottom-2 left-2 flex items-center gap-1.5 bg-white/95 md:backdrop-blur-sm rounded-full shadow-sm hover:bg-white transition-colors duration-200 {showSellerInfo ? 'px-2.5 py-1.5' : 'pr-2'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
          aria-label="View seller information for {product.[35mseller_name[36m}"
          aria-expanded={showSellerInfo}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:144:26
[31mError[39m: Property 'seller_avatar' does not exist on type 'UIProduct'. Did you mean 'sellerAvatar'? (ts)
[36m          <div class="w-7 h-7 rounded-full border-2 border-white bg-gray-200 overflow-hidden flex-shrink-0">
            {#if product.[35mseller_avatar[36m}
              <img[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:146:30
[31mError[39m: Property 'seller_avatar' does not exist on type 'UIProduct'. Did you mean 'sellerAvatar'? (ts)
[36m              <img 
                src={product.[35mseller_avatar[36m} 
                alt="{product.seller_name} avatar"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:147:31
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m                src={product.seller_avatar} 
                alt="{product.[35mseller_name[36m} avatar" 
                class="w-full h-full object-cover"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:162:71
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m              <div class="text-left">
                <p class="text-xs font-medium text-gray-900">{product.[35mseller_name[36m}</p>
                {#if product.seller_rating}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:163:30
[31mError[39m: Property 'seller_rating' does not exist on type 'UIProduct'. Did you mean 'sellerRating'? (ts)
[36m                <p class="text-xs font-medium text-gray-900">{product.seller_name}</p>
                {#if product.[35mseller_rating[36m}
                  <div class="flex items-center gap-0.5">[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:168:86
[31mError[39m: Property 'seller_rating' does not exist on type 'UIProduct'. Did you mean 'sellerRating'? (ts)
[36m                    </svg>
                    <span class="text-xs text-gray-500" aria-label="Rating: {product.[35mseller_rating[36m} stars">
                      {product.seller_rating}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:169:32
[31mError[39m: Property 'seller_rating' does not exist on type 'UIProduct'. Did you mean 'sellerRating'? (ts)
[36m                    <span class="text-xs text-gray-500" aria-label="Rating: {product.seller_rating} stars">
                      {product.[35mseller_rating[36m}
                    </span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:175:90
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m            {:else}
              <span class="text-xs text-gray-900 font-medium whitespace-nowrap">{product.[35mseller_name[36m}</span>
            {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:210:26
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m        <div class="flex gap-1 flex-wrap" role="radiogroup" aria-required="true">
          {#each product.[35msizes[36m as size}
            <button[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:229:20
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m      <p>Price: {formattedPrice}</p>
      {#if product.[35mseller_name[36m}
        <p>Sold by {product.seller_name}</p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:230:29
[31mError[39m: Property 'seller_name' does not exist on type 'UIProduct'. Did you mean 'sellerName'? (ts)
[36m      {#if product.seller_name}
        <p>Sold by {product.[35mseller_name[36m}</p>
      {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:233:38
[31mError[39m: Property 'sizes' does not exist on type 'UIProduct'. Did you mean 'size'? (ts)
[36m      {#if requiresSizeSelection}
        <p>Available sizes: {product.[35msizes[36m.join(', ')}</p>
      {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:167:3
[33mWarn[39m: Redundant role 'region'
https://svelte.dev/e/a11y_no_redundant_roles (svelte)
[36m  aria-label={translations.trending_promoted}
  [35mrole="region"[36m
>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:250:5
[33mWarn[39m: Non-interactive element `<nav>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m    {/if}
    [35m<nav
      aria-label="Promoted products carousel"
      class="relative pb-2"
      onkeydown={handleKeyNavigation}
    >
      <div
        class="flex gap-4 overflow-x-auto scrollbar-hide snap-x snap-mandatory"
        data-highlights-container
        role="list"
      >
        <!-- Promoted Products -->
        {#if hasProducts}
          {#each promotedProducts as product, index}
            <div role="listitem" data-highlight-item class="snap-start">
              <ProductHighlight 
                {product} 
                currency={translations.common_currency}
                {formatPrice}
                onProductClick={handleProductClick}
                onBuy={(productId, selectedSize) => onProductBuy?.(productId, selectedSize)}
                onToggleFavorite={handleFavoriteToggle}
                isFavorite={getFavoriteData(product.id).isFavorited}
                isLoadingFavorite={getFavoriteData(product.id).isLoading}
                {index}
                totalCount={promotedProducts.length}
                categoryTranslation={translations.categoryTranslation || ((category: string) => category)}
              />
            </div>
          {/each}
        {/if}

        <!-- Brands (fallback) -->
        {#if showSellers}
          {#each sellers as seller, index}
            <div
              role="listitem"
              data-highlight-item
              class="relative flex-shrink-0 snap-start w-[calc(50%-0.5rem)]"
            >
              <button
                onclick={() => onSellerClick(seller)}
                class="group relative block w-full focus:outline-none focus:ring-2 focus:ring-[color:var(--state-focus)] rounded-2xl transition-all duration-200"
                aria-label="View {seller.name}'s profile{seller.account_type === 'pro' ? ' - Pro seller' : ''}"
                tabindex={currentFocusIndex === index ? 0 : -1}
              >
                <!-- Brand Card - Perfect grid layout -->
                <div class="relative w-full">
                  <div class="bg-[color:var(--surface-base)] rounded-2xl shadow-sm group-hover:shadow-md transition-all duration-200 group-hover:-translate-y-0.5 border border-[color:var(--border-default)] overflow-hidden p-4">
                    
                    
                    <!-- Seller Avatar -->
                    <div class="flex flex-col items-center text-center">
                      <div class="relative mb-3">
                        <div class="w-16 h-16 rounded-full overflow-hidden bg-[color:var(--surface-muted)] ring-2 ring-[color:var(--surface-base)] shadow">
                          {#if seller.avatar || seller.avatar_url}
                            <img
                              src={seller.avatar || seller.avatar_url}
                              alt="{seller.name}'s profile picture"
                              class="w-full h-full object-cover"
                              onerror={(e) => {
                                e.target.style.display = 'none';
                                if (e.target.nextElementSibling) {
                                  e.target.nextElementSibling.style.display = 'flex';
                                }
                              }}
                            />
                            <!-- Fallback avatar -->
                            <div class="w-full h-full bg-gradient-to-br {getAvatarColors(seller.account_type || 'personal')} flex items-center justify-center text-white font-semibold text-lg" style="display: none;">
                              {seller.name?.charAt(0).toUpperCase() || 'S'}
                            </div>
                          {:else}
                            <!-- Default avatar with account type colors -->
                            <div class="w-full h-full bg-gradient-to-br {getAvatarColors(seller.account_type || 'personal')} flex items-center justify-center text-white font-semibold text-lg">
                              {seller.name?.charAt(0).toUpperCase() || 'S'}
                            </div>
                          {/if}
                        </div>

                        <!-- Badge System -->
                        <div class="absolute -bottom-1 -right-1 flex items-center gap-1">
                          {#if seller.username === 'TinTin'}
                            <!-- Admin: Crown (special user) -->
                            <div class="w-7 h-7 bg-yellow-600 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M5 16L3 5l6 4 3-4 3 4 6-4-2 11H5z"/>
                              </svg>
                            </div>
                          {:else if seller.account_type === 'brand'}
                            <!-- Brand: Black Star -->
                            <div class="w-7 h-7 bg-gray-800 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                              </svg>
                            </div>
                          {:else if seller.account_type === 'pro'}
                            <!-- PRO: Black Checkmark -->
                            <div class="w-7 h-7 bg-gray-800 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                              </svg>
                            </div>
                          {/if}
                          <!-- Free accounts get no badge -->
                        </div>
                      </div>
                      
                      <!-- Seller Info -->
                      <h3 class="font-semibold text-[color:var(--text-primary)] text-sm mb-1.5 line-clamp-1">
                        {seller.display_name || seller.username}
                      </h3>

                      <div class="flex items-center gap-2 text-xs text-[color:var(--text-secondary)] mb-1.5">
                        {#if seller.itemCount}
                          <span>{seller.itemCount} items</span>
                        {/if}
                        {#if seller.followers}
                          <span>•</span>
                          <span>{seller.followers} followers</span>
                        {/if}
                      </div>
                      
                      <!-- Rating -->
                      {#if seller.rating}
                        <div class="flex items-center gap-1 mb-1.5">
                          <div class="flex">
                            {#each Array(5) as _, i}
                              <svg class="w-3 h-3 {i < Math.floor(seller.rating) ? 'text-[color:var(--accent-emphasis)]' : 'text-[color:var(--surface-emphasis)]'}" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                              </svg>
                            {/each}
                          </div>
                          <span class="text-xs text-[color:var(--text-secondary)] ml-1">{seller.rating.toFixed(1)}</span>
                        </div>
                      {/if}
                      
                      <!-- View Profile Button -->
                      <div class="w-full">
                        <div class="px-3 py-1.5 bg-[color:var(--primary)] hover:bg-[color:var(--primary-hover)] text-[color:var(--primary-fg)] text-xs font-medium rounded-lg shadow-sm transition-colors">
                          View Profile
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </button>
            </div>
          {/each}
        {/if}
      </div>
    </nav>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:127:33
[31mError[39m: Property 'focus' does not exist on type 'Element'. (ts)
[36m    const items = container?.querySelectorAll('[data-highlight-item]');
    items?.[currentFocusIndex]?.[35mfocus[36m();
  }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:310:33
[31mError[39m: 'e.target' is possibly 'null'. (ts)
[36m                              onerror={(e) => {
                                [35me.target[36m.style.display = 'none';
                                if (e.target.nextElementSibling) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:310:42
[31mError[39m: Property 'style' does not exist on type 'EventTarget'. (ts)
[36m                              onerror={(e) => {
                                e.target.[35mstyle[36m.display = 'none';
                                if (e.target.nextElementSibling) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:311:37
[31mError[39m: 'e.target' is possibly 'null'. (ts)
[36m                                e.target.style.display = 'none';
                                if ([35me.target[36m.nextElementSibling) {
                                  e.target.nextElementSibling.style.display = 'flex';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:311:46
[31mError[39m: Property 'nextElementSibling' does not exist on type 'EventTarget'. (ts)
[36m                                e.target.style.display = 'none';
                                if (e.target.[35mnextElementSibling[36m) {
                                  e.target.nextElementSibling.style.display = 'flex';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:312:35
[31mError[39m: 'e.target' is possibly 'null'. (ts)
[36m                                if (e.target.nextElementSibling) {
                                  [35me.target[36m.nextElementSibling.style.display = 'flex';
                                }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:312:44
[31mError[39m: Property 'nextElementSibling' does not exist on type 'EventTarget'. (ts)
[36m                                if (e.target.nextElementSibling) {
                                  e.target.[35mnextElementSibling[36m.style.display = 'flex';
                                }[39m

====================================
[31msvelte-check found 334 errors and 78 warnings in 68 files
[39mK:\driplo-turbo-1\packages\ui:
 ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @repo/ui@0.0.0 check: `svelte-check --tsconfig ./tsconfig.json`
Exit status 1
