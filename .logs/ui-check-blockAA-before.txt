59 errors and 27 warnings in 41 files - Block AA Baseline (2025-09-18)

> @repo/ui@0.0.0 check K:\driplo-turbo-1\packages\ui
> svelte-check --tsconfig ./tsconfig.json

Loading svelte-check in workspace: k:\driplo-turbo-1\packages\ui
Getting Svelte diagnostics...

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ProductReviews.svelte[39m:446:5
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m  >
    [35m<div
      class="image-modal-content"
      onclick={(e) => e.stopPropagation()}
      role="dialog"
      aria-modal="true"
      aria-label="Review image viewer"
      tabindex="-1"
    >
      <button class="modal-close" onclick={closeImageModal} aria-label="Close image modal">
        <svg viewBox="0 0 20 20" aria-hidden="true">
          <path fill="currentColor" d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"/>
        </svg>
      </button>

      <img
        src={selectedImageModal.images[selectedImageModal.index]}
        alt="Review image {selectedImageModal.index + 1}"
        class="modal-image"
      />

      {#if selectedImageModal.images.length > 1}
        <div class="modal-nav">
          <button
            class="modal-nav-btn modal-nav-btn--prev"
            onclick={() => selectedImageModal && selectedImageModal.index > 0 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index - 1 })}
            disabled={selectedImageModal.index === 0}
            aria-label="Previous image"
          >
            <svg viewBox="0 0 20 20" aria-hidden="true">
              <path fill="currentColor" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
            </svg>
          </button>

          <span class="modal-counter">
            {selectedImageModal.index + 1} of {selectedImageModal.images.length}
          </span>

          <button
            class="modal-nav-btn modal-nav-btn--next"
            onclick={() => selectedImageModal && selectedImageModal.index < selectedImageModal.images.length - 1 && (selectedImageModal = { ...selectedImageModal, index: selectedImageModal.index + 1 })}
            disabled={selectedImageModal.index === selectedImageModal.images.length - 1}
            aria-label="Next image"
          >
            <svg viewBox="0 0 20 20" aria-hidden="true">
              <path fill="currentColor" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
            </svg>
          </button>
        </div>
      {/if}
    </div>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ConditionReport.svelte[39m:203:27
[31mError[39m: Property 'notes' does not exist on type '{ aspect: string; rating: number; }'. (ts)
[36m              <span class="text-sm font-medium text-gray-900">{detail.aspect}</span>
              {#if detail.[35mnotes[36m}
                <p class="text-xs text-gray-500 mt-0.5">{detail.notes}</p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ConditionReport.svelte[39m:204:65
[31mError[39m: Property 'notes' does not exist on type '{ aspect: string; rating: number; }'. (ts)
[36m              {#if detail.notes}
                <p class="text-xs text-gray-500 mt-0.5">{detail.[35mnotes[36m}</p>
              {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TabGroup.svelte[39m:44:20
[31mError[39m: Expected 1 arguments, but got 2. (ts)
[36m      <button
        use:trigger[35m={tab.id[36m}
        class="flex items-center px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-colors scroll-snap-align-start min-h-[36px][39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\tabs\Tabs.svelte[39m:170:20
[31mError[39m: Expected 1 arguments, but got 2. (ts)
[36m      <button
        use:trigger[35m={tab.id[36m}
        class={getTabClasses(tab, isActive)}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:7:3
[31mError[39m: '"@stripe/stripe-js"' has no exported member named 'PaymentElementChangeEvent'. Did you mean 'StripePaymentElementChangeEvent'? (ts)
[36m		StripePaymentElement,
		[35mPaymentElementChangeEvent[36m,
		ConfirmPaymentData[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:138:6
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(options?: StripeElementsOptionsClientSecret | undefined): StripeElements', gave the following error.
    Type '"light" | "dark" | "stripe"' is not assignable to type '"flat" | "stripe" | "night" | undefined'.
      Type '"light"' is not assignable to type '"flat" | "stripe" | "night" | undefined'. Did you mean '"night"'? (ts)
[36m				appearance: {
					[35mtheme[36m: theme === 'auto' ? 'stripe' : theme,
					variables: {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PaymentForm.svelte[39m:233:44
[31mError[39m: Property 'confirmParams' does not exist on type 'ConfirmPaymentData'. (ts)
[36m			// Confirm payment with Stripe
			const confirmParams: ConfirmPaymentData[[35m'confirmParams'[36m] = {
				return_url: `${window.location.origin}/payment/success`,[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:36:5
[31mError[39m: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'. (ts)
[36m    multiple,
    [35mdefaultValue[36m: value,
    onValueChange: ({ next }) => {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:41:23
[31mError[39m: Argument of type 'string | string[] | null' is not assignable to parameter of type 'string | null'.
  Type 'string[]' is not assignable to type 'string'. (ts)
[36m
      onValueChange?.([35mnewValue[36m);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:63:23
[31mError[39m: Argument of type 'string | null' is not assignable to parameter of type 'string | string[] | undefined'.
  Type 'null' is not assignable to type 'string | string[] | undefined'. (ts)
[36m    if ($toggleValue !== value) {
      toggleValue.set([35mvalue[36m);
    }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:107:27
[31mError[39m: Argument of type 'string | null' is not assignable to parameter of type 'string | string[] | undefined'.
  Type 'null' is not assignable to type 'string | string[] | undefined'. (ts)
[36m          const newValue = $isPressed(option.value) ? null : option.value;
          toggleValue.set([35mnewValue[36m);
          onValueChange?.(newValue);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FilterPillGroup.svelte[39m:194:7
[31mError[39m: Type 'string' is not assignable to type 'number'. (ts)
[36m      class="{basePillClasses} {activeClasses}"
      [35mtabindex[36m={focusedIndex === index ? '0' : '-1'}
      aria-pressed={isActive}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryPill.svelte[39m:144:25
[31mError[39m: Type '"sm" | "xs"' is not assignable to type '"sm" | "md" | "lg" | undefined'.
  Type '"xs"' is not assignable to type '"sm" | "md" | "lg" | undefined'. (ts)
[36m      {#if loading}
        <LoadingSpinner [35msize[36m={size === 'sm' ? 'xs' : 'sm'} color={spinnerColor} />
      {:else if emoji}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\dialog\Dialog.svelte[39m:169:5
[33mWarn[39m: Unused CSS selector ".flex-col-reverse button"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    
    [35m.flex-col-reverse button[36m {
      min-height: var(--touch-primary); /* Ensure 44px touch targets on mobile */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\NotificationPanel.svelte[39m:248:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 2;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MessageNotificationToast.svelte[39m:144:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 3;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FollowNotificationToast.svelte[39m:154:5
[33mWarn[39m: Unused CSS selector ".progress"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    
    [35m.progress[36m {
      animation: none;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\WelcomeModal.svelte[39m:249:5
[33mWarn[39m: Unknown property: 'ring' (css)
[36m    border: 1px solid rgba(255, 255, 255, 0.3);
    [35mring[36m: 1px solid rgba(255, 255, 255, 0.2);
  }[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SocialLinksEditor.svelte[39m:96:59
[31mError[39m: 'e.currentTarget' is possibly 'null'. (ts)
[36m                placeholder={platformInfo.placeholder}
                onchange={(e) => updateLink(index, 'url', [35me.currentTarget[36m.value)}
                class="bg-white/80"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SocialLinksEditor.svelte[39m:96:75
[31mError[39m: Property 'value' does not exist on type 'EventTarget'. (ts)
[36m                placeholder={platformInfo.placeholder}
                onchange={(e) => updateLink(index, 'url', e.currentTarget.[35mvalue[36m)}
                class="bg-white/80"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PayoutMethodSelector.svelte[39m:167:13
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m            </h3>
            [35m<button
              type="button"
              onclick={() => expandedMethod = null}
              class="text-gray-400 hover:text-gray-500 transition-colors"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>[36m
          </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ImageUploader.svelte[39m:355:3
[33mWarn[39m: Do not use empty rulesets (css)
[36m<style>
  [35m.image-uploader[36m {
    /* Component styles */[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewModal.svelte[39m:204:8
[31mError[39m: 'title' is possibly 'undefined'. (ts)
[36m					<span class="text-xs text-[color:var(--text-muted)]">
						{[35mtitle[36m.length}/255
					</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewModal.svelte[39m:239:6
[31mError[39m: Object literal may only specify known properties, and '"id"' does not exist in type 'Props'. (ts)
[36m				<ImageUploader
					[35mid[36m="review-image-uploader"
					maxFiles={5}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewDisplay.svelte[39m:124:7
[33mWarn[39m: Screenreaders already announce `<img>` elements as an image
https://svelte.dev/e/a11y_img_redundant_alt (svelte)
[36m					<div class="aspect-square relative rounded-lg overflow-hidden bg-[color:var(--surface-subtle)]">
						[35m<img
							src={imageUrl}
							alt="Review photo"
							class="w-full h-full object-cover hover:scale-105 transition-transform duration-200 cursor-pointer"
							loading="lazy"
							enhanced
						/>[36m
					</div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ReviewDisplay.svelte[39m:129:8
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m							loading="lazy"
							[35menhanced[36m
						/>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchDropdown.svelte[39m:315:3
[33mWarn[39m: Elements with the 'dialog' interactive role must have a tabindex value
https://svelte.dev/e/a11y_interactive_supports_focus (svelte)
[36m{#if dropdownVisible}
  [35m<div
    class="absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-b-[var(--input-radius)] shadow-lg z-50 {className}"
    onclick={(e) => e.stopPropagation()}
    onkeydown={(e) => { if (e.key === 'Escape') handleClickOutside(); }}
    role="dialog"
    aria-label="Search results and browse options"
  >
    {#if query && query.trim()}
      <!-- Search Results Section -->
      {#if loading}
        <div class="p-4 text-center text-gray-500">
          <div class="inline-flex items-center gap-2">
            <div class="w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
            Searching...
          </div>
        </div>
      {:else if error}
        <div class="p-4 text-center text-red-500">
          {error}
        </div>
      {:else if results.length > 0}
        <div class="border-b border-gray-100" role="listbox" id={listboxId} aria-label={defaultTranslations.products}>
          <div class="px-4 py-2 text-xs font-medium text-gray-500 uppercase tracking-wider">
            Products
          </div>
          {#each results as product, index}
            <button
              class="w-full px-4 py-3 flex items-center gap-3 hover:bg-gray-50 text-left transition-colors {selectedIndex === index ? 'bg-blue-50' : ''}"
              onclick={() => handleProductSelect(product)}
              role="option"
              aria-selected={selectedIndex === index}
              id={`${listboxId}-option-${index}`}
            >
              {#if product.images?.[0]?.image_url}
                <img
                  src={product.images[0].image_url}
                  alt={product.title}
                  class="w-10 h-10 object-cover rounded-lg flex-shrink-0"
                />
              {:else}
                <div class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
              {/if}
              <div class="flex-1 min-w-0">
                <div class="font-medium text-gray-900 truncate">{product.title}</div>
                <div class="text-sm text-gray-500 flex items-center gap-2">
                  <span>{formatPrice(product.price)}</span>
                  {#if product.category_name}
                    <span>•</span>
                    <span>{product.category_name}</span>
                  {/if}
                </div>
              </div>
            </button>
          {/each}

          {#if results.length >= maxResults}
            <button
              class="w-full px-4 py-3 text-blue-600 hover:bg-blue-50 text-sm font-medium transition-colors border-t border-gray-100"
              onclick={() => handleSearchSelect(query)}
            >
              View all results for "{query}"
            </button>
          {/if}
        </div>
      {/if}
    {/if}

    <!-- Context-Aware Tabbed Browse Section -->
    <div class="p-4">
      <!-- Tab Headers - Dynamic based on context -->
      <div class="flex items-center gap-1 mb-4 bg-gray-100 p-1 rounded-lg">
        {#each availableTabs() as tab}
          <button
            class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-200 {activeTab === tab.key ? 'bg-white text-blue-600 shadow-sm' : 'text-gray-600 hover:text-gray-900'}"
            onclick={() => activeTab = tab.key}
          >
            {tab.label}
          </button>
        {/each}
      </div>

      <!-- Tab Content with Smooth Transitions -->
      <div class="relative min-h-[120px]">
        {#key activeTab}
          <div class="animate-in fade-in-0 duration-200">
            {#if activeTab === 'categories'}
              <!-- Hierarchical Navigation Header -->
              {#if navigationStack.level > 1}
                <div class="mb-4">
                  <button
                    onclick={handleBackNavigation}
                    class="flex items-center gap-2 text-sm text-blue-600 hover:text-blue-700 transition-colors"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    Back to Categories
                  </button>
                </div>
              {/if}

              <!-- Categories Grid -->
              <div class="grid grid-cols-2 gap-3">
                {#each displayCategories() as category}
                  <button
                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCategorySelect(category)}
                  >
                    <span class="text-2xl">{category.emoji || '📁'}</span>
                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{category.name}</span>
                      {#if category.product_count}
                        <span class="text-xs text-gray-500">({category.product_count})</span>
                      {/if}
                    </div>
                    {#if category.children && category.children.length > 0 && context === 'main'}
                      <svg class="w-4 h-4 text-gray-400 group-hover:text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    {/if}
                  </button>
                {/each}
              </div>

              <!-- Empty state for categories -->
              {#if displayCategories().length === 0}
                <div class="text-center py-8 text-gray-500">
                  <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  <p class="text-sm">No categories available</p>
                </div>
              {/if}

            {:else if activeTab === 'collections'}
              <div class="grid grid-cols-2 gap-3">
                {#each displayCollections() as collection}
                  <button
                    class="flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleCollectionSelect(collection)}
                  >
                    <span class="text-2xl">{collection.emoji}</span>
                    <div class="flex-1 min-w-0">
                      <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate block">{collection.label}</span>
                      {#if collection.product_count}
                        <span class="text-xs text-gray-500">({collection.product_count})</span>
                      {/if}
                    </div>
                  </button>
                {/each}
              </div>

            {:else if activeTab === 'sellers'}
              <div class="space-y-3">
                {#each displaySellers() as seller}
                  <button
                    class="w-full flex items-center gap-3 p-3 bg-gray-50 hover:bg-gray-100 hover:shadow-sm rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group"
                    onclick={() => handleSellerSelect(seller)}
                  >
                    {#if seller.avatar_url}
                      <img
                        src={seller.avatar_url}
                        alt={seller.username}
                        class="w-10 h-10 rounded-full object-cover flex-shrink-0"
                      />
                    {:else}
                      <div class="w-10 h-10 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center flex-shrink-0">
                        <span class="text-white font-semibold text-sm">{seller.username.charAt(0).toUpperCase()}</span>
                      </div>
                    {/if}
                    <div class="flex-1 min-w-0">
                      <div class="flex items-center gap-2">
                        <span class="font-medium text-gray-900 group-hover:text-blue-600 truncate">{seller.username}</span>
                        {#if seller.is_verified}
                          <svg class="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                          </svg>
                        {/if}
                      </div>
                      <div class="flex items-center gap-2 text-sm text-gray-500">
                        <span>{seller.total_products} items</span>
                        {#if seller.rating}
                          <span>•</span>
                          <div class="flex items-center gap-1">
                            <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            <span>{seller.rating.toFixed(1)}</span>
                          </div>
                        {/if}
                      </div>
                    </div>
                  </button>
                {/each}

                <!-- View More Sellers Button -->
                {#if sellers.length > 5}
                  <button
                    onclick={() => { if (isBrowser) window.location.href = '/sellers'; }}
                    class="w-full px-4 py-3 text-center text-blue-600 hover:bg-blue-50 text-sm font-medium transition-colors border-t border-gray-100 rounded-lg"
                  >
                    View All Sellers ({sellers.length})
                  </button>
                {/if}
              </div>
            {/if}
          </div>
        {/key}
      </div>
    </div>
  </div>[36m
{/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\EnhancedSearchBar.svelte[39m:5:24
[31mError[39m: Cannot find module '$app/navigation' or its corresponding type declarations. (ts)
[36m  import SearchDropdown from './SearchDropdown.svelte';
  import { goto } from [35m'$app/navigation'[36m;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:277:21
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m                  {#if dropdownSearchQuery.trim()}
                    [35m<button
                      onclick={() => dropdownSearchQuery = ''}
                      class="absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 hover:text-gray-600"
                    >
                      <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                    </button>[36m
                  {/if}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:167:13
[31mError[39m: Cannot find name 'preloadCode'. (ts)
[36m    try {
      await [35mpreloadCode[36m(`/category/${categorySlug}`);
      await preloadData(`/category/${categorySlug}`);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:168:13
[31mError[39m: Cannot find name 'preloadData'. (ts)
[36m      await preloadCode(`/category/${categorySlug}`);
      await [35mpreloadData[36m(`/category/${categorySlug}`);
    } catch (e) {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:304:43
[31mError[39m: 'this' implicitly has type 'any' because it does not have a type annotation. (ts)
[36m                          class="w-8 h-8 rounded-full object-cover flex-shrink-0"
                          onerror={() => ([35mthis[36m.src = '/avatars/1.png')}
                        />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:335:48
[31mError[39m: Argument of type 'string | null | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. (ts)
[36m                        onclick={() => {
                          onNavigateToSeller?.([35mseller.name[36m);
                          showTrendingDropdown = false;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:344:43
[31mError[39m: 'this' implicitly has type 'any' because it does not have a type annotation. (ts)
[36m                          class="w-8 h-8 rounded-full object-cover flex-shrink-0"
                          onerror={() => ([35mthis[36m.src = '/avatars/1.png')}
                        />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:357:34
[31mError[39m: 'seller.rating' is possibly 'undefined'. (ts)
[36m                            <span>{seller.items} items</span>
                            {#if [35mseller.rating[36m > 0}
                              <span>•</span>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:363:40
[31mError[39m: 'seller.rating' is possibly 'undefined'. (ts)
[36m                                </svg>
                                <span>{[35mseller.rating[36m.toFixed(1)}</span>
                              </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:431:31
[31mError[39m: Cannot find name 'preloadCode'. (ts)
[36m          data-prefetch="hover"
          onmouseenter={() => [35mpreloadCode[36m('/search')}
          ontouchstart={() => preloadCode('/search')}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:432:31
[31mError[39m: Cannot find name 'preloadCode'. (ts)
[36m          onmouseenter={() => preloadCode('/search')}
          ontouchstart={() => [35mpreloadCode[36m('/search')}
          onclick={onNavigateToAll}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:445:33
[31mError[39m: Property 'product_count' does not exist on type '{ created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; level: number | null; name: string; parent_id: string | null; slug: string; sort_order: number | null; updated_at: string | null; }'. (ts)
[36m            ariaLabel={`Browse ${category.name}`}
            itemCount={category.[35mproduct_count[36m || 0}
            showItemCount={category.product_count > 0}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:446:37
[31mError[39m: Property 'product_count' does not exist on type '{ created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; level: number | null; name: string; parent_id: string | null; slug: string; sort_order: number | null; updated_at: string | null; }'. (ts)
[36m            itemCount={category.product_count || 0}
            showItemCount={category.[35mproduct_count[36m > 0}
            data-prefetch="hover"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MainPageSearchBar.svelte[39m:465:40
[31mError[39m: Property 'product_count' does not exist on type '{ created_at: string | null; description: string | null; id: string; image_url: string | null; is_active: boolean | null; level: number | null; name: string; parent_id: string | null; slug: string; sort_order: number | null; updated_at: string | null; }'. (ts)
[36m            ariaLabel={`Browse ${virtualCategory.name}`}
            itemCount={virtualCategory.[35mproduct_count[36m}
            showItemCount={true}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:463:19
[33mWarn[39m: Elements with the ARIA role "option" must have the following attributes defined: "aria-selected"
https://svelte.dev/e/a11y_role_has_required_aria_props (svelte)
[36m                  class="w-full flex items-center gap-2 px-3 h-9 min-h-9 hover:bg-gray-50 text-left transition-colors"
                  [35mrole="option"[36m
                  aria-label="Select category: {c.name} (Level {c.level})"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:744:184
[33mWarn[39m: Redundant role 'navigation'
https://svelte.dev/e/a11y_no_redundant_roles (svelte)
[36m    <!-- Smart Filter Pills -->
    <nav id="category-pills" class="flex items-center gap-2 sm:gap-3 overflow-x-auto scrollbar-hide pb-[var(--gutter-xxs)] pt-[var(--gutter-xxs)]" aria-label="Smart category filters" [35mrole="navigation"[36m>
      <!-- Dynamic Category Pills -->[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SearchPageSearchBar.svelte[39m:429:9
[31mError[39m: Object literal may only specify known properties, and '"role"' does not exist in type 'Props'. (ts)
[36m        {mode}
        [35mrole[36m="searchbox"
      >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\VirtualProductGrid.svelte[39m:131:11
[31mError[39m: Property 'startTiming' does not exist on type 'never'. (ts)
[36m  const handleScroll = throttle((event: Event) => {
    perf?.[35mstartTiming[36m('virtual-scroll');
    if (scrollParent === 'self') {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\VirtualProductGrid.svelte[39m:138:11
[31mError[39m: Property 'endTiming' does not exist on type 'never'. (ts)
[36m    }
    perf?.[35mendTiming[36m('virtual-scroll');
  }, 16); // ~60fps[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\LazySearchResults.svelte[39m:278:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 2;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\LazySearchResults.svelte[39m:71:9
[31mError[39m: Object literal may only specify known properties, and 'limit' does not exist in type '{ query?: string | undefined; page?: number | undefined; filters?: Record<string, unknown> | undefined; }'. (ts)
[36m        page,
        [35mlimit[36m: 20,
        ...filters[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:175:12
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | KeyboardEvent | UIEvent | ErrorEvent | FocusEvent | ProgressEvent<...> | ... 22 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.
    Argument of type '"requestCookieConsent"' is not assignable to parameter of type 'keyof WindowEventMap'.
  Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void', gave the following error.
    Argument of type '(event: CustomEvent<RequestConsentEventDetail>) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
      Type '(event: CustomEvent<RequestConsentEventDetail>) => void' is not assignable to type 'EventListener'.
        Types of parameters 'event' and 'evt' are incompatible.
          Type 'Event' is missing the following properties from type 'CustomEvent<RequestConsentEventDetail>': detail, initCustomEvent (ts)
[36m    
    window.[35maddEventListener[36m('requestCookieConsent', handleCookieConsentRequest);[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\UnifiedCookieConsent.svelte[39m:178:14
[31mError[39m: No overload matches this call.
  Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | KeyboardEvent | UIEvent | ErrorEvent | FocusEvent | ProgressEvent<...> | ... 22 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.
    Argument of type '"requestCookieConsent"' is not assignable to parameter of type 'keyof WindowEventMap'.
  Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void', gave the following error.
    Argument of type '(event: CustomEvent<RequestConsentEventDetail>) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.
      Type '(event: CustomEvent<RequestConsentEventDetail>) => void' is not assignable to type 'EventListener'.
        Types of parameters 'event' and 'evt' are incompatible.
          Type 'Event' is missing the following properties from type 'CustomEvent<RequestConsentEventDetail>': detail, initCustomEvent (ts)
[36m    return () => {
      window.[35mremoveEventListener[36m('requestCookieConsent', handleCookieConsentRequest);
    };[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:2:31
[31mError[39m: Cannot find module '@repo/ui/types/product' or its corresponding type declarations. (ts)
[36m<script lang="ts">
	import type { Product } from [35m'@repo/ui/types/product'[36m;
	import type { Profile } from '@repo/ui/types';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:126:27
[31mError[39m: Parameter 'img' implicitly has an 'any' type. (ts)
[36m		if (product?.images) {
			product.images.forEach([35mimg[36m => {
				const imageUrl = typeof img === 'string' ? img : img?.image_url;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:165:31
[31mError[39m: Parameter 'img' implicitly has an 'any' type. (ts)
[36m			description: product.description || description,
			image: product.images?.map([35mimg[36m => 
				typeof img === 'string' && img.startsWith('http') ? img : `https://driplo.xyz${img}`[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:177:19
[31mError[39m: Property 'display_name' does not exist on type '{ account_locked_until: string | null; account_type: string | null; avatar_url: string | null; avg_shipping_hours: number | null; bio: string | null; boost_credits_used_this_month: number | null; ... 48 more ...; weekly_sales_count: number | null; }'. (ts)
[36m					'@type': 'Person',
					name: seller.[35mdisplay_name[36m || seller.username
				} : undefined[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\SEOMetaTags.svelte[39m:248:10
[31mError[39m: Type '() => string' is not assignable to type 'string'. (ts)
[36m			name: product.title,
			item: [35mfullUrl[36m
		});[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TopProgress.svelte[39m:2:30
[31mError[39m: Cannot find module '$app/stores' or its corresponding type declarations. (ts)
[36m<script lang="ts">
  import { navigating } from [35m'$app/stores'[36m;
  import { isBrowser } from './utils/runtime.js';[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BottomNav.svelte[39m:85:1
[33mWarn[39m: Non-interactive element `<nav>` cannot have interactive role 'tablist'
https://svelte.dev/e/a11y_no_noninteractive_element_to_interactive_role (svelte)
[36m<!-- Native mobile bottom navigation -->
[35m<nav 
  role="tablist"
  data-bottom-nav
  class="fixed bottom-0 left-0 right-0 z-50 sm:hidden
         bg-[color:var(--surface-base)]/95 backdrop-blur-xl 
         border-t border-[color:var(--border-subtle)]
         pb-[env(safe-area-inset-bottom)]"
>
  <div class="grid grid-cols-5">
    {#each navItems as item (item.id)}
      {@const active = isActive(item)}
      
      <a
        href={item.href}
        class="flex items-center justify-center
               min-h-[var(--touch-primary)] py-[var(--space-3)]
               no-underline hover:no-underline touch-manipulation"
        data-sveltekit-preload-data="hover"
        aria-current={active ? 'page' : undefined}
        aria-label={item.label}
        title={item.label}
      >
        <!-- Icon -->
        <div class="relative">
          <svg
            class="w-7 h-7 transition-colors duration-200 {active ? 'text-[color:var(--brand-primary)]' : 'text-[color:var(--text-tertiary)] hover:text-[color:var(--text-secondary)]'}"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            stroke-width="1.5"
          >
            <path d={item.icon} />
          </svg>

          <!-- Badge for messages only -->
          {#if item.showBadge && item.id === 'messages' && unreadMessageCount > 0}
            <div
              class="absolute -top-1 -right-1 min-w-4 h-4 px-1
                     bg-[color:var(--status-error-solid)] text-[color:var(--text-inverse)]
                     text-[10px] font-bold rounded-full flex items-center justify-center"
            >
              {unreadMessageCount > 99 ? '99' : unreadMessageCount}
            </div>
          {/if}
        </div>
      </a>
    {/each}
  </div>
</nav>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\select\Select.svelte[39m:154:19
[31mError[39m: Expected 1 arguments, but got 2. (ts)
[36m      <button
        use:option[35m={{ value: opt.value, label: opt.label, disabled: opt.disabled }[36m}
        class="{optionClasses} {$isSelected(opt.value) ? 'bg-[var(--state-active)] font-medium' : ''}"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\ImageUploaderSupabase.svelte[39m:151:31
[31mError[39m: Property 'contains' does not exist on type 'EventTarget'. (ts)
[36m    // Only stop dragging if we're leaving the main container
    if (!event.currentTarget?.[35mcontains[36m(event.relatedTarget as Node)) {
      isDragging = false;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\toast\Toast.svelte[39m:92:39
[31mError[39m: Argument of type 'ToastAction | undefined' is not assignable to parameter of type 'ToastAction'.
  Type 'undefined' is not assignable to type 'ToastAction'. (ts)
[36m        <button
          onclick={() => handleAction([35mtoast.action[36m)}
          class="btn btn-{toast.action.variant || 'ghost'} btn-sm"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TutorialToast.svelte[39m:146:7
[33mWarn[39m: Buttons and links should either contain text or have an `aria-label` or `aria-labelledby` attribute
https://svelte.dev/e/a11y_consider_explicit_label (svelte)
[36m      <!-- Close button -->
      [35m<button
        onclick={handleDismiss}
        class="flex-shrink-0 text-gray-400 hover:text-gray-500"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>[36m
    </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\TutorialToast.svelte[39m:29:7
[31mError[39m: Type 'HTMLDivElement | undefined' is not assignable to type 'HTMLDivElement'.
  Type 'undefined' is not assignable to type 'HTMLDivElement'. (ts)
[36m  let targetRect = $state<DOMRect | null>(null);
  let [35mtoastElement[36m: HTMLDivElement = $state();[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\primitives\menu\Menu.svelte[39m:72:5
[31mError[39m: Object literal may only specify known properties, and 'disableTransition' does not exist in type '_CreateMenuProps'. (ts)
[36m    closeFocus: undefined,
    [35mdisableTransition[36m: true
  });[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:232:47
[31mError[39m: Property 'first_image' does not exist on type 'Product'. (ts)
[36m              <img
                src={item.images?.[0] || item.[35mfirst_image[36m || '/placeholder-product.svg'}
                alt={item.title}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:236:17
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m                loading="lazy"
                [35menhanced[36m
              />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:294:55
[31mError[39m: Property 'first_image' does not exist on type 'Product'. (ts)
[36m                <img
                  src={product.images?.[0] || product.[35mfirst_image[36m || '/placeholder-product.svg'}
                  alt={product.title}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:298:19
[31mError[39m: Object literal may only specify known properties, and '"enhanced"' does not exist in type 'HTMLProps<"img", HTMLAttributes<any>>'. (ts)
[36m                  loading="lazy"
                  [35menhanced[36m
                />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\BundleBuilder.svelte[39m:340:9
[31mError[39m: Object literal may only specify known properties, and '"fullWidth"' does not exist in type 'Props'. (ts)
[36m        variant="primary"
        [35mfullWidth[36m
        size="lg"[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HeaderLogo.svelte[39m:84:3
[33mWarn[39m: Unused CSS selector ".emoji-track span"
https://svelte.dev/e/css_unused_selector (svelte)
[36m
  [35m.emoji-track span[36m {
    height: 1.2em;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HeaderLogo.svelte[39m:101:5
[33mWarn[39m: Unused CSS selector ".emoji-track span:not(:first-child)"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    }
    [35m.emoji-track span:not(:first-child)[36m {
      display: none;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:170:38
[31mError[39m: Property 'products_count' does not exist on type '{ account_locked_until: string | null; account_type: string | null; avatar_url: string | null; avg_shipping_hours: number | null; bio: string | null; boost_credits_used_this_month: number | null; ... 48 more ...; weekly_sales_count: number | null; }'. (ts)
[36m    const itemsSold = typeof profile?.total_sales === 'number' ? profile.total_sales : 0;
    const listings = typeof profile?.[35mproducts_count[36m === 'number' ? profile.products_count : 0;
    return { rating, itemsSold, listings };[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:170:76
[31mError[39m: Property 'products_count' does not exist on type '{ account_locked_until: string | null; account_type: string | null; avatar_url: string | null; avg_shipping_hours: number | null; bio: string | null; boost_credits_used_this_month: number | null; ... 48 more ...; weekly_sales_count: number | null; }'. (ts)
[36m    const itemsSold = typeof profile?.total_sales === 'number' ? profile.total_sales : 0;
    const listings = typeof profile?.products_count === 'number' ? profile.[35mproducts_count[36m : 0;
    return { rating, itemsSold, listings };[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\MobileNavigationDialog.svelte[39m:261:19
[31mError[39m: Object literal may only specify known properties, and '"style"' does not exist in type 'Props'. (ts)
[36m                  fallback={initials}
                  [35mstyle[36m="width: 44px; height: 44px;"
                />[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryNavigationSheet.svelte[39m:100:7
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m      <!-- Backdrop -->
      [35m<div
        class="fixed inset-0 bg-black/50"
        onclick={() => onOpenChange(false)}
      ></div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\CategoryNavigationSheet.svelte[39m:100:7
[33mWarn[39m: `<div>` with a click handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m      <!-- Backdrop -->
      [35m<div
        class="fixed inset-0 bg-black/50"
        onclick={() => onOpenChange(false)}
      ></div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PartnerShowcase.svelte[39m:69:7
[33mWarn[39m: `<div>` with a mouseenter or mouseleave handler must have an ARIA role
https://svelte.dev/e/a11y_no_static_element_interactions (svelte)
[36m    {#if variant === 'horizontal' || variant === 'marquee'}
      [35m<div 
        bind:this={scrollContainer}
        class="flex overflow-x-auto scrollbar-hide gap-4 px-4 sm:px-0 pb-2
               {variant === 'marquee' ? 'scroll-smooth' : ''}"
        onmouseenter={() => { if (variant === 'marquee') isScrolling = true; }}
        onmouseleave={() => { if (variant === 'marquee') isScrolling = false; }}
      >
        {#each partners as partner}
          <button
            onclick={() => handlePartnerClick(partner)}
            class="flex-shrink-0 group relative bg-white border border-gray-200 rounded-lg p-4 
                   hover:border-gray-300 hover:shadow-sm transition-all duration-200
                   focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2
                   min-w-[120px] max-w-[160px]"
            title="{partner.name}{partner.description ? ` - ${partner.description}` : ''}"
          >
            <!-- Logo -->
            <div class="aspect-square w-12 h-12 mx-auto mb-2 overflow-hidden rounded-md bg-gray-50 flex items-center justify-center">
              {#if partner.logo}
                <img 
                  src={partner.logo} 
                  alt="{partner.name} logo" 
                  class="w-full h-full object-contain group-hover:scale-105 transition-transform duration-200"
                  loading="lazy"
                />
              {:else}
                <div class="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                  <span class="text-gray-500 text-xs font-bold">
                    {partner.name.charAt(0).toUpperCase()}
                  </span>
                </div>
              {/if}
            </div>
            
            <!-- Partner Name -->
            <p class="text-sm font-medium text-gray-900 text-center truncate group-hover:text-black transition-colors">
              {partner.name}
            </p>
            
            <!-- Link Icon -->
            {#if partner.instagram || partner.website}
              <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                <svg class="w-3 h-3 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </div>
            {/if}
          </button>
        {/each}
      </div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PartnerShowcase.svelte[39m:176:5
[33mWarn[39m: Unused CSS selector ".group button"
https://svelte.dev/e/css_unused_selector (svelte)
[36m    .group img,
    [35m.group button[36m,
    .group div {[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PartnerBanner.svelte[39m:207:5
[33mWarn[39m: Also define the standard property 'line-clamp' for compatibility (css)
[36m    display: -webkit-box;
    [35m-webkit-line-clamp[36m: 2;
    -webkit-box-orient: vertical;[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:105:30
[31mError[39m: Object literal may only specify known properties, and '"aria-label"' does not exist in type 'Props'. (ts)
[36m      {#each Array(10) as _, i}
        <ProductCardSkeleton [35maria-label[36m="Loading product {i + 1}" />
      {/each}[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:180:9
[31mError[39m: Object literal may only specify known properties, and '"aria-label"' does not exist in type 'Props'. (ts)
[36m        onclick={onBrowseAll}
        [35maria-label[36m="Browse all products"
      >[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\FeaturedProducts.svelte[39m:196:10
[31mError[39m: 'errors' is possibly 'undefined'. (ts)
[36m        <span class="sr-only">Error: </span>
        {[35merrors[36m.products}
      </p>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\HighlightQuickView.svelte[39m:93:1
[33mWarn[39m: Visible, non-interactive elements with a click event must be accompanied by a keyboard event handler. Consider whether an interactive element such as `<button type="button">` or `<a>` might be more appropriate
https://svelte.dev/e/a11y_click_events_have_key_events (svelte)
[36m<!-- Modal backdrop -->
[35m<div
  class="fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4"
  onclick={handleBackdropClick}
  role="dialog"
  aria-modal="true"
  aria-labelledby="modal-title-{product.id}"
  aria-describedby="modal-desc-{product.id}"
  tabindex="-1"
>
  <!-- Modal content -->
  <div 
    bind:this={modalRef}
    class="bg-white rounded-xl w-full max-w-72 p-3 shadow-xl"
    role="document"
  >
    <!-- Product image with close button -->
    <div class="aspect-square rounded-lg mb-3 relative overflow-hidden bg-gray-100">
      <img 
        src={imageUrl} 
        alt="{product.title} product image"
        class="w-full h-full object-cover"
        loading="eager"
      />
      
      <!-- Close button -->
      <button
        onclick={onClose}
        class="absolute top-2 right-2 p-1.5 bg-white/90 hover:bg-white rounded-full shadow-sm transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
        aria-label="Close product details"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      
      <!-- Seller info button -->
      {#if product.sellerName}
        <button
          onclick={toggleSellerInfo}
          class="absolute bottom-2 left-2 flex items-center gap-1.5 bg-white/95 md:backdrop-blur-sm rounded-full shadow-sm hover:bg-white transition-colors duration-200 {showSellerInfo ? 'px-2.5 py-1.5' : 'pr-2'} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black"
          aria-label="View seller information for {product.sellerName}"
          aria-expanded={showSellerInfo}
        >
          <div class="w-7 h-7 rounded-full border-2 border-white bg-gray-200 overflow-hidden flex-shrink-0">
            {#if product.sellerAvatar}
              <img
                src={product.sellerAvatar}
                alt="{product.sellerName} avatar"
                class="w-full h-full object-cover"
              />
            {:else}
              <div class="w-full h-full bg-gray-300 flex items-center justify-center text-xs text-gray-500 font-semibold">
                {sellerInitial}
              </div>
            {/if}
          </div>
          <div
            class="overflow-hidden transition-colors duration-200 {showSellerInfo ? 'max-w-40' : 'max-w-20'}"
            aria-hidden={!showSellerInfo}
          >
            {#if showSellerInfo}
              <div class="text-left">
                <p class="text-xs font-medium text-gray-900">{product.sellerName}</p>
                {#if product.sellerRating}
                  <div class="flex items-center gap-0.5">
                    <svg class="w-3 h-3 text-yellow-500 fill-current" viewBox="0 0 20 20" aria-hidden="true">
                      <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z"/>
                    </svg>
                    <span class="text-xs text-gray-500" aria-label="Rating: {product.sellerRating} stars">
                      {product.sellerRating}
                    </span>
                  </div>
                {/if}
              </div>
            {:else}
              <span class="text-xs text-gray-900 font-medium whitespace-nowrap">{product.sellerName}</span>
            {/if}
          </div>
        </button>
      {/if}
    </div>

    <!-- Product info -->
    <h2 id="modal-title-{product.id}" class="font-semibold text-sm mb-1">
      {product.title}
    </h2>
    
    <div class="flex items-center justify-between mb-3">
      <p class="text-lg font-bold" aria-label="Price: {formattedPrice}">
        {formattedPrice}
      </p>
      {#if product.favorite_count && product.favorite_count > 0}
        <div class="flex items-center gap-1 text-xs text-gray-500">
          <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"/>
          </svg>
          <span aria-label="{product.favorite_count} people favorited this">
            {product.favorite_count}
          </span>
        </div>
      {/if}
    </div>

    <!-- Size selector -->
    {#if requiresSizeSelection}
      <fieldset class="mb-3">
        <legend class="text-xs text-gray-500 mb-1.5">
          Size {hasMultipleSizes ? '(required)' : ''}
        </legend>
        <div class="flex gap-1 flex-wrap" role="radiogroup" aria-required="true">
          {#each availableSizes as size}
            <button
              onclick={() => selectedSize = size}
              class="px-2 py-1 text-xs border rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black {selectedSize === size ? 'bg-black text-white border-black' : 'border-gray-300 hover:border-gray-400'}"
              role="radio"
              aria-checked={selectedSize === size}
              aria-label="Size {size}"
            >
              {size}
            </button>
          {/each}
        </div>
      </fieldset>
    {/if}

    <!-- Description for screen readers -->
    <div id="modal-desc-{product.id}" class="sr-only">
      <p>Quick view for {product.title}</p>
      <p>Price: {formattedPrice}</p>
      {#if product.sellerName}
        <p>Sold by {product.sellerName}</p>
      {/if}
      {#if requiresSizeSelection}
        <p>Available sizes: {availableSizes.join(', ')}</p>
      {/if}
    </div>

    <!-- Actions -->
    <div class="flex gap-2">
      <button 
        onclick={handleAddToCart}
        disabled={!canPurchase}
        class="flex-1 bg-black text-white text-sm py-2.5 px-4 rounded-lg font-medium transition-colors hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black disabled:opacity-50 disabled:cursor-not-allowed"
        aria-label="Buy {product.title} now{selectedSize ? ` in size ${selectedSize}` : ''}"
      >
        Buy Now
      </button>
      <button 
        onclick={handleToggleFavorite}
        disabled={isLoadingFavorite}
        class="p-2.5 border rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black {isLoadingFavorite ? 'opacity-50 cursor-wait' : ''} {isFavorited ? 'border-red-300 bg-red-50 text-red-600' : 'border-gray-300 hover:bg-gray-50'}"
        aria-label="{isFavorited ? 'Remove from' : 'Add to'} favorites"
        aria-pressed={isFavorited}
      >
        {#if isLoadingFavorite}
          <svg class="w-4 h-4 animate-spin" fill="none" viewBox="0 0 24 24" aria-hidden="true">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span class="sr-only">Loading...</span>
        {:else}
          <svg class="w-4 h-4 transition-colors" fill={isFavorited ? 'currentColor' : 'none'} stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
          </svg>
        {/if}
      </button>
    </div>
  </div>
</div>[36m[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:167:3
[33mWarn[39m: Redundant role 'region'
https://svelte.dev/e/a11y_no_redundant_roles (svelte)
[36m  aria-label={translations.trending_promoted}
  [35mrole="region"[36m
>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:250:5
[33mWarn[39m: noninteractive element cannot have nonnegative tabIndex value
https://svelte.dev/e/a11y_no_noninteractive_tabindex (svelte)
[36m    {/if}
    [35m<nav
      aria-label="Promoted products carousel"
      class="relative pb-2"
      onkeydown={handleKeyNavigation}
      tabindex="0"
      role="region"
      aria-controls="highlights-container"
    >
      <div
        id="highlights-container"
        class="flex gap-4 overflow-x-auto scrollbar-hide snap-x snap-mandatory"
        data-highlights-container
        role="list"
      >
        <!-- Promoted Products -->
        {#if hasProducts}
          {#each promotedProducts as product, index}
            <div role="listitem" data-highlight-item class="snap-start">
              <ProductHighlight 
                {product} 
                currency={translations.common_currency}
                {formatPrice}
                onProductClick={handleProductClick}
                onBuy={(productId, selectedSize) => onProductBuy?.(productId, selectedSize)}
                onToggleFavorite={handleFavoriteToggle}
                isFavorite={getFavoriteData(product.id).isFavorited}
                isLoadingFavorite={getFavoriteData(product.id).isLoading}
                {index}
                totalCount={promotedProducts.length}
                categoryTranslation={translations.categoryTranslation || ((category: string) => category)}
              />
            </div>
          {/each}
        {/if}

        <!-- Brands (fallback) -->
        {#if showSellers}
          {#each sellers as seller, index}
            <div
              role="listitem"
              data-highlight-item
              class="relative flex-shrink-0 snap-start w-[calc(50%-0.5rem)]"
            >
              <button
                onclick={() => onSellerClick(seller)}
                class="group relative block w-full focus:outline-none focus:ring-2 focus:ring-[color:var(--state-focus)] rounded-2xl transition-all duration-200"
                aria-label="View {seller.name}'s profile{seller.account_type === 'pro' ? ' - Pro seller' : ''}"
                tabindex={currentFocusIndex === index ? 0 : -1}
              >
                <!-- Brand Card - Perfect grid layout -->
                <div class="relative w-full">
                  <div class="bg-[color:var(--surface-base)] rounded-2xl shadow-sm group-hover:shadow-md transition-all duration-200 group-hover:-translate-y-0.5 border border-[color:var(--border-default)] overflow-hidden p-4">
                    
                    
                    <!-- Seller Avatar -->
                    <div class="flex flex-col items-center text-center">
                      <div class="relative mb-3">
                        <div class="w-16 h-16 rounded-full overflow-hidden bg-[color:var(--surface-muted)] ring-2 ring-[color:var(--surface-base)] shadow">
                          {#if seller.avatar || seller.avatar_url}
                            <img
                              src={seller.avatar || seller.avatar_url}
                              alt="{seller.name}'s profile picture"
                              class="w-full h-full object-cover"
                              onerror={(e) => {
                                const target = e.currentTarget as HTMLImageElement | null;
                                if (!target) return;
                                target.style.display = 'none';
                                if (target.nextElementSibling) {
                                  (target.nextElementSibling as HTMLElement).style.display = 'flex';
                                }
                              }}
                            />
                            <!-- Fallback avatar -->
                            <div class="w-full h-full bg-gradient-to-br {getAvatarColors(seller.account_type || 'personal')} flex items-center justify-center text-white font-semibold text-lg" style="display: none;">
                              {seller.name?.charAt(0).toUpperCase() || 'S'}
                            </div>
                          {:else}
                            <!-- Default avatar with account type colors -->
                            <div class="w-full h-full bg-gradient-to-br {getAvatarColors(seller.account_type || 'personal')} flex items-center justify-center text-white font-semibold text-lg">
                              {seller.name?.charAt(0).toUpperCase() || 'S'}
                            </div>
                          {/if}
                        </div>

                        <!-- Badge System -->
                        <div class="absolute -bottom-1 -right-1 flex items-center gap-1">
                          {#if seller.username === 'TinTin'}
                            <!-- Admin: Crown (special user) -->
                            <div class="w-7 h-7 bg-yellow-600 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M5 16L3 5l6 4 3-4 3 4 6-4-2 11H5z"/>
                              </svg>
                            </div>
                          {:else if seller.account_type === 'brand'}
                            <!-- Brand: Black Star -->
                            <div class="w-7 h-7 bg-gray-800 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                              </svg>
                            </div>
                          {:else if seller.account_type === 'pro'}
                            <!-- PRO: Black Checkmark -->
                            <div class="w-7 h-7 bg-gray-800 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                              </svg>
                            </div>
                          {/if}
                          <!-- Free accounts get no badge -->
                        </div>
                      </div>
                      
                      <!-- Seller Info -->
                      <h3 class="font-semibold text-[color:var(--text-primary)] text-sm mb-1.5 line-clamp-1">
                        {seller.displayName || seller.username}
                      </h3>

                      <div class="flex items-center gap-2 text-xs text-[color:var(--text-secondary)] mb-1.5">
                        {#if seller.itemCount}
                          <span>{seller.itemCount} items</span>
                        {/if}
                        {#if seller.followers}
                          <span>•</span>
                          <span>{seller.followers} followers</span>
                        {/if}
                      </div>
                      
                      <!-- Rating -->
                      {#if seller.rating}
                        <div class="flex items-center gap-1 mb-1.5">
                          <div class="flex">
                            {#each Array(5) as _, i}
                              <svg class="w-3 h-3 {i < Math.floor(seller.rating) ? 'text-[color:var(--accent-emphasis)]' : 'text-[color:var(--surface-emphasis)]'}" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                              </svg>
                            {/each}
                          </div>
                          <span class="text-xs text-[color:var(--text-secondary)] ml-1">{seller.rating.toFixed(1)}</span>
                        </div>
                      {/if}
                      
                      <!-- View Profile Button -->
                      <div class="w-full">
                        <div class="px-3 py-1.5 bg-[color:var(--primary)] hover:bg-[color:var(--primary-hover)] text-[color:var(--primary-fg)] text-xs font-medium rounded-lg shadow-sm transition-colors">
                          View Profile
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </button>
            </div>
          {/each}
        {/if}
      </div>
    </nav>[36m
  </div>[39m

k:\driplo-turbo-1\packages\ui\[32msrc\lib\PromotedHighlights.svelte[39m:250:5
[33mWarn[39m: Non-interactive element `<nav>` should not be assigned mouse or keyboard event listeners
https://svelte.dev/e/a11y_no_noninteractive_element_interactions (svelte)
[36m    {/if}
    [35m<nav
      aria-label="Promoted products carousel"
      class="relative pb-2"
      onkeydown={handleKeyNavigation}
      tabindex="0"
      role="region"
      aria-controls="highlights-container"
    >
      <div
        id="highlights-container"
        class="flex gap-4 overflow-x-auto scrollbar-hide snap-x snap-mandatory"
        data-highlights-container
        role="list"
      >
        <!-- Promoted Products -->
        {#if hasProducts}
          {#each promotedProducts as product, index}
            <div role="listitem" data-highlight-item class="snap-start">
              <ProductHighlight 
                {product} 
                currency={translations.common_currency}
                {formatPrice}
                onProductClick={handleProductClick}
                onBuy={(productId, selectedSize) => onProductBuy?.(productId, selectedSize)}
                onToggleFavorite={handleFavoriteToggle}
                isFavorite={getFavoriteData(product.id).isFavorited}
                isLoadingFavorite={getFavoriteData(product.id).isLoading}
                {index}
                totalCount={promotedProducts.length}
                categoryTranslation={translations.categoryTranslation || ((category: string) => category)}
              />
            </div>
          {/each}
        {/if}

        <!-- Brands (fallback) -->
        {#if showSellers}
          {#each sellers as seller, index}
            <div
              role="listitem"
              data-highlight-item
              class="relative flex-shrink-0 snap-start w-[calc(50%-0.5rem)]"
            >
              <button
                onclick={() => onSellerClick(seller)}
                class="group relative block w-full focus:outline-none focus:ring-2 focus:ring-[color:var(--state-focus)] rounded-2xl transition-all duration-200"
                aria-label="View {seller.name}'s profile{seller.account_type === 'pro' ? ' - Pro seller' : ''}"
                tabindex={currentFocusIndex === index ? 0 : -1}
              >
                <!-- Brand Card - Perfect grid layout -->
                <div class="relative w-full">
                  <div class="bg-[color:var(--surface-base)] rounded-2xl shadow-sm group-hover:shadow-md transition-all duration-200 group-hover:-translate-y-0.5 border border-[color:var(--border-default)] overflow-hidden p-4">
                    
                    
                    <!-- Seller Avatar -->
                    <div class="flex flex-col items-center text-center">
                      <div class="relative mb-3">
                        <div class="w-16 h-16 rounded-full overflow-hidden bg-[color:var(--surface-muted)] ring-2 ring-[color:var(--surface-base)] shadow">
                          {#if seller.avatar || seller.avatar_url}
                            <img
                              src={seller.avatar || seller.avatar_url}
                              alt="{seller.name}'s profile picture"
                              class="w-full h-full object-cover"
                              onerror={(e) => {
                                const target = e.currentTarget as HTMLImageElement | null;
                                if (!target) return;
                                target.style.display = 'none';
                                if (target.nextElementSibling) {
                                  (target.nextElementSibling as HTMLElement).style.display = 'flex';
                                }
                              }}
                            />
                            <!-- Fallback avatar -->
                            <div class="w-full h-full bg-gradient-to-br {getAvatarColors(seller.account_type || 'personal')} flex items-center justify-center text-white font-semibold text-lg" style="display: none;">
                              {seller.name?.charAt(0).toUpperCase() || 'S'}
                            </div>
                          {:else}
                            <!-- Default avatar with account type colors -->
                            <div class="w-full h-full bg-gradient-to-br {getAvatarColors(seller.account_type || 'personal')} flex items-center justify-center text-white font-semibold text-lg">
                              {seller.name?.charAt(0).toUpperCase() || 'S'}
                            </div>
                          {/if}
                        </div>

                        <!-- Badge System -->
                        <div class="absolute -bottom-1 -right-1 flex items-center gap-1">
                          {#if seller.username === 'TinTin'}
                            <!-- Admin: Crown (special user) -->
                            <div class="w-7 h-7 bg-yellow-600 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M5 16L3 5l6 4 3-4 3 4 6-4-2 11H5z"/>
                              </svg>
                            </div>
                          {:else if seller.account_type === 'brand'}
                            <!-- Brand: Black Star -->
                            <div class="w-7 h-7 bg-gray-800 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                              </svg>
                            </div>
                          {:else if seller.account_type === 'pro'}
                            <!-- PRO: Black Checkmark -->
                            <div class="w-7 h-7 bg-gray-800 rounded-full border-2 border-[color:var(--surface-base)] shadow flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                              </svg>
                            </div>
                          {/if}
                          <!-- Free accounts get no badge -->
                        </div>
                      </div>
                      
                      <!-- Seller Info -->
                      <h3 class="font-semibold text-[color:var(--text-primary)] text-sm mb-1.5 line-clamp-1">
                        {seller.displayName || seller.username}
                      </h3>

                      <div class="flex items-center gap-2 text-xs text-[color:var(--text-secondary)] mb-1.5">
                        {#if seller.itemCount}
                          <span>{seller.itemCount} items</span>
                        {/if}
                        {#if seller.followers}
                          <span>•</span>
                          <span>{seller.followers} followers</span>
                        {/if}
                      </div>
                      
                      <!-- Rating -->
                      {#if seller.rating}
                        <div class="flex items-center gap-1 mb-1.5">
                          <div class="flex">
                            {#each Array(5) as _, i}
                              <svg class="w-3 h-3 {i < Math.floor(seller.rating) ? 'text-[color:var(--accent-emphasis)]' : 'text-[color:var(--surface-emphasis)]'}" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                              </svg>
                            {/each}
                          </div>
                          <span class="text-xs text-[color:var(--text-secondary)] ml-1">{seller.rating.toFixed(1)}</span>
                        </div>
                      {/if}
                      
                      <!-- View Profile Button -->
                      <div class="w-full">
                        <div class="px-3 py-1.5 bg-[color:var(--primary)] hover:bg-[color:var(--primary-hover)] text-[color:var(--primary-fg)] text-xs font-medium rounded-lg shadow-sm transition-colors">
                          View Profile
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </button>
            </div>
          {/each}
        {/if}
      </div>
    </nav>[36m
  </div>[39m

====================================
[31msvelte-check found 59 errors and 27 warnings in 41 files
[39mK:\driplo-turbo-1\packages\ui:
 ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @repo/ui@0.0.0 check: `svelte-check --tsconfig ./tsconfig.json`
Exit status 1
