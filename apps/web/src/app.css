@reference;
@import 'tailwindcss';
@import '../../../packages/ui/src/styles/tokens.css';
@plugin '@tailwindcss/forms';
@plugin '@tailwindcss/typography';

@source '../../../packages/ui/src/**/*.{html,js,svelte,ts}';

/*
  Driplo Web App Styles
  Extends the core design tokens with app-specific customizations
*/

@theme {
  /* App-specific color mappings for Tailwind classes */
  /* These map to the semantic tokens from tokens.css */
  --color-white: var(--gray-0);
  --color-black: var(--gray-950);
  
  /* Map gray scale for Tailwind utilities */
  --color-gray-50: var(--gray-50);
  --color-gray-100: var(--gray-100);
  --color-gray-200: var(--gray-200);
  --color-gray-300: var(--gray-300);
  --color-gray-400: var(--gray-400);
  --color-gray-500: var(--gray-500);
  --color-gray-600: var(--gray-600);
  --color-gray-700: var(--gray-700);
  --color-gray-800: var(--gray-800);
  --color-gray-900: var(--gray-900);
  
  /* Map other colors for Tailwind utilities */
  --color-blue-50: var(--blue-50);
  --color-blue-100: var(--blue-100);
  --color-blue-200: var(--blue-200);
  --color-blue-300: var(--blue-300);
  --color-blue-400: var(--blue-400);
  --color-blue-500: var(--blue-500);
  --color-blue-600: var(--blue-600);
  --color-blue-700: var(--blue-700);
  --color-blue-800: var(--blue-800);
  --color-blue-900: var(--blue-900);
  
  --color-red-50: var(--red-50);
  --color-red-100: var(--red-100);
  --color-red-200: var(--red-200);
  --color-red-300: var(--red-300);
  --color-red-400: var(--red-400);
  --color-red-500: var(--red-500);
  --color-red-600: var(--red-600);
  --color-red-700: var(--red-700);
  --color-red-800: var(--red-800);
  --color-red-900: var(--red-900);
  
  --color-green-50: var(--green-50);
  --color-green-100: var(--green-100);
  --color-green-200: var(--green-200);
  --color-green-300: var(--green-300);
  --color-green-400: var(--green-400);
  --color-green-500: var(--green-500);
  --color-green-600: var(--green-600);
  --color-green-700: var(--green-700);
  --color-green-800: var(--green-800);
  --color-green-900: var(--green-900);
  
  --color-purple-50: var(--purple-50);
  --color-purple-100: var(--purple-100);
  --color-purple-200: var(--purple-200);
  --color-purple-300: var(--purple-300);
  --color-purple-400: var(--purple-400);
  --color-purple-500: var(--purple-500);
  --color-purple-600: var(--purple-600);
  --color-purple-700: var(--purple-700);
  --color-purple-800: var(--purple-800);
  --color-purple-900: var(--purple-900);
  
  --color-pink-50: var(--pink-50);
  --color-pink-100: var(--pink-100);
  --color-pink-200: var(--pink-200);
  --color-pink-300: var(--pink-300);
  --color-pink-400: var(--pink-400);
  --color-pink-500: var(--pink-500);
  --color-pink-600: var(--pink-600);
  --color-pink-700: var(--pink-700);
  --color-pink-800: var(--pink-800);
  --color-pink-900: var(--pink-900);
  
  --color-orange-50: var(--orange-50);
  --color-orange-100: var(--orange-100);
  --color-orange-200: var(--orange-200);
  --color-orange-300: var(--orange-300);
  --color-orange-400: var(--orange-400);
  --color-orange-500: var(--orange-500);
  --color-orange-600: var(--orange-600);
  --color-orange-700: var(--orange-700);
  --color-orange-800: var(--orange-800);
  --color-orange-900: var(--orange-900);
  
  /* Semantic mappings for better DX */
  --color-success: var(--status-success-solid);
  --color-warning: var(--status-warning-solid);
  --color-info: var(--status-info-solid);
  --color-accent-orange: var(--orange-500);
}

/* Global styles */
@layer base {
  /* Mobile-first typography */
  html {
    font-size: 16px; /* Prevent mobile zoom */
  }
  
  body {
    font-family: var(--font-sans);
    line-height: var(--leading-normal);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }
  
  /* Mobile-first scrolling improvements */
  * {
    scroll-behavior: auto; /* No smooth scrolling on mobile */
    overscroll-behavior: contain;
  }
  
  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
  
  /* Focus ring improvements */
  *:focus {
    outline: 2px solid var(--state-focus);
    outline-offset: 2px;
  }
  
  *:focus:not(:focus-visible) {
    outline: none;
  }
  
  /* Safe area padding for iOS */
  .safe-area {
    padding-top: env(safe-area-inset-top);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
    padding-bottom: env(safe-area-inset-bottom);
  }
}

/* Component layer - custom styles that work with Tailwind */
@layer components {
  /* Mobile-first form inputs - NO DUPLICATES, working with Tailwind's @tailwindcss/forms */
  input[type="text"]:focus:not(.search-input input),
  input[type="email"]:focus:not(.search-input input),
  input[type="password"]:focus:not(.search-input input),
  input[type="tel"]:focus:not(.search-input input),
  input[type="url"]:focus:not(.search-input input),
  input[type="number"]:focus:not(.search-input input),
  textarea:focus:not(.search-input textarea),
  select:focus:not(.search-input select) {
    border-color: var(--state-focus);
    box-shadow: 0 0 0 3px var(--input-focus-ring);
    outline: none;
  }
  
  /* Hover states - only on devices with hover capability */
  @media (hover: hover) {
    input[type="text"]:hover:not(:focus):not(.search-input input),
    input[type="email"]:hover:not(:focus):not(.search-input input),
    input[type="password"]:hover:not(:focus):not(.search-input input),
    input[type="tel"]:hover:not(:focus):not(.search-input input),
    input[type="url"]:hover:not(:focus):not(.search-input input),
    input[type="number"]:hover:not(:focus):not(.search-input input),
    textarea:hover:not(:focus):not(.search-input textarea),
    select:hover:not(:focus):not(.search-input select) {
      @apply border-gray-400;
    }
  }
  
  /* Error states */
  input[aria-invalid="true"],
  textarea[aria-invalid="true"],
  select[aria-invalid="true"] {
    border-color: var(--status-error-solid);
  }
  
  input[aria-invalid="true"]:focus,
  textarea[aria-invalid="true"]:focus,
  select[aria-invalid="true"]:focus {
    border-color: var(--status-error-solid);
    box-shadow: 0 0 0 3px oklch(0.58 0.14 0 / 0.2);
  }
  
  /* Category Pills - Mobile-First with Overflow Protection */
  .category-nav-pill {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 120px; /* Prevent overflow on mobile */
    transition: opacity 0.2s ease;
    -webkit-tap-highlight-color: rgba(0,0,0,0.1);
  }
  
  @media (min-width: 640px) {
    .category-nav-pill {
      max-width: 150px; /* Slightly wider on desktop */
    }
  }

  .category-nav-pill:active {
    opacity: 0.95;
    transform: none;
  }

  /* Loading States - iOS Style */
  .page-loading {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 100;
  }

  /* Filter Button - Clear Actionable State */
  .filter-button {
    border: 1px solid var(--border-default);
    background: var(--surface-base);
    padding: var(--space-2) var(--space-4);
    border-radius: var(--radius-md);
    font-weight: var(--font-medium);
    transition: background-color var(--duration-base) var(--ease-out),
                border-color var(--duration-base) var(--ease-out),
                transform var(--duration-base) var(--ease-out);
    cursor: pointer;
  }

  .filter-button:hover {
    background: var(--surface-subtle);
    border-color: var(--border-emphasis);
  }

  .filter-button:active {
    transform: scale(0.98);
  }

  /* Typography Enhancements - Product Cards */
  .product-price {
    font-weight: var(--font-semibold);
    font-size: var(--text-lg);
    color: var(--text-primary);
    line-height: var(--leading-tight);
  }

  .product-brand {
    font-size: var(--text-sm);
    color: var(--text-tertiary);
    text-transform: uppercase;
    letter-spacing: var(--tracking-wide);
    font-weight: var(--font-medium);
  }

  .product-title {
    font-size: var(--text-sm);
    color: var(--text-secondary);
    font-weight: var(--font-medium);
    line-height: var(--leading-snug);
  }

  /* Search Results Count */
  .results-count {
    font-size: var(--text-base);
    color: var(--text-secondary);
    font-weight: var(--font-medium);
  }

  /* Favorite Heart Animation - Mobile-First */
  .favorite-button {
    transition: transform 0.2s ease;
    cursor: pointer;
    -webkit-tap-highlight-color: rgba(0,0,0,0.1);
  }

  .favorite-button:active {
    transform: scale(0.9);
  }

  .favorite-button.favorited {
    animation: heartPulse var(--duration-slow) var(--ease-out);
    color: var(--status-error-solid);
  }

  @keyframes heartPulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.2);
    }
    100% {
      transform: scale(1);
    }
  }

  /* Success Animation */
  .success-checkmark {
    animation: checkmarkScale 0.4s ease-out;
  }

  @keyframes checkmarkScale {
    0% {
      transform: scale(0) rotate(0deg);
      opacity: 0;
    }
    50% {
      transform: scale(1.1) rotate(180deg);
      opacity: 1;
    }
    100% {
      transform: scale(1) rotate(360deg);
      opacity: 1;
    }
  }
  
  /* Native app-like messaging experience - NO ANIMATIONS */
  .messages-container {
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
    /* No smooth scrolling - instant like native */
  }
  
  /* Fixed input for mobile keyboard */
  @media (max-width: 640px) {
    .chat-input-fixed {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 50;
      background: var(--surface-base);
      padding-bottom: env(safe-area-inset-bottom);
    }
  }
  
  /* Mobile chat view - full screen */
  @media (max-width: 640px) {
    .chat-mobile-full {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 40;
      display: flex;
      flex-direction: column;
    }
  }
  
  /* Checkbox and radio button enhancements */
  input[type="checkbox"],
  input[type="radio"] {
    border-color: var(--border-default);
    color: var(--brand-primary);
  }
  
  input[type="checkbox"]:focus,
  input[type="radio"]:focus {
    box-shadow: 0 0 0 3px var(--input-focus-ring);
    outline: none;
  }
  
  @media (hover: hover) {
    input[type="checkbox"]:hover,
    input[type="radio"]:hover {
      border-color: var(--border-emphasis);
    }
  }
  
  input[type="checkbox"]:checked,
  input[type="radio"]:checked {
    border-color: var(--brand-primary);
    background-color: var(--brand-primary);
  }
}

/* Custom utilities - ONLY non-duplicates */
@utility scrollbar-hide {
  /* Hide scrollbar for Chrome, Safari and Opera */
  &::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

@utility line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

/* Enhanced touch targets for mobile */
@utility touch-manipulation {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

/* Mobile-first badge positioning fixes */
@utility badge-mobile-fix {
  transform: translateZ(0); /* Force GPU acceleration */
  will-change: transform; /* Optimize for mobile */
}

/* High-contrast condition badges for better readability over images */
@layer utilities {
  .condition-badge-enhanced {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15), 0 4px 10px rgba(0, 0, 0, 0.1);
  }
}

/* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   PHASE 3: COMPONENT PATTERNS — Reusable Classes
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */

@layer components {
  /* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     BUTTON SYSTEM — Standardized Sizes & Variants
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
  
  .btn {
    @apply inline-flex items-center justify-center font-medium;
    @apply transition-colors duration-200 ease-out;
    @apply focus:outline-none focus:ring-2 focus:ring-offset-2;
    @apply disabled:opacity-50 disabled:cursor-not-allowed;
    @apply touch-manipulation select-none;
    
    /* Default size (medium) */
    min-height: var(--touch-standard);
    padding-inline: var(--space-4);
    font-size: var(--text-sm);
    border-radius: var(--radius-md);
  }
  
  /* Sizes */
  .btn-xs {
    min-height: var(--size-md);
    padding-inline: var(--space-2);
    font-size: var(--text-xs);
  }
  
  .btn-sm {
    min-height: var(--touch-compact);
    padding-inline: var(--space-3);
    font-size: var(--text-xs);
  }
  
  .btn-lg {
    min-height: var(--touch-primary);
    padding-inline: var(--space-6);
    font-size: var(--text-base);
  }
  
  .btn-xl {
    min-height: var(--size-4xl);
    padding-inline: var(--space-8);
    font-size: var(--text-lg);
  }
  
  /* Variants */
  .btn-primary {
    background: var(--brand-primary);
    color: var(--text-inverse);
  }
  
  .btn-primary:hover:not(:disabled) {
    background: oklch(0.48 0.16 240);
  }
  
  .btn-primary:active:not(:disabled) {
    background: oklch(0.38 0.15 240);
  }
  
  .btn-secondary {
    background: var(--surface-muted);
    color: var(--text-primary);
    border: 1px solid var(--border-default);
  }
  
  .btn-secondary:hover:not(:disabled) {
    background: var(--surface-emphasis);
    border-color: var(--border-emphasis);
  }
  
  .btn-ghost {
    background: transparent;
    color: var(--text-primary);
  }
  
  .btn-ghost:hover:not(:disabled) {
    background: var(--state-hover);
  }
  
  .btn-danger {
    background: var(--color-error);
    color: var(--text-inverse);
  }
  
  .btn-danger:hover:not(:disabled) {
    background: oklch(0.48 0.16 0);
  }
  
  /* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     CARD SYSTEM — Consistent Container Styling
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
  
  .card {
    background: var(--surface-base);
    border: 1px solid var(--border-subtle);
    border-radius: var(--radius-lg);
    padding: var(--space-4);
  }
  
  .card-hover {
    transition: border-color var(--duration-base) var(--ease-out),
                box-shadow var(--duration-base) var(--ease-out),
                transform var(--duration-base) var(--ease-out);
  }
  
  @media (hover: hover) {
    .card-hover:hover {
      border-color: var(--border-default);
      box-shadow: var(--shadow-md);
      transform: translateY(-2px);
    }
  }
  
  .card-sm {
    padding: var(--space-3);
    border-radius: var(--radius-md);
  }
  
  .card-lg {
    padding: var(--space-6);
    border-radius: var(--radius-xl);
  }
  
  /* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     INPUT SYSTEM — Form Control Standards
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
  
  .input {
    width: 100%;
    min-height: var(--touch-primary);
    padding-inline: var(--space-3);
    border: 1px solid var(--border-default);
    border-radius: var(--radius-md);
    font-size: var(--text-base); /* Prevents zoom */
    background: var(--surface-base);
    color: var(--text-primary);
    transition: border-color var(--duration-fast) var(--ease-out);
  }
  
  .input:hover:not(:focus):not(:disabled) {
    border-color: var(--border-emphasis);
  }
  
  .input:focus {
    outline: none;
    border-color: var(--state-focus);
    box-shadow: 0 0 0 3px oklch(0.58 0.14 240 / 0.1);
  }
  
  .input:disabled {
    background: var(--surface-muted);
    color: var(--text-disabled);
    cursor: not-allowed;
  }
  
  .input[aria-invalid="true"] {
    border-color: var(--color-error);
  }
  
  .input[aria-invalid="true"]:focus {
    box-shadow: 0 0 0 3px oklch(0.58 0.14 0 / 0.1);
  }
  
  .input-sm {
    min-height: var(--touch-compact);
    padding-inline: var(--space-2);
    font-size: var(--text-sm);
  }
  
  .input-lg {
    min-height: var(--size-4xl);
    padding-inline: var(--space-4);
    font-size: var(--text-lg);
  }
  
  /* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     BADGE SYSTEM — Status & Category Indicators
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
  
  .badge {
    @apply inline-flex items-center;
    padding-inline: var(--space-2);
    padding-block: var(--space-1);
    border-radius: var(--radius-full);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    line-height: var(--leading-tight);
    white-space: nowrap;
  }
  
  .badge-success {
    background: var(--status-success-bg);
    color: var(--status-success-text);
    border: 1px solid var(--status-success-border);
  }
  
  .badge-error {
    background: var(--status-error-bg);
    color: var(--status-error-text);
    border: 1px solid var(--status-error-border);
  }
  
  .badge-warning {
    background: var(--status-warning-bg);
    color: var(--status-warning-text);
    border: 1px solid var(--status-warning-border);
  }
  
  .badge-info {
    background: var(--status-info-bg);
    color: var(--status-info-text);
    border: 1px solid var(--status-info-border);
  }
  
  .badge-neutral {
    background: var(--surface-muted);
    color: var(--text-secondary);
    border: 1px solid var(--border-default);
  }
  
  /* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     UTILITY CLASSES — Common Patterns
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
  
  .stack {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
  }
  
  .stack-sm {
    gap: var(--space-2);
  }
  
  .stack-lg {
    gap: var(--space-6);
  }
  
  .cluster {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
    align-items: center;
  }
  
  .center {
    display: grid;
    place-items: center;
  }
  
  .container-mobile {
    width: 100%;
    max-width: 100vw;
    padding-inline: var(--space-4);
    margin-inline: auto;
  }
  
  @media (min-width: 640px) {
    .container-mobile {
      max-width: 640px;
    }
  }
  
  @media (min-width: 768px) {
    .container-mobile {
      max-width: 768px;
      padding-inline: var(--space-6);
    }
  }
  
  @media (min-width: 1024px) {
    .container-mobile {
      max-width: 1024px;
      padding-inline: var(--space-8);
    }
  }
}